
EPS  APPPLICATION.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000100  00800200  0000219a  0000222e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000219a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000297  00800300  00800300  0000232e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000232e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000238c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e0  00000000  00000000  000023cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000391a  00000000  00000000  000025ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001574  00000000  00000000  00005ec6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015d3  00000000  00000000  0000743a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004a0  00000000  00000000  00008a10  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a83  00000000  00000000  00008eb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d26  00000000  00000000  00009933  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000188  00000000  00000000  0000a659  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	b2 c0       	rjmp	.+356    	; 0x166 <__ctors_end>
       2:	00 00       	nop
       4:	d1 c0       	rjmp	.+418    	; 0x1a8 <__bad_interrupt>
       6:	00 00       	nop
       8:	cf c0       	rjmp	.+414    	; 0x1a8 <__bad_interrupt>
       a:	00 00       	nop
       c:	cd c0       	rjmp	.+410    	; 0x1a8 <__bad_interrupt>
       e:	00 00       	nop
      10:	cb c0       	rjmp	.+406    	; 0x1a8 <__bad_interrupt>
      12:	00 00       	nop
      14:	c9 c0       	rjmp	.+402    	; 0x1a8 <__bad_interrupt>
      16:	00 00       	nop
      18:	c7 c0       	rjmp	.+398    	; 0x1a8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	c5 c0       	rjmp	.+394    	; 0x1a8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	c3 c0       	rjmp	.+390    	; 0x1a8 <__bad_interrupt>
      22:	00 00       	nop
      24:	c1 c0       	rjmp	.+386    	; 0x1a8 <__bad_interrupt>
      26:	00 00       	nop
      28:	bf c0       	rjmp	.+382    	; 0x1a8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	bd c0       	rjmp	.+378    	; 0x1a8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	bb c0       	rjmp	.+374    	; 0x1a8 <__bad_interrupt>
      32:	00 00       	nop
      34:	b9 c0       	rjmp	.+370    	; 0x1a8 <__bad_interrupt>
      36:	00 00       	nop
      38:	b7 c0       	rjmp	.+366    	; 0x1a8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	b5 c0       	rjmp	.+362    	; 0x1a8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	b3 c0       	rjmp	.+358    	; 0x1a8 <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 d3 0b 	jmp	0x17a6	; 0x17a6 <__vector_17>
      48:	af c0       	rjmp	.+350    	; 0x1a8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	ad c0       	rjmp	.+346    	; 0x1a8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ab c0       	rjmp	.+342    	; 0x1a8 <__bad_interrupt>
      52:	00 00       	nop
      54:	a9 c0       	rjmp	.+338    	; 0x1a8 <__bad_interrupt>
      56:	00 00       	nop
      58:	a7 c0       	rjmp	.+334    	; 0x1a8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	a5 c0       	rjmp	.+330    	; 0x1a8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	a3 c0       	rjmp	.+326    	; 0x1a8 <__bad_interrupt>
      62:	00 00       	nop
      64:	a1 c0       	rjmp	.+322    	; 0x1a8 <__bad_interrupt>
      66:	00 00       	nop
      68:	9f c0       	rjmp	.+318    	; 0x1a8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	9d c0       	rjmp	.+314    	; 0x1a8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	9b c0       	rjmp	.+310    	; 0x1a8 <__bad_interrupt>
      72:	00 00       	nop
      74:	99 c0       	rjmp	.+306    	; 0x1a8 <__bad_interrupt>
      76:	00 00       	nop
      78:	97 c0       	rjmp	.+302    	; 0x1a8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	95 c0       	rjmp	.+298    	; 0x1a8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	93 c0       	rjmp	.+294    	; 0x1a8 <__bad_interrupt>
      82:	00 00       	nop
      84:	91 c0       	rjmp	.+290    	; 0x1a8 <__bad_interrupt>
      86:	00 00       	nop
      88:	8f c0       	rjmp	.+286    	; 0x1a8 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	8d c0       	rjmp	.+282    	; 0x1a8 <__bad_interrupt>
      8e:	00 00       	nop
      90:	8b c0       	rjmp	.+278    	; 0x1a8 <__bad_interrupt>
      92:	00 00       	nop
      94:	89 c0       	rjmp	.+274    	; 0x1a8 <__bad_interrupt>
      96:	00 00       	nop
      98:	87 c0       	rjmp	.+270    	; 0x1a8 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	85 c0       	rjmp	.+266    	; 0x1a8 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	83 c0       	rjmp	.+262    	; 0x1a8 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	81 c0       	rjmp	.+258    	; 0x1a8 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	7f c0       	rjmp	.+254    	; 0x1a8 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	7d c0       	rjmp	.+250    	; 0x1a8 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	7b c0       	rjmp	.+246    	; 0x1a8 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	79 c0       	rjmp	.+242    	; 0x1a8 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	77 c0       	rjmp	.+238    	; 0x1a8 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	75 c0       	rjmp	.+234    	; 0x1a8 <__bad_interrupt>
      be:	00 00       	nop
      c0:	73 c0       	rjmp	.+230    	; 0x1a8 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	71 c0       	rjmp	.+226    	; 0x1a8 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	6f c0       	rjmp	.+222    	; 0x1a8 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	0c 94 fb 0b 	jmp	0x17f6	; 0x17f6 <__vector_51>
      d0:	6b c0       	rjmp	.+214    	; 0x1a8 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	69 c0       	rjmp	.+210    	; 0x1a8 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	67 c0       	rjmp	.+206    	; 0x1a8 <__bad_interrupt>
      da:	00 00       	nop
      dc:	65 c0       	rjmp	.+202    	; 0x1a8 <__bad_interrupt>
      de:	00 00       	nop
      e0:	63 c0       	rjmp	.+198    	; 0x1a8 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	07 63       	ori	r16, 0x37	; 55
      e6:	42 36       	cpi	r20, 0x62	; 98
      e8:	b7 9b       	sbis	0x16, 7	; 22
      ea:	d8 a7       	std	Y+40, r29	; 0x28
      ec:	1a 39       	cpi	r17, 0x9A	; 154
      ee:	68 56       	subi	r22, 0x68	; 104
      f0:	18 ae       	std	Y+56, r1	; 0x38
      f2:	ba ab       	std	Y+50, r27	; 0x32
      f4:	55 8c       	ldd	r5, Z+29	; 0x1d
      f6:	1d 3c       	cpi	r17, 0xCD	; 205
      f8:	b7 cc       	rjmp	.-1682   	; 0xfffffa68 <__eeprom_end+0xff7efa68>
      fa:	57 63       	ori	r21, 0x37	; 55
      fc:	bd 6d       	ori	r27, 0xDD	; 221
      fe:	ed fd       	.word	0xfded	; ????
     100:	75 3e       	cpi	r23, 0xE5	; 229
     102:	f6 17       	cp	r31, r22
     104:	72 31       	cpi	r23, 0x12	; 18
     106:	bf 00       	.word	0x00bf	; ????
     108:	00 00       	nop
     10a:	80 3f       	cpi	r24, 0xF0	; 240
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 00       	nop
     110:	be 92       	st	-X, r11
     112:	24 49       	sbci	r18, 0x94	; 148
     114:	12 3e       	cpi	r17, 0xE2	; 226
     116:	ab aa       	std	Y+51, r10	; 0x33
     118:	aa 2a       	or	r10, r26
     11a:	be cd       	rjmp	.-1156   	; 0xfffffc98 <__eeprom_end+0xff7efc98>
     11c:	cc cc       	rjmp	.-1640   	; 0xfffffab6 <__eeprom_end+0xff7efab6>
     11e:	4c 3e       	cpi	r20, 0xEC	; 236
     120:	00 00       	nop
     122:	00 80       	ld	r0, Z
     124:	be ab       	std	Y+54, r27	; 0x36
     126:	aa aa       	std	Y+50, r10	; 0x32
     128:	aa 3e       	cpi	r26, 0xEA	; 234
     12a:	00 00       	nop
     12c:	00 00       	nop
     12e:	bf 00       	.word	0x00bf	; ????
     130:	00 00       	nop
     132:	80 3f       	cpi	r24, 0xF0	; 240
     134:	00 00       	nop
     136:	00 00       	nop
     138:	00 08       	sbc	r0, r0
     13a:	41 78       	andi	r20, 0x81	; 129
     13c:	d3 bb       	out	0x13, r29	; 19
     13e:	43 87       	std	Z+11, r20	; 0x0b
     140:	d1 13       	cpse	r29, r17
     142:	3d 19       	sub	r19, r13
     144:	0e 3c       	cpi	r16, 0xCE	; 206
     146:	c3 bd       	out	0x23, r28	; 35
     148:	42 82       	std	Z+2, r4	; 0x02
     14a:	ad 2b       	or	r26, r29
     14c:	3e 68       	ori	r19, 0x8E	; 142
     14e:	ec 82       	std	Y+4, r14	; 0x04
     150:	76 be       	out	0x36, r7	; 54
     152:	d9 8f       	std	Y+25, r29	; 0x19
     154:	e1 a9       	ldd	r30, Z+49	; 0x31
     156:	3e 4c       	sbci	r19, 0xCE	; 206
     158:	80 ef       	ldi	r24, 0xF0	; 240
     15a:	ff be       	out	0x3f, r15	; 63
     15c:	01 c4       	rjmp	.+2050   	; 0x960 <REAL_VALUE_SENSOR+0x1de>
     15e:	ff 7f       	andi	r31, 0xFF	; 255
     160:	3f 00       	.word	0x003f	; ????
     162:	00 00       	nop
	...

00000166 <__ctors_end>:
     166:	11 24       	eor	r1, r1
     168:	1f be       	out	0x3f, r1	; 63
     16a:	cf ef       	ldi	r28, 0xFF	; 255
     16c:	d1 e2       	ldi	r29, 0x21	; 33
     16e:	de bf       	out	0x3e, r29	; 62
     170:	cd bf       	out	0x3d, r28	; 61
     172:	00 e0       	ldi	r16, 0x00	; 0
     174:	0c bf       	out	0x3c, r16	; 60

00000176 <__do_copy_data>:
     176:	13 e0       	ldi	r17, 0x03	; 3
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b2 e0       	ldi	r27, 0x02	; 2
     17c:	ea e9       	ldi	r30, 0x9A	; 154
     17e:	f1 e2       	ldi	r31, 0x21	; 33
     180:	00 e0       	ldi	r16, 0x00	; 0
     182:	0b bf       	out	0x3b, r16	; 59
     184:	02 c0       	rjmp	.+4      	; 0x18a <__do_copy_data+0x14>
     186:	07 90       	elpm	r0, Z+
     188:	0d 92       	st	X+, r0
     18a:	a0 30       	cpi	r26, 0x00	; 0
     18c:	b1 07       	cpc	r27, r17
     18e:	d9 f7       	brne	.-10     	; 0x186 <__do_copy_data+0x10>

00000190 <__do_clear_bss>:
     190:	25 e0       	ldi	r18, 0x05	; 5
     192:	a0 e0       	ldi	r26, 0x00	; 0
     194:	b3 e0       	ldi	r27, 0x03	; 3
     196:	01 c0       	rjmp	.+2      	; 0x19a <.do_clear_bss_start>

00000198 <.do_clear_bss_loop>:
     198:	1d 92       	st	X+, r1

0000019a <.do_clear_bss_start>:
     19a:	a7 39       	cpi	r26, 0x97	; 151
     19c:	b2 07       	cpc	r27, r18
     19e:	e1 f7       	brne	.-8      	; 0x198 <.do_clear_bss_loop>
     1a0:	0e 94 22 0c 	call	0x1844	; 0x1844 <main>
     1a4:	0c 94 cb 10 	jmp	0x2196	; 0x2196 <_exit>

000001a8 <__bad_interrupt>:
     1a8:	2b cf       	rjmp	.-426    	; 0x0 <__vectors>

000001aa <localtime>:
     1aa:	65 e8       	ldi	r22, 0x85	; 133
     1ac:	75 e0       	ldi	r23, 0x05	; 5
     1ae:	03 d0       	rcall	.+6      	; 0x1b6 <localtime_r>
     1b0:	85 e8       	ldi	r24, 0x85	; 133
     1b2:	95 e0       	ldi	r25, 0x05	; 5
     1b4:	08 95       	ret

000001b6 <localtime_r>:
     1b6:	cf 92       	push	r12
     1b8:	df 92       	push	r13
     1ba:	ef 92       	push	r14
     1bc:	ff 92       	push	r15
     1be:	0f 93       	push	r16
     1c0:	1f 93       	push	r17
     1c2:	cf 93       	push	r28
     1c4:	df 93       	push	r29
     1c6:	00 d0       	rcall	.+0      	; 0x1c8 <localtime_r+0x12>
     1c8:	1f 92       	push	r1
     1ca:	cd b7       	in	r28, 0x3d	; 61
     1cc:	de b7       	in	r29, 0x3e	; 62
     1ce:	6c 01       	movw	r12, r24
     1d0:	7b 01       	movw	r14, r22
     1d2:	e0 91 95 05 	lds	r30, 0x0595	; 0x800595 <__dst_ptr>
     1d6:	f0 91 96 05 	lds	r31, 0x0596	; 0x800596 <__dst_ptr+0x1>
     1da:	30 97       	sbiw	r30, 0x00	; 0
     1dc:	29 f0       	breq	.+10     	; 0x1e8 <localtime_r+0x32>
     1de:	61 e9       	ldi	r22, 0x91	; 145
     1e0:	75 e0       	ldi	r23, 0x05	; 5
     1e2:	19 95       	eicall
     1e4:	8c 01       	movw	r16, r24
     1e6:	02 c0       	rjmp	.+4      	; 0x1ec <localtime_r+0x36>
     1e8:	0f ef       	ldi	r16, 0xFF	; 255
     1ea:	1f ef       	ldi	r17, 0xFF	; 255
     1ec:	f6 01       	movw	r30, r12
     1ee:	40 81       	ld	r20, Z
     1f0:	51 81       	ldd	r21, Z+1	; 0x01
     1f2:	62 81       	ldd	r22, Z+2	; 0x02
     1f4:	73 81       	ldd	r23, Z+3	; 0x03
     1f6:	80 91 91 05 	lds	r24, 0x0591	; 0x800591 <__utc_offset>
     1fa:	90 91 92 05 	lds	r25, 0x0592	; 0x800592 <__utc_offset+0x1>
     1fe:	a0 91 93 05 	lds	r26, 0x0593	; 0x800593 <__utc_offset+0x2>
     202:	b0 91 94 05 	lds	r27, 0x0594	; 0x800594 <__utc_offset+0x3>
     206:	84 0f       	add	r24, r20
     208:	95 1f       	adc	r25, r21
     20a:	a6 1f       	adc	r26, r22
     20c:	b7 1f       	adc	r27, r23
     20e:	10 16       	cp	r1, r16
     210:	11 06       	cpc	r1, r17
     212:	4c f4       	brge	.+18     	; 0x226 <localtime_r+0x70>
     214:	a8 01       	movw	r20, r16
     216:	01 2e       	mov	r0, r17
     218:	00 0c       	add	r0, r0
     21a:	66 0b       	sbc	r22, r22
     21c:	77 0b       	sbc	r23, r23
     21e:	84 0f       	add	r24, r20
     220:	95 1f       	adc	r25, r21
     222:	a6 1f       	adc	r26, r22
     224:	b7 1f       	adc	r27, r23
     226:	89 83       	std	Y+1, r24	; 0x01
     228:	9a 83       	std	Y+2, r25	; 0x02
     22a:	ab 83       	std	Y+3, r26	; 0x03
     22c:	bc 83       	std	Y+4, r27	; 0x04
     22e:	b7 01       	movw	r22, r14
     230:	ce 01       	movw	r24, r28
     232:	01 96       	adiw	r24, 0x01	; 1
     234:	b1 d0       	rcall	.+354    	; 0x398 <gmtime_r>
     236:	f7 01       	movw	r30, r14
     238:	13 87       	std	Z+11, r17	; 0x0b
     23a:	02 87       	std	Z+10, r16	; 0x0a
     23c:	0f 90       	pop	r0
     23e:	0f 90       	pop	r0
     240:	0f 90       	pop	r0
     242:	0f 90       	pop	r0
     244:	df 91       	pop	r29
     246:	cf 91       	pop	r28
     248:	1f 91       	pop	r17
     24a:	0f 91       	pop	r16
     24c:	ff 90       	pop	r15
     24e:	ef 90       	pop	r14
     250:	df 90       	pop	r13
     252:	cf 90       	pop	r12
     254:	08 95       	ret

00000256 <mktime>:
     256:	cf 92       	push	r12
     258:	df 92       	push	r13
     25a:	ef 92       	push	r14
     25c:	ff 92       	push	r15
     25e:	0f 93       	push	r16
     260:	1f 93       	push	r17
     262:	cf 93       	push	r28
     264:	df 93       	push	r29
     266:	00 d0       	rcall	.+0      	; 0x268 <mktime+0x12>
     268:	1f 92       	push	r1
     26a:	cd b7       	in	r28, 0x3d	; 61
     26c:	de b7       	in	r29, 0x3e	; 62
     26e:	8c 01       	movw	r16, r24
     270:	6f d1       	rcall	.+734    	; 0x550 <mk_gmtime>
     272:	69 83       	std	Y+1, r22	; 0x01
     274:	7a 83       	std	Y+2, r23	; 0x02
     276:	8b 83       	std	Y+3, r24	; 0x03
     278:	9c 83       	std	Y+4, r25	; 0x04
     27a:	f8 01       	movw	r30, r16
     27c:	82 85       	ldd	r24, Z+10	; 0x0a
     27e:	93 85       	ldd	r25, Z+11	; 0x0b
     280:	97 ff       	sbrs	r25, 7
     282:	0e c0       	rjmp	.+28     	; 0x2a0 <mktime+0x4a>
     284:	e0 91 95 05 	lds	r30, 0x0595	; 0x800595 <__dst_ptr>
     288:	f0 91 96 05 	lds	r31, 0x0596	; 0x800596 <__dst_ptr+0x1>
     28c:	30 97       	sbiw	r30, 0x00	; 0
     28e:	41 f0       	breq	.+16     	; 0x2a0 <mktime+0x4a>
     290:	61 e9       	ldi	r22, 0x91	; 145
     292:	75 e0       	ldi	r23, 0x05	; 5
     294:	ce 01       	movw	r24, r28
     296:	01 96       	adiw	r24, 0x01	; 1
     298:	19 95       	eicall
     29a:	f8 01       	movw	r30, r16
     29c:	93 87       	std	Z+11, r25	; 0x0b
     29e:	82 87       	std	Z+10, r24	; 0x0a
     2a0:	f8 01       	movw	r30, r16
     2a2:	82 85       	ldd	r24, Z+10	; 0x0a
     2a4:	93 85       	ldd	r25, Z+11	; 0x0b
     2a6:	18 16       	cp	r1, r24
     2a8:	19 06       	cpc	r1, r25
     2aa:	94 f4       	brge	.+36     	; 0x2d0 <mktime+0x7a>
     2ac:	09 2e       	mov	r0, r25
     2ae:	00 0c       	add	r0, r0
     2b0:	aa 0b       	sbc	r26, r26
     2b2:	bb 0b       	sbc	r27, r27
     2b4:	49 81       	ldd	r20, Y+1	; 0x01
     2b6:	5a 81       	ldd	r21, Y+2	; 0x02
     2b8:	6b 81       	ldd	r22, Y+3	; 0x03
     2ba:	7c 81       	ldd	r23, Y+4	; 0x04
     2bc:	6a 01       	movw	r12, r20
     2be:	7b 01       	movw	r14, r22
     2c0:	c8 1a       	sub	r12, r24
     2c2:	d9 0a       	sbc	r13, r25
     2c4:	ea 0a       	sbc	r14, r26
     2c6:	fb 0a       	sbc	r15, r27
     2c8:	c9 82       	std	Y+1, r12	; 0x01
     2ca:	da 82       	std	Y+2, r13	; 0x02
     2cc:	eb 82       	std	Y+3, r14	; 0x03
     2ce:	fc 82       	std	Y+4, r15	; 0x04
     2d0:	89 81       	ldd	r24, Y+1	; 0x01
     2d2:	9a 81       	ldd	r25, Y+2	; 0x02
     2d4:	ab 81       	ldd	r26, Y+3	; 0x03
     2d6:	bc 81       	ldd	r27, Y+4	; 0x04
     2d8:	40 91 91 05 	lds	r20, 0x0591	; 0x800591 <__utc_offset>
     2dc:	50 91 92 05 	lds	r21, 0x0592	; 0x800592 <__utc_offset+0x1>
     2e0:	60 91 93 05 	lds	r22, 0x0593	; 0x800593 <__utc_offset+0x2>
     2e4:	70 91 94 05 	lds	r23, 0x0594	; 0x800594 <__utc_offset+0x3>
     2e8:	84 1b       	sub	r24, r20
     2ea:	95 0b       	sbc	r25, r21
     2ec:	a6 0b       	sbc	r26, r22
     2ee:	b7 0b       	sbc	r27, r23
     2f0:	89 83       	std	Y+1, r24	; 0x01
     2f2:	9a 83       	std	Y+2, r25	; 0x02
     2f4:	ab 83       	std	Y+3, r26	; 0x03
     2f6:	bc 83       	std	Y+4, r27	; 0x04
     2f8:	b8 01       	movw	r22, r16
     2fa:	ce 01       	movw	r24, r28
     2fc:	01 96       	adiw	r24, 0x01	; 1
     2fe:	5b df       	rcall	.-330    	; 0x1b6 <localtime_r>
     300:	69 81       	ldd	r22, Y+1	; 0x01
     302:	7a 81       	ldd	r23, Y+2	; 0x02
     304:	8b 81       	ldd	r24, Y+3	; 0x03
     306:	9c 81       	ldd	r25, Y+4	; 0x04
     308:	0f 90       	pop	r0
     30a:	0f 90       	pop	r0
     30c:	0f 90       	pop	r0
     30e:	0f 90       	pop	r0
     310:	df 91       	pop	r29
     312:	cf 91       	pop	r28
     314:	1f 91       	pop	r17
     316:	0f 91       	pop	r16
     318:	ff 90       	pop	r15
     31a:	ef 90       	pop	r14
     31c:	df 90       	pop	r13
     31e:	cf 90       	pop	r12
     320:	08 95       	ret

00000322 <set_system_time>:
     322:	0f b6       	in	r0, 0x3f	; 63
     324:	f8 94       	cli
     326:	60 93 81 05 	sts	0x0581, r22	; 0x800581 <__system_time>
     32a:	70 93 82 05 	sts	0x0582, r23	; 0x800582 <__system_time+0x1>
     32e:	80 93 83 05 	sts	0x0583, r24	; 0x800583 <__system_time+0x2>
     332:	90 93 84 05 	sts	0x0584, r25	; 0x800584 <__system_time+0x3>
     336:	0f be       	out	0x3f, r0	; 63
     338:	08 95       	ret

0000033a <time>:
     33a:	fc 01       	movw	r30, r24
     33c:	0f b6       	in	r0, 0x3f	; 63
     33e:	f8 94       	cli
     340:	60 91 81 05 	lds	r22, 0x0581	; 0x800581 <__system_time>
     344:	70 91 82 05 	lds	r23, 0x0582	; 0x800582 <__system_time+0x1>
     348:	80 91 83 05 	lds	r24, 0x0583	; 0x800583 <__system_time+0x2>
     34c:	90 91 84 05 	lds	r25, 0x0584	; 0x800584 <__system_time+0x3>
     350:	0f be       	out	0x3f, r0	; 63
     352:	30 97       	sbiw	r30, 0x00	; 0
     354:	21 f0       	breq	.+8      	; 0x35e <time+0x24>
     356:	60 83       	st	Z, r22
     358:	71 83       	std	Z+1, r23	; 0x01
     35a:	82 83       	std	Z+2, r24	; 0x02
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	08 95       	ret

00000360 <system_tick>:
     360:	8f 93       	push	r24
     362:	8f b7       	in	r24, 0x3f	; 63
     364:	8f 93       	push	r24
     366:	f8 94       	cli
     368:	80 91 81 05 	lds	r24, 0x0581	; 0x800581 <__system_time>
     36c:	8f 5f       	subi	r24, 0xFF	; 255
     36e:	80 93 81 05 	sts	0x0581, r24	; 0x800581 <__system_time>
     372:	80 91 82 05 	lds	r24, 0x0582	; 0x800582 <__system_time+0x1>
     376:	8f 4f       	sbci	r24, 0xFF	; 255
     378:	80 93 82 05 	sts	0x0582, r24	; 0x800582 <__system_time+0x1>
     37c:	80 91 83 05 	lds	r24, 0x0583	; 0x800583 <__system_time+0x2>
     380:	8f 4f       	sbci	r24, 0xFF	; 255
     382:	80 93 83 05 	sts	0x0583, r24	; 0x800583 <__system_time+0x2>
     386:	80 91 84 05 	lds	r24, 0x0584	; 0x800584 <__system_time+0x3>
     38a:	8f 4f       	sbci	r24, 0xFF	; 255
     38c:	80 93 84 05 	sts	0x0584, r24	; 0x800584 <__system_time+0x3>
     390:	8f 91       	pop	r24
     392:	8f bf       	out	0x3f, r24	; 63
     394:	8f 91       	pop	r24
     396:	08 95       	ret

00000398 <gmtime_r>:
     398:	cf 92       	push	r12
     39a:	df 92       	push	r13
     39c:	ef 92       	push	r14
     39e:	ff 92       	push	r15
     3a0:	0f 93       	push	r16
     3a2:	1f 93       	push	r17
     3a4:	cf 93       	push	r28
     3a6:	df 93       	push	r29
     3a8:	cd b7       	in	r28, 0x3d	; 61
     3aa:	de b7       	in	r29, 0x3e	; 62
     3ac:	28 97       	sbiw	r28, 0x08	; 8
     3ae:	0f b6       	in	r0, 0x3f	; 63
     3b0:	f8 94       	cli
     3b2:	de bf       	out	0x3e, r29	; 62
     3b4:	0f be       	out	0x3f, r0	; 63
     3b6:	cd bf       	out	0x3d, r28	; 61
     3b8:	8b 01       	movw	r16, r22
     3ba:	fc 01       	movw	r30, r24
     3bc:	60 81       	ld	r22, Z
     3be:	71 81       	ldd	r23, Z+1	; 0x01
     3c0:	82 81       	ldd	r24, Z+2	; 0x02
     3c2:	93 81       	ldd	r25, Z+3	; 0x03
     3c4:	20 e8       	ldi	r18, 0x80	; 128
     3c6:	31 e5       	ldi	r19, 0x51	; 81
     3c8:	41 e0       	ldi	r20, 0x01	; 1
     3ca:	50 e0       	ldi	r21, 0x00	; 0
     3cc:	0e 94 6e 10 	call	0x20dc	; 0x20dc <__udivmodsi4>
     3d0:	69 01       	movw	r12, r18
     3d2:	7a 01       	movw	r14, r20
     3d4:	2c e3       	ldi	r18, 0x3C	; 60
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	40 e0       	ldi	r20, 0x00	; 0
     3da:	50 e0       	ldi	r21, 0x00	; 0
     3dc:	0e 94 90 10 	call	0x2120	; 0x2120 <__divmodsi4>
     3e0:	29 83       	std	Y+1, r18	; 0x01
     3e2:	3a 83       	std	Y+2, r19	; 0x02
     3e4:	4b 83       	std	Y+3, r20	; 0x03
     3e6:	5c 83       	std	Y+4, r21	; 0x04
     3e8:	89 81       	ldd	r24, Y+1	; 0x01
     3ea:	9a 81       	ldd	r25, Y+2	; 0x02
     3ec:	ab 81       	ldd	r26, Y+3	; 0x03
     3ee:	bc 81       	ldd	r27, Y+4	; 0x04
     3f0:	f8 01       	movw	r30, r16
     3f2:	60 83       	st	Z, r22
     3f4:	6c e3       	ldi	r22, 0x3C	; 60
     3f6:	70 e0       	ldi	r23, 0x00	; 0
     3f8:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <__divmodhi4>
     3fc:	dc 01       	movw	r26, r24
     3fe:	cb 01       	movw	r24, r22
     400:	f8 01       	movw	r30, r16
     402:	a1 83       	std	Z+1, r26	; 0x01
     404:	82 83       	std	Z+2, r24	; 0x02
     406:	c6 01       	movw	r24, r12
     408:	06 96       	adiw	r24, 0x06	; 6
     40a:	67 e0       	ldi	r22, 0x07	; 7
     40c:	70 e0       	ldi	r23, 0x00	; 0
     40e:	0e 94 47 10 	call	0x208e	; 0x208e <__udivmodhi4>
     412:	84 83       	std	Z+4, r24	; 0x04
     414:	2d ea       	ldi	r18, 0xAD	; 173
     416:	3e e8       	ldi	r19, 0x8E	; 142
     418:	40 e0       	ldi	r20, 0x00	; 0
     41a:	50 e0       	ldi	r21, 0x00	; 0
     41c:	c7 01       	movw	r24, r14
     41e:	b6 01       	movw	r22, r12
     420:	0e 94 90 10 	call	0x2120	; 0x2120 <__divmodsi4>
     424:	29 83       	std	Y+1, r18	; 0x01
     426:	3a 83       	std	Y+2, r19	; 0x02
     428:	6d 83       	std	Y+5, r22	; 0x05
     42a:	7e 83       	std	Y+6, r23	; 0x06
     42c:	8f 83       	std	Y+7, r24	; 0x07
     42e:	98 87       	std	Y+8, r25	; 0x08
     430:	89 81       	ldd	r24, Y+1	; 0x01
     432:	9a 81       	ldd	r25, Y+2	; 0x02
     434:	24 e6       	ldi	r18, 0x64	; 100
     436:	28 9f       	mul	r18, r24
     438:	60 01       	movw	r12, r0
     43a:	29 9f       	mul	r18, r25
     43c:	d0 0c       	add	r13, r0
     43e:	11 24       	eor	r1, r1
     440:	6d 81       	ldd	r22, Y+5	; 0x05
     442:	7e 81       	ldd	r23, Y+6	; 0x06
     444:	8f 81       	ldd	r24, Y+7	; 0x07
     446:	98 85       	ldd	r25, Y+8	; 0x08
     448:	25 eb       	ldi	r18, 0xB5	; 181
     44a:	35 e0       	ldi	r19, 0x05	; 5
     44c:	40 e0       	ldi	r20, 0x00	; 0
     44e:	50 e0       	ldi	r21, 0x00	; 0
     450:	0e 94 90 10 	call	0x2120	; 0x2120 <__divmodsi4>
     454:	29 83       	std	Y+1, r18	; 0x01
     456:	3a 83       	std	Y+2, r19	; 0x02
     458:	6d 83       	std	Y+5, r22	; 0x05
     45a:	7e 83       	std	Y+6, r23	; 0x06
     45c:	e9 80       	ldd	r14, Y+1	; 0x01
     45e:	fa 80       	ldd	r15, Y+2	; 0x02
     460:	ee 0c       	add	r14, r14
     462:	ff 1c       	adc	r15, r15
     464:	ee 0c       	add	r14, r14
     466:	ff 1c       	adc	r15, r15
     468:	ec 0c       	add	r14, r12
     46a:	fd 1c       	adc	r15, r13
     46c:	8d 81       	ldd	r24, Y+5	; 0x05
     46e:	9e 81       	ldd	r25, Y+6	; 0x06
     470:	f5 e6       	ldi	r31, 0x65	; 101
     472:	ef 16       	cp	r14, r31
     474:	f1 04       	cpc	r15, r1
     476:	10 f0       	brcs	.+4      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
     478:	01 96       	adiw	r24, 0x01	; 1
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
     47c:	24 e6       	ldi	r18, 0x64	; 100
     47e:	e2 16       	cp	r14, r18
     480:	f1 04       	cpc	r15, r1
     482:	19 f0       	breq	.+6      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
     484:	21 e0       	ldi	r18, 0x01	; 1
     486:	30 e0       	ldi	r19, 0x00	; 0
     488:	02 c0       	rjmp	.+4      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     48a:	20 e0       	ldi	r18, 0x00	; 0
     48c:	30 e0       	ldi	r19, 0x00	; 0
     48e:	a9 01       	movw	r20, r18
     490:	44 59       	subi	r20, 0x94	; 148
     492:	5e 4f       	sbci	r21, 0xFE	; 254
     494:	48 17       	cp	r20, r24
     496:	59 07       	cpc	r21, r25
     498:	68 f4       	brcc	.+26     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
     49a:	6d e6       	ldi	r22, 0x6D	; 109
     49c:	71 e0       	ldi	r23, 0x01	; 1
     49e:	82 1b       	sub	r24, r18
     4a0:	93 0b       	sbc	r25, r19
     4a2:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <__divmodhi4>
     4a6:	dc 01       	movw	r26, r24
     4a8:	cb 01       	movw	r24, r22
     4aa:	e8 0e       	add	r14, r24
     4ac:	f9 1e       	adc	r15, r25
     4ae:	cd 01       	movw	r24, r26
     4b0:	20 e0       	ldi	r18, 0x00	; 0
     4b2:	30 e0       	ldi	r19, 0x00	; 0
     4b4:	44 e6       	ldi	r20, 0x64	; 100
     4b6:	e4 0e       	add	r14, r20
     4b8:	f1 1c       	adc	r15, r1
     4ba:	f8 01       	movw	r30, r16
     4bc:	f7 82       	std	Z+7, r15	; 0x07
     4be:	e6 82       	std	Z+6, r14	; 0x06
     4c0:	91 87       	std	Z+9, r25	; 0x09
     4c2:	80 87       	std	Z+8, r24	; 0x08
     4c4:	25 5c       	subi	r18, 0xC5	; 197
     4c6:	3f 4f       	sbci	r19, 0xFF	; 255
     4c8:	82 17       	cp	r24, r18
     4ca:	93 07       	cpc	r25, r19
     4cc:	48 f4       	brcc	.+18     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
     4ce:	6f e1       	ldi	r22, 0x1F	; 31
     4d0:	70 e0       	ldi	r23, 0x00	; 0
     4d2:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <__divmodhi4>
     4d6:	dc 01       	movw	r26, r24
     4d8:	cb 01       	movw	r24, r22
     4da:	f8 01       	movw	r30, r16
     4dc:	85 83       	std	Z+5, r24	; 0x05
     4de:	22 c0       	rjmp	.+68     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
     4e0:	69 e9       	ldi	r22, 0x99	; 153
     4e2:	70 e0       	ldi	r23, 0x00	; 0
     4e4:	82 1b       	sub	r24, r18
     4e6:	93 0b       	sbc	r25, r19
     4e8:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <__divmodhi4>
     4ec:	dc 01       	movw	r26, r24
     4ee:	cb 01       	movw	r24, r22
     4f0:	f8 2e       	mov	r15, r24
     4f2:	ff 0c       	add	r15, r15
     4f4:	ff 0c       	add	r15, r15
     4f6:	f8 0e       	add	r15, r24
     4f8:	6d e3       	ldi	r22, 0x3D	; 61
     4fa:	70 e0       	ldi	r23, 0x00	; 0
     4fc:	cd 01       	movw	r24, r26
     4fe:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <__divmodhi4>
     502:	dc 01       	movw	r26, r24
     504:	cb 01       	movw	r24, r22
     506:	e8 2e       	mov	r14, r24
     508:	ee 0c       	add	r14, r14
     50a:	6f e1       	ldi	r22, 0x1F	; 31
     50c:	70 e0       	ldi	r23, 0x00	; 0
     50e:	cd 01       	movw	r24, r26
     510:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <__divmodhi4>
     514:	dc 01       	movw	r26, r24
     516:	cb 01       	movw	r24, r22
     518:	22 e0       	ldi	r18, 0x02	; 2
     51a:	28 0f       	add	r18, r24
     51c:	f2 0e       	add	r15, r18
     51e:	fe 0c       	add	r15, r14
     520:	f8 01       	movw	r30, r16
     522:	f5 82       	std	Z+5, r15	; 0x05
     524:	a3 83       	std	Z+3, r26	; 0x03
     526:	f8 01       	movw	r30, r16
     528:	13 86       	std	Z+11, r1	; 0x0b
     52a:	12 86       	std	Z+10, r1	; 0x0a
     52c:	83 81       	ldd	r24, Z+3	; 0x03
     52e:	8f 5f       	subi	r24, 0xFF	; 255
     530:	83 83       	std	Z+3, r24	; 0x03
     532:	28 96       	adiw	r28, 0x08	; 8
     534:	0f b6       	in	r0, 0x3f	; 63
     536:	f8 94       	cli
     538:	de bf       	out	0x3e, r29	; 62
     53a:	0f be       	out	0x3f, r0	; 63
     53c:	cd bf       	out	0x3d, r28	; 61
     53e:	df 91       	pop	r29
     540:	cf 91       	pop	r28
     542:	1f 91       	pop	r17
     544:	0f 91       	pop	r16
     546:	ff 90       	pop	r15
     548:	ef 90       	pop	r14
     54a:	df 90       	pop	r13
     54c:	cf 90       	pop	r12
     54e:	08 95       	ret

00000550 <mk_gmtime>:
     550:	8f 92       	push	r8
     552:	9f 92       	push	r9
     554:	af 92       	push	r10
     556:	bf 92       	push	r11
     558:	cf 92       	push	r12
     55a:	df 92       	push	r13
     55c:	ef 92       	push	r14
     55e:	ff 92       	push	r15
     560:	0f 93       	push	r16
     562:	1f 93       	push	r17
     564:	cf 93       	push	r28
     566:	df 93       	push	r29
     568:	ec 01       	movw	r28, r24
     56a:	ee 81       	ldd	r30, Y+6	; 0x06
     56c:	ff 81       	ldd	r31, Y+7	; 0x07
     56e:	8f 01       	movw	r16, r30
     570:	04 56       	subi	r16, 0x64	; 100
     572:	11 09       	sbc	r17, r1
     574:	b9 f0       	breq	.+46     	; 0x5a4 <mk_gmtime+0x54>
     576:	cf 01       	movw	r24, r30
     578:	85 56       	subi	r24, 0x65	; 101
     57a:	91 09       	sbc	r25, r1
     57c:	6c 01       	movw	r12, r24
     57e:	97 ff       	sbrs	r25, 7
     580:	03 c0       	rjmp	.+6      	; 0x588 <mk_gmtime+0x38>
     582:	23 e0       	ldi	r18, 0x03	; 3
     584:	c2 0e       	add	r12, r18
     586:	d1 1c       	adc	r13, r1
     588:	d5 94       	asr	r13
     58a:	c7 94       	ror	r12
     58c:	d5 94       	asr	r13
     58e:	c7 94       	ror	r12
     590:	6c e9       	ldi	r22, 0x9C	; 156
     592:	7f ef       	ldi	r23, 0xFF	; 255
     594:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <__divmodhi4>
     598:	c6 0e       	add	r12, r22
     59a:	d7 1e       	adc	r13, r23
     59c:	8f ef       	ldi	r24, 0xFF	; 255
     59e:	c8 1a       	sub	r12, r24
     5a0:	d8 0a       	sbc	r13, r24
     5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <mk_gmtime+0x58>
     5a4:	c1 2c       	mov	r12, r1
     5a6:	d1 2c       	mov	r13, r1
     5a8:	2d e6       	ldi	r18, 0x6D	; 109
     5aa:	31 e0       	ldi	r19, 0x01	; 1
     5ac:	d8 01       	movw	r26, r16
     5ae:	0e 94 ac 10 	call	0x2158	; 0x2158 <__usmulhisi3>
     5b2:	0d 2c       	mov	r0, r13
     5b4:	00 0c       	add	r0, r0
     5b6:	ee 08       	sbc	r14, r14
     5b8:	ff 08       	sbc	r15, r15
     5ba:	c6 0e       	add	r12, r22
     5bc:	d7 1e       	adc	r13, r23
     5be:	e8 1e       	adc	r14, r24
     5c0:	f9 1e       	adc	r15, r25
     5c2:	8b 81       	ldd	r24, Y+3	; 0x03
     5c4:	08 2e       	mov	r0, r24
     5c6:	00 0c       	add	r0, r0
     5c8:	99 0b       	sbc	r25, r25
     5ca:	8c 01       	movw	r16, r24
     5cc:	01 50       	subi	r16, 0x01	; 1
     5ce:	11 09       	sbc	r17, r1
     5d0:	2d 81       	ldd	r18, Y+5	; 0x05
     5d2:	22 30       	cpi	r18, 0x02	; 2
     5d4:	2c f4       	brge	.+10     	; 0x5e0 <mk_gmtime+0x90>
     5d6:	22 23       	and	r18, r18
     5d8:	71 f1       	breq	.+92     	; 0x636 <mk_gmtime+0xe6>
     5da:	01 5e       	subi	r16, 0xE1	; 225
     5dc:	1f 4f       	sbci	r17, 0xFF	; 255
     5de:	2b c0       	rjmp	.+86     	; 0x636 <mk_gmtime+0xe6>
     5e0:	cf 01       	movw	r24, r30
     5e2:	84 59       	subi	r24, 0x94	; 148
     5e4:	98 4f       	sbci	r25, 0xF8	; 248
     5e6:	6c d0       	rcall	.+216    	; 0x6c0 <is_leap_year>
     5e8:	28 2f       	mov	r18, r24
     5ea:	30 e0       	ldi	r19, 0x00	; 0
     5ec:	25 5c       	subi	r18, 0xC5	; 197
     5ee:	3f 4f       	sbci	r19, 0xFF	; 255
     5f0:	20 0f       	add	r18, r16
     5f2:	31 1f       	adc	r19, r17
     5f4:	8d 81       	ldd	r24, Y+5	; 0x05
     5f6:	08 2e       	mov	r0, r24
     5f8:	00 0c       	add	r0, r0
     5fa:	99 0b       	sbc	r25, r25
     5fc:	02 97       	sbiw	r24, 0x02	; 2
     5fe:	85 30       	cpi	r24, 0x05	; 5
     600:	91 05       	cpc	r25, r1
     602:	14 f0       	brlt	.+4      	; 0x608 <mk_gmtime+0xb8>
     604:	27 56       	subi	r18, 0x67	; 103
     606:	3f 4f       	sbci	r19, 0xFF	; 255
     608:	65 e0       	ldi	r22, 0x05	; 5
     60a:	70 e0       	ldi	r23, 0x00	; 0
     60c:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <__divmodhi4>
     610:	ac 01       	movw	r20, r24
     612:	97 ff       	sbrs	r25, 7
     614:	02 c0       	rjmp	.+4      	; 0x61a <mk_gmtime+0xca>
     616:	4f 5f       	subi	r20, 0xFF	; 255
     618:	5f 4f       	sbci	r21, 0xFF	; 255
     61a:	55 95       	asr	r21
     61c:	47 95       	ror	r20
     61e:	9d e3       	ldi	r25, 0x3D	; 61
     620:	94 9f       	mul	r25, r20
     622:	80 01       	movw	r16, r0
     624:	95 9f       	mul	r25, r21
     626:	10 0d       	add	r17, r0
     628:	11 24       	eor	r1, r1
     62a:	02 0f       	add	r16, r18
     62c:	13 1f       	adc	r17, r19
     62e:	80 ff       	sbrs	r24, 0
     630:	02 c0       	rjmp	.+4      	; 0x636 <mk_gmtime+0xe6>
     632:	01 5e       	subi	r16, 0xE1	; 225
     634:	1f 4f       	sbci	r17, 0xFF	; 255
     636:	c8 01       	movw	r24, r16
     638:	11 0f       	add	r17, r17
     63a:	aa 0b       	sbc	r26, r26
     63c:	bb 0b       	sbc	r27, r27
     63e:	9c 01       	movw	r18, r24
     640:	ad 01       	movw	r20, r26
     642:	2c 0d       	add	r18, r12
     644:	3d 1d       	adc	r19, r13
     646:	4e 1d       	adc	r20, r14
     648:	5f 1d       	adc	r21, r15
     64a:	60 e8       	ldi	r22, 0x80	; 128
     64c:	71 e5       	ldi	r23, 0x51	; 81
     64e:	81 e0       	ldi	r24, 0x01	; 1
     650:	90 e0       	ldi	r25, 0x00	; 0
     652:	0e 94 38 10 	call	0x2070	; 0x2070 <__mulsi3>
     656:	4b 01       	movw	r8, r22
     658:	5c 01       	movw	r10, r24
     65a:	aa 81       	ldd	r26, Y+2	; 0x02
     65c:	0a 2e       	mov	r0, r26
     65e:	00 0c       	add	r0, r0
     660:	bb 0b       	sbc	r27, r27
     662:	20 e1       	ldi	r18, 0x10	; 16
     664:	3e e0       	ldi	r19, 0x0E	; 14
     666:	0e 94 ac 10 	call	0x2158	; 0x2158 <__usmulhisi3>
     66a:	6b 01       	movw	r12, r22
     66c:	7c 01       	movw	r14, r24
     66e:	a9 81       	ldd	r26, Y+1	; 0x01
     670:	0a 2e       	mov	r0, r26
     672:	00 0c       	add	r0, r0
     674:	bb 0b       	sbc	r27, r27
     676:	2c e3       	ldi	r18, 0x3C	; 60
     678:	30 e0       	ldi	r19, 0x00	; 0
     67a:	0e 94 ac 10 	call	0x2158	; 0x2158 <__usmulhisi3>
     67e:	c6 0e       	add	r12, r22
     680:	d7 1e       	adc	r13, r23
     682:	e8 1e       	adc	r14, r24
     684:	f9 1e       	adc	r15, r25
     686:	68 81       	ld	r22, Y
     688:	86 2f       	mov	r24, r22
     68a:	66 0f       	add	r22, r22
     68c:	99 0b       	sbc	r25, r25
     68e:	aa 0b       	sbc	r26, r26
     690:	bb 0b       	sbc	r27, r27
     692:	8c 0d       	add	r24, r12
     694:	9d 1d       	adc	r25, r13
     696:	ae 1d       	adc	r26, r14
     698:	bf 1d       	adc	r27, r15
     69a:	bc 01       	movw	r22, r24
     69c:	cd 01       	movw	r24, r26
     69e:	68 0d       	add	r22, r8
     6a0:	79 1d       	adc	r23, r9
     6a2:	8a 1d       	adc	r24, r10
     6a4:	9b 1d       	adc	r25, r11
     6a6:	df 91       	pop	r29
     6a8:	cf 91       	pop	r28
     6aa:	1f 91       	pop	r17
     6ac:	0f 91       	pop	r16
     6ae:	ff 90       	pop	r15
     6b0:	ef 90       	pop	r14
     6b2:	df 90       	pop	r13
     6b4:	cf 90       	pop	r12
     6b6:	bf 90       	pop	r11
     6b8:	af 90       	pop	r10
     6ba:	9f 90       	pop	r9
     6bc:	8f 90       	pop	r8
     6be:	08 95       	ret

000006c0 <is_leap_year>:
     6c0:	9c 01       	movw	r18, r24
     6c2:	23 70       	andi	r18, 0x03	; 3
     6c4:	33 27       	eor	r19, r19
     6c6:	23 2b       	or	r18, r19
     6c8:	59 f4       	brne	.+22     	; 0x6e0 <is_leap_year+0x20>
     6ca:	64 e6       	ldi	r22, 0x64	; 100
     6cc:	70 e0       	ldi	r23, 0x00	; 0
     6ce:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <__divmodhi4>
     6d2:	89 2b       	or	r24, r25
     6d4:	39 f4       	brne	.+14     	; 0x6e4 <is_leap_year+0x24>
     6d6:	63 70       	andi	r22, 0x03	; 3
     6d8:	77 27       	eor	r23, r23
     6da:	81 e0       	ldi	r24, 0x01	; 1
     6dc:	67 2b       	or	r22, r23
     6de:	19 f0       	breq	.+6      	; 0x6e6 <is_leap_year+0x26>
     6e0:	80 e0       	ldi	r24, 0x00	; 0
     6e2:	08 95       	ret
     6e4:	81 e0       	ldi	r24, 0x01	; 1
     6e6:	08 95       	ret

000006e8 <ADC_Enable>:
 */ 
#include <ADC_GPIO.h>

void ADC_Enable(void)
{
	DDRF = 0x00;
     6e8:	10 ba       	out	0x10, r1	; 16
	DDRK = 0x00;
     6ea:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
	ADMUX |= (1<<REFS0);
     6ee:	ec e7       	ldi	r30, 0x7C	; 124
     6f0:	f0 e0       	ldi	r31, 0x00	; 0
     6f2:	80 81       	ld	r24, Z
     6f4:	80 64       	ori	r24, 0x40	; 64
     6f6:	80 83       	st	Z, r24
	ADMUX |= (1<<ADLAR);
     6f8:	80 81       	ld	r24, Z
     6fa:	80 62       	ori	r24, 0x20	; 32
     6fc:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADEN);
     6fe:	ea e7       	ldi	r30, 0x7A	; 122
     700:	f0 e0       	ldi	r31, 0x00	; 0
     702:	80 81       	ld	r24, Z
     704:	80 68       	ori	r24, 0x80	; 128
     706:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
     708:	80 81       	ld	r24, Z
     70a:	87 60       	ori	r24, 0x07	; 7
     70c:	80 83       	st	Z, r24
	ADCSRB |= (1<<ACME);
     70e:	eb e7       	ldi	r30, 0x7B	; 123
     710:	f0 e0       	ldi	r31, 0x00	; 0
     712:	80 81       	ld	r24, Z
     714:	80 64       	ori	r24, 0x40	; 64
     716:	80 83       	st	Z, r24
     718:	08 95       	ret

0000071a <ADC_Channel0_7>:
}

uint16_t ADC_Channel0_7(uint8_t channel)
{
	ADCSRB =0x40;
     71a:	90 e4       	ldi	r25, 0x40	; 64
     71c:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
	ADMUX = 0x40 | (channel & 0x07);
     720:	87 70       	andi	r24, 0x07	; 7
     722:	80 64       	ori	r24, 0x40	; 64
     724:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
	ADCSRA |= (1<<ADSC);
     728:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
     72c:	80 64       	ori	r24, 0x40	; 64
     72e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
	while (!(ADCSRA & (1<<ADIF)));
     732:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
     736:	84 ff       	sbrs	r24, 4
     738:	fc cf       	rjmp	.-8      	; 0x732 <ADC_Channel0_7+0x18>
	ADCSRA |= (1<<ADIF);
     73a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
     73e:	80 61       	ori	r24, 0x10	; 16
     740:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
	return ADCW;
     744:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
     748:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
}
     74c:	08 95       	ret

0000074e <ADC_Channel8_15>:

uint16_t ADC_Channel8_15(uint8_t channel)
{
	ADCSRB =0x40 | (1<<MUX5);
     74e:	98 e4       	ldi	r25, 0x48	; 72
     750:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
	ADMUX = 0x40 | (channel & 0x07);
     754:	87 70       	andi	r24, 0x07	; 7
     756:	80 64       	ori	r24, 0x40	; 64
     758:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
	ADCSRA |= (1<<ADSC);
     75c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
     760:	80 64       	ori	r24, 0x40	; 64
     762:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
	while (!(ADCSRA & (1<<ADIF)));
     766:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
     76a:	84 ff       	sbrs	r24, 4
     76c:	fc cf       	rjmp	.-8      	; 0x766 <ADC_Channel8_15+0x18>
	ADCSRA |= (1<<ADIF);
     76e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
     772:	80 61       	ori	r24, 0x10	; 16
     774:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
	return ADCW;
     778:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
     77c:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
}
     780:	08 95       	ret

00000782 <REAL_VALUE_SENSOR>:

void REAL_VALUE_SENSOR(void)
{
     782:	cf 93       	push	r28
     784:	df 93       	push	r29
	Real_Value.VS_Buck3 =   ((ADC_Channel0_7(0)*2*Vref)/1023);
     786:	80 e0       	ldi	r24, 0x00	; 0
     788:	c8 df       	rcall	.-112    	; 0x71a <ADC_Channel0_7>
     78a:	c1 e5       	ldi	r28, 0x51	; 81
     78c:	d4 e0       	ldi	r29, 0x04	; 4
     78e:	88 0f       	add	r24, r24
     790:	99 1f       	adc	r25, r25
     792:	bc 01       	movw	r22, r24
     794:	80 e0       	ldi	r24, 0x00	; 0
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <__floatunsisf>
     79c:	20 eb       	ldi	r18, 0xB0	; 176
     79e:	32 e7       	ldi	r19, 0x72	; 114
     7a0:	4c e9       	ldi	r20, 0x9C	; 156
     7a2:	50 e4       	ldi	r21, 0x40	; 64
     7a4:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <__mulsf3>
     7a8:	20 e0       	ldi	r18, 0x00	; 0
     7aa:	30 ec       	ldi	r19, 0xC0	; 192
     7ac:	4f e7       	ldi	r20, 0x7F	; 127
     7ae:	54 e4       	ldi	r21, 0x44	; 68
     7b0:	0e 94 a5 0c 	call	0x194a	; 0x194a <__divsf3>
     7b4:	68 83       	st	Y, r22
     7b6:	79 83       	std	Y+1, r23	; 0x01
     7b8:	8a 83       	std	Y+2, r24	; 0x02
     7ba:	9b 83       	std	Y+3, r25	; 0x03
	Real_Value.Temp_S1 =    ((ADC_Channel0_7(1)*8.2*Vref)/1023);
     7bc:	81 e0       	ldi	r24, 0x01	; 1
     7be:	ad df       	rcall	.-166    	; 0x71a <ADC_Channel0_7>
     7c0:	bc 01       	movw	r22, r24
     7c2:	80 e0       	ldi	r24, 0x00	; 0
     7c4:	90 e0       	ldi	r25, 0x00	; 0
     7c6:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <__floatunsisf>
     7ca:	23 e3       	ldi	r18, 0x33	; 51
     7cc:	33 e3       	ldi	r19, 0x33	; 51
     7ce:	43 e0       	ldi	r20, 0x03	; 3
     7d0:	51 e4       	ldi	r21, 0x41	; 65
     7d2:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <__mulsf3>
     7d6:	20 eb       	ldi	r18, 0xB0	; 176
     7d8:	32 e7       	ldi	r19, 0x72	; 114
     7da:	4c e9       	ldi	r20, 0x9C	; 156
     7dc:	50 e4       	ldi	r21, 0x40	; 64
     7de:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <__mulsf3>
     7e2:	20 e0       	ldi	r18, 0x00	; 0
     7e4:	30 ec       	ldi	r19, 0xC0	; 192
     7e6:	4f e7       	ldi	r20, 0x7F	; 127
     7e8:	54 e4       	ldi	r21, 0x44	; 68
     7ea:	0e 94 a5 0c 	call	0x194a	; 0x194a <__divsf3>
     7ee:	0e 94 12 0d 	call	0x1a24	; 0x1a24 <__fixunssfsi>
     7f2:	68 a3       	std	Y+32, r22	; 0x20
	Real_Value.CS_Buck3 =   (((ADC_Channel0_7(2)*Vref)/1023)/0.94);
     7f4:	82 e0       	ldi	r24, 0x02	; 2
     7f6:	91 df       	rcall	.-222    	; 0x71a <ADC_Channel0_7>
     7f8:	bc 01       	movw	r22, r24
     7fa:	80 e0       	ldi	r24, 0x00	; 0
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <__floatunsisf>
     802:	20 eb       	ldi	r18, 0xB0	; 176
     804:	32 e7       	ldi	r19, 0x72	; 114
     806:	4c e9       	ldi	r20, 0x9C	; 156
     808:	50 e4       	ldi	r21, 0x40	; 64
     80a:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <__mulsf3>
     80e:	20 e0       	ldi	r18, 0x00	; 0
     810:	30 ec       	ldi	r19, 0xC0	; 192
     812:	4f e7       	ldi	r20, 0x7F	; 127
     814:	54 e4       	ldi	r21, 0x44	; 68
     816:	0e 94 a5 0c 	call	0x194a	; 0x194a <__divsf3>
     81a:	27 ed       	ldi	r18, 0xD7	; 215
     81c:	33 ea       	ldi	r19, 0xA3	; 163
     81e:	40 e7       	ldi	r20, 0x70	; 112
     820:	5f e3       	ldi	r21, 0x3F	; 63
     822:	0e 94 a5 0c 	call	0x194a	; 0x194a <__divsf3>
     826:	6c 83       	std	Y+4, r22	; 0x04
     828:	7d 83       	std	Y+5, r23	; 0x05
     82a:	8e 83       	std	Y+6, r24	; 0x06
     82c:	9f 83       	std	Y+7, r25	; 0x07
	Real_Value.VS_Buck5 =   ((ADC_Channel8_15(1)*2*Vref)/1023);
     82e:	81 e0       	ldi	r24, 0x01	; 1
     830:	8e df       	rcall	.-228    	; 0x74e <ADC_Channel8_15>
     832:	88 0f       	add	r24, r24
     834:	99 1f       	adc	r25, r25
     836:	bc 01       	movw	r22, r24
     838:	80 e0       	ldi	r24, 0x00	; 0
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <__floatunsisf>
     840:	20 eb       	ldi	r18, 0xB0	; 176
     842:	32 e7       	ldi	r19, 0x72	; 114
     844:	4c e9       	ldi	r20, 0x9C	; 156
     846:	50 e4       	ldi	r21, 0x40	; 64
     848:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <__mulsf3>
     84c:	20 e0       	ldi	r18, 0x00	; 0
     84e:	30 ec       	ldi	r19, 0xC0	; 192
     850:	4f e7       	ldi	r20, 0x7F	; 127
     852:	54 e4       	ldi	r21, 0x44	; 68
     854:	0e 94 a5 0c 	call	0x194a	; 0x194a <__divsf3>
     858:	68 87       	std	Y+8, r22	; 0x08
     85a:	79 87       	std	Y+9, r23	; 0x09
     85c:	8a 87       	std	Y+10, r24	; 0x0a
     85e:	9b 87       	std	Y+11, r25	; 0x0b
	Real_Value.Temp_S2 =    ((ADC_Channel8_15(2)*100*2.34*Vref)/1023);
     860:	82 e0       	ldi	r24, 0x02	; 2
     862:	75 df       	rcall	.-278    	; 0x74e <ADC_Channel8_15>
     864:	24 e6       	ldi	r18, 0x64	; 100
     866:	ac 01       	movw	r20, r24
     868:	24 9f       	mul	r18, r20
     86a:	c0 01       	movw	r24, r0
     86c:	25 9f       	mul	r18, r21
     86e:	90 0d       	add	r25, r0
     870:	11 24       	eor	r1, r1
     872:	bc 01       	movw	r22, r24
     874:	80 e0       	ldi	r24, 0x00	; 0
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <__floatunsisf>
     87c:	2f e8       	ldi	r18, 0x8F	; 143
     87e:	32 ec       	ldi	r19, 0xC2	; 194
     880:	45 e1       	ldi	r20, 0x15	; 21
     882:	50 e4       	ldi	r21, 0x40	; 64
     884:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <__mulsf3>
     888:	20 eb       	ldi	r18, 0xB0	; 176
     88a:	32 e7       	ldi	r19, 0x72	; 114
     88c:	4c e9       	ldi	r20, 0x9C	; 156
     88e:	50 e4       	ldi	r21, 0x40	; 64
     890:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <__mulsf3>
     894:	20 e0       	ldi	r18, 0x00	; 0
     896:	30 ec       	ldi	r19, 0xC0	; 192
     898:	4f e7       	ldi	r20, 0x7F	; 127
     89a:	54 e4       	ldi	r21, 0x44	; 68
     89c:	0e 94 a5 0c 	call	0x194a	; 0x194a <__divsf3>
     8a0:	0e 94 12 0d 	call	0x1a24	; 0x1a24 <__fixunssfsi>
     8a4:	69 a3       	std	Y+33, r22	; 0x21
	Real_Value.CS_Buck5 =   (((ADC_Channel8_15(3)*Vref)/1023)/0.94);
     8a6:	83 e0       	ldi	r24, 0x03	; 3
     8a8:	52 df       	rcall	.-348    	; 0x74e <ADC_Channel8_15>
     8aa:	bc 01       	movw	r22, r24
     8ac:	80 e0       	ldi	r24, 0x00	; 0
     8ae:	90 e0       	ldi	r25, 0x00	; 0
     8b0:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <__floatunsisf>
     8b4:	20 eb       	ldi	r18, 0xB0	; 176
     8b6:	32 e7       	ldi	r19, 0x72	; 114
     8b8:	4c e9       	ldi	r20, 0x9C	; 156
     8ba:	50 e4       	ldi	r21, 0x40	; 64
     8bc:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <__mulsf3>
     8c0:	20 e0       	ldi	r18, 0x00	; 0
     8c2:	30 ec       	ldi	r19, 0xC0	; 192
     8c4:	4f e7       	ldi	r20, 0x7F	; 127
     8c6:	54 e4       	ldi	r21, 0x44	; 68
     8c8:	0e 94 a5 0c 	call	0x194a	; 0x194a <__divsf3>
     8cc:	27 ed       	ldi	r18, 0xD7	; 215
     8ce:	33 ea       	ldi	r19, 0xA3	; 163
     8d0:	40 e7       	ldi	r20, 0x70	; 112
     8d2:	5f e3       	ldi	r21, 0x3F	; 63
     8d4:	0e 94 a5 0c 	call	0x194a	; 0x194a <__divsf3>
     8d8:	6c 87       	std	Y+12, r22	; 0x0c
     8da:	7d 87       	std	Y+13, r23	; 0x0d
     8dc:	8e 87       	std	Y+14, r24	; 0x0e
     8de:	9f 87       	std	Y+15, r25	; 0x0f
	Real_Value.VS_Battery = ((ADC_Channel8_15(4)*2*Vref)/1023);
     8e0:	84 e0       	ldi	r24, 0x04	; 4
     8e2:	35 df       	rcall	.-406    	; 0x74e <ADC_Channel8_15>
     8e4:	88 0f       	add	r24, r24
     8e6:	99 1f       	adc	r25, r25
     8e8:	bc 01       	movw	r22, r24
     8ea:	80 e0       	ldi	r24, 0x00	; 0
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <__floatunsisf>
     8f2:	20 eb       	ldi	r18, 0xB0	; 176
     8f4:	32 e7       	ldi	r19, 0x72	; 114
     8f6:	4c e9       	ldi	r20, 0x9C	; 156
     8f8:	50 e4       	ldi	r21, 0x40	; 64
     8fa:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <__mulsf3>
     8fe:	20 e0       	ldi	r18, 0x00	; 0
     900:	30 ec       	ldi	r19, 0xC0	; 192
     902:	4f e7       	ldi	r20, 0x7F	; 127
     904:	54 e4       	ldi	r21, 0x44	; 68
     906:	0e 94 a5 0c 	call	0x194a	; 0x194a <__divsf3>
     90a:	68 8b       	std	Y+16, r22	; 0x10
     90c:	79 8b       	std	Y+17, r23	; 0x11
     90e:	8a 8b       	std	Y+18, r24	; 0x12
     910:	9b 8b       	std	Y+19, r25	; 0x13
	Real_Value.CS_Battery = ((((ADC_Channel8_15(5)*Vref)/1023)-1.25)/0.4);
     912:	85 e0       	ldi	r24, 0x05	; 5
     914:	1c df       	rcall	.-456    	; 0x74e <ADC_Channel8_15>
     916:	bc 01       	movw	r22, r24
     918:	80 e0       	ldi	r24, 0x00	; 0
     91a:	90 e0       	ldi	r25, 0x00	; 0
     91c:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <__floatunsisf>
     920:	20 eb       	ldi	r18, 0xB0	; 176
     922:	32 e7       	ldi	r19, 0x72	; 114
     924:	4c e9       	ldi	r20, 0x9C	; 156
     926:	50 e4       	ldi	r21, 0x40	; 64
     928:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <__mulsf3>
     92c:	20 e0       	ldi	r18, 0x00	; 0
     92e:	30 ec       	ldi	r19, 0xC0	; 192
     930:	4f e7       	ldi	r20, 0x7F	; 127
     932:	54 e4       	ldi	r21, 0x44	; 68
     934:	0e 94 a5 0c 	call	0x194a	; 0x194a <__divsf3>
     938:	20 e0       	ldi	r18, 0x00	; 0
     93a:	30 e0       	ldi	r19, 0x00	; 0
     93c:	40 ea       	ldi	r20, 0xA0	; 160
     93e:	5f e3       	ldi	r21, 0x3F	; 63
     940:	9b d7       	rcall	.+3894   	; 0x1878 <__subsf3>
     942:	2d ec       	ldi	r18, 0xCD	; 205
     944:	3c ec       	ldi	r19, 0xCC	; 204
     946:	4c ec       	ldi	r20, 0xCC	; 204
     948:	5e e3       	ldi	r21, 0x3E	; 62
     94a:	ff d7       	rcall	.+4094   	; 0x194a <__divsf3>
     94c:	6c 8b       	std	Y+20, r22	; 0x14
     94e:	7d 8b       	std	Y+21, r23	; 0x15
     950:	8e 8b       	std	Y+22, r24	; 0x16
     952:	9f 8b       	std	Y+23, r25	; 0x17
	Real_Value.VS_Solar =   ((ADC_Channel8_15(6)*2*Vref)/1023);
     954:	86 e0       	ldi	r24, 0x06	; 6
     956:	fb de       	rcall	.-522    	; 0x74e <ADC_Channel8_15>
     958:	88 0f       	add	r24, r24
     95a:	99 1f       	adc	r25, r25
     95c:	bc 01       	movw	r22, r24
     95e:	80 e0       	ldi	r24, 0x00	; 0
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <__floatunsisf>
     966:	20 eb       	ldi	r18, 0xB0	; 176
     968:	32 e7       	ldi	r19, 0x72	; 114
     96a:	4c e9       	ldi	r20, 0x9C	; 156
     96c:	50 e4       	ldi	r21, 0x40	; 64
     96e:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <__mulsf3>
     972:	20 e0       	ldi	r18, 0x00	; 0
     974:	30 ec       	ldi	r19, 0xC0	; 192
     976:	4f e7       	ldi	r20, 0x7F	; 127
     978:	54 e4       	ldi	r21, 0x44	; 68
     97a:	e7 d7       	rcall	.+4046   	; 0x194a <__divsf3>
     97c:	68 8f       	std	Y+24, r22	; 0x18
     97e:	79 8f       	std	Y+25, r23	; 0x19
     980:	8a 8f       	std	Y+26, r24	; 0x1a
     982:	9b 8f       	std	Y+27, r25	; 0x1b
	Real_Value.CS_Solar =   (((ADC_Channel8_15(7)*Vref)/1023)/0.94);
     984:	87 e0       	ldi	r24, 0x07	; 7
     986:	e3 de       	rcall	.-570    	; 0x74e <ADC_Channel8_15>
     988:	bc 01       	movw	r22, r24
     98a:	80 e0       	ldi	r24, 0x00	; 0
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <__floatunsisf>
     992:	20 eb       	ldi	r18, 0xB0	; 176
     994:	32 e7       	ldi	r19, 0x72	; 114
     996:	4c e9       	ldi	r20, 0x9C	; 156
     998:	50 e4       	ldi	r21, 0x40	; 64
     99a:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <__mulsf3>
     99e:	20 e0       	ldi	r18, 0x00	; 0
     9a0:	30 ec       	ldi	r19, 0xC0	; 192
     9a2:	4f e7       	ldi	r20, 0x7F	; 127
     9a4:	54 e4       	ldi	r21, 0x44	; 68
     9a6:	d1 d7       	rcall	.+4002   	; 0x194a <__divsf3>
     9a8:	27 ed       	ldi	r18, 0xD7	; 215
     9aa:	33 ea       	ldi	r19, 0xA3	; 163
     9ac:	40 e7       	ldi	r20, 0x70	; 112
     9ae:	5f e3       	ldi	r21, 0x3F	; 63
     9b0:	cc d7       	rcall	.+3992   	; 0x194a <__divsf3>
     9b2:	6c 8f       	std	Y+28, r22	; 0x1c
     9b4:	7d 8f       	std	Y+29, r23	; 0x1d
     9b6:	8e 8f       	std	Y+30, r24	; 0x1e
     9b8:	9f 8f       	std	Y+31, r25	; 0x1f
	STRING_VALUE_SENSOR();
}
     9ba:	df 91       	pop	r29
     9bc:	cf 91       	pop	r28
	Real_Value.CS_Buck5 =   (((ADC_Channel8_15(3)*Vref)/1023)/0.94);
	Real_Value.VS_Battery = ((ADC_Channel8_15(4)*2*Vref)/1023);
	Real_Value.CS_Battery = ((((ADC_Channel8_15(5)*Vref)/1023)-1.25)/0.4);
	Real_Value.VS_Solar =   ((ADC_Channel8_15(6)*2*Vref)/1023);
	Real_Value.CS_Solar =   (((ADC_Channel8_15(7)*Vref)/1023)/0.94);
	STRING_VALUE_SENSOR();
     9be:	72 c3       	rjmp	.+1764   	; 0x10a4 <STRING_VALUE_SENSOR>

000009c0 <PWM_Enable>:
     9c0:	8f ef       	ldi	r24, 0xFF	; 255
}

void PWM_Enable(void)
{
	DDRA =0xFF;
     9c2:	81 b9       	out	0x01, r24	; 1
	DDRC =0xFF;
     9c4:	87 b9       	out	0x07, r24	; 7
	DDRG =0xFF;
     9c6:	83 bb       	out	0x13, r24	; 19
	DDRL |= (1<<DDL5);
     9c8:	ea e0       	ldi	r30, 0x0A	; 10
     9ca:	f1 e0       	ldi	r31, 0x01	; 1
     9cc:	80 81       	ld	r24, Z
     9ce:	80 62       	ori	r24, 0x20	; 32
     9d0:	80 83       	st	Z, r24
	TCCR5A |= (1<<COM5C1) | (1<<WGM51) | (1<<WGM50);
     9d2:	e0 e2       	ldi	r30, 0x20	; 32
     9d4:	f1 e0       	ldi	r31, 0x01	; 1
     9d6:	80 81       	ld	r24, Z
     9d8:	8b 60       	ori	r24, 0x0B	; 11
     9da:	80 83       	st	Z, r24
	TCCR5B |= (1<<CS50) | (1<<WGM52) | (1<<WGM53);
     9dc:	e1 e2       	ldi	r30, 0x21	; 33
     9de:	f1 e0       	ldi	r31, 0x01	; 1
     9e0:	80 81       	ld	r24, Z
     9e2:	89 61       	ori	r24, 0x19	; 25
     9e4:	80 83       	st	Z, r24
	OCR5A=5;
     9e6:	85 e0       	ldi	r24, 0x05	; 5
     9e8:	90 e0       	ldi	r25, 0x00	; 0
     9ea:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x7c0129>
     9ee:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x7c0128>
     9f2:	08 95       	ret

000009f4 <Timer1_Freq_1Hz>:
}

void Timer1_Freq_1Hz(void)
{
	TCCR1B |= (1<<CS12) | (1<<WGM12) | (1<<CS10);
     9f4:	e1 e8       	ldi	r30, 0x81	; 129
     9f6:	f0 e0       	ldi	r31, 0x00	; 0
     9f8:	80 81       	ld	r24, Z
     9fa:	8d 60       	ori	r24, 0x0D	; 13
     9fc:	80 83       	st	Z, r24
	TIMSK1 |= (1<<OCIE1A);
     9fe:	ef e6       	ldi	r30, 0x6F	; 111
     a00:	f0 e0       	ldi	r31, 0x00	; 0
     a02:	80 81       	ld	r24, Z
     a04:	82 60       	ori	r24, 0x02	; 2
     a06:	80 83       	st	Z, r24
	OCR1A = 16000;
     a08:	80 e8       	ldi	r24, 0x80	; 128
     a0a:	9e e3       	ldi	r25, 0x3E	; 62
     a0c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
     a10:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
     a14:	08 95       	ret

00000a16 <MPPT_P_O>:
}

/*Perturb & Observe Algorithm ----> Control Duty Cycle*/
void MPPT_P_O(void)
{
     a16:	cf 92       	push	r12
     a18:	df 92       	push	r13
     a1a:	ef 92       	push	r14
     a1c:	ff 92       	push	r15
	Vnow = Real_Value.VS_Solar;
     a1e:	80 91 69 04 	lds	r24, 0x0469	; 0x800469 <Real_Value+0x18>
     a22:	90 91 6a 04 	lds	r25, 0x046A	; 0x80046a <Real_Value+0x19>
     a26:	a0 91 6b 04 	lds	r26, 0x046B	; 0x80046b <Real_Value+0x1a>
     a2a:	b0 91 6c 04 	lds	r27, 0x046C	; 0x80046c <Real_Value+0x1b>
     a2e:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <Vnow>
     a32:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <Vnow+0x1>
     a36:	a0 93 33 04 	sts	0x0433, r26	; 0x800433 <Vnow+0x2>
     a3a:	b0 93 34 04 	sts	0x0434, r27	; 0x800434 <Vnow+0x3>
	Cnow= Real_Value.CS_Solar;
     a3e:	80 91 6d 04 	lds	r24, 0x046D	; 0x80046d <Real_Value+0x1c>
     a42:	90 91 6e 04 	lds	r25, 0x046E	; 0x80046e <Real_Value+0x1d>
     a46:	a0 91 6f 04 	lds	r26, 0x046F	; 0x80046f <Real_Value+0x1e>
     a4a:	b0 91 70 04 	lds	r27, 0x0470	; 0x800470 <Real_Value+0x1f>
     a4e:	80 93 77 05 	sts	0x0577, r24	; 0x800577 <Cnow>
     a52:	90 93 78 05 	sts	0x0578, r25	; 0x800578 <Cnow+0x1>
     a56:	a0 93 79 05 	sts	0x0579, r26	; 0x800579 <Cnow+0x2>
     a5a:	b0 93 7a 05 	sts	0x057A, r27	; 0x80057a <Cnow+0x3>
	Pnow=sqrt(Vnow)*sqrt(Cnow);
     a5e:	60 91 31 04 	lds	r22, 0x0431	; 0x800431 <Vnow>
     a62:	70 91 32 04 	lds	r23, 0x0432	; 0x800432 <Vnow+0x1>
     a66:	80 91 33 04 	lds	r24, 0x0433	; 0x800433 <Vnow+0x2>
     a6a:	90 91 34 04 	lds	r25, 0x0434	; 0x800434 <Vnow+0x3>
     a6e:	0e 94 a7 0e 	call	0x1d4e	; 0x1d4e <sqrt>
     a72:	6b 01       	movw	r12, r22
     a74:	7c 01       	movw	r14, r24
     a76:	60 91 77 05 	lds	r22, 0x0577	; 0x800577 <Cnow>
     a7a:	70 91 78 05 	lds	r23, 0x0578	; 0x800578 <Cnow+0x1>
     a7e:	80 91 79 05 	lds	r24, 0x0579	; 0x800579 <Cnow+0x2>
     a82:	90 91 7a 05 	lds	r25, 0x057A	; 0x80057a <Cnow+0x3>
     a86:	0e 94 a7 0e 	call	0x1d4e	; 0x1d4e <sqrt>
     a8a:	9b 01       	movw	r18, r22
     a8c:	ac 01       	movw	r20, r24
     a8e:	c7 01       	movw	r24, r14
     a90:	b6 01       	movw	r22, r12
     a92:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <__mulsf3>
     a96:	60 93 0a 04 	sts	0x040A, r22	; 0x80040a <Pnow>
     a9a:	70 93 0b 04 	sts	0x040B, r23	; 0x80040b <Pnow+0x1>
     a9e:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <Pnow+0x2>
     aa2:	90 93 0d 04 	sts	0x040D, r25	; 0x80040d <Pnow+0x3>
	if (Vnow < 1)
     aa6:	60 91 31 04 	lds	r22, 0x0431	; 0x800431 <Vnow>
     aaa:	70 91 32 04 	lds	r23, 0x0432	; 0x800432 <Vnow+0x1>
     aae:	80 91 33 04 	lds	r24, 0x0433	; 0x800433 <Vnow+0x2>
     ab2:	90 91 34 04 	lds	r25, 0x0434	; 0x800434 <Vnow+0x3>
     ab6:	20 e0       	ldi	r18, 0x00	; 0
     ab8:	30 e0       	ldi	r19, 0x00	; 0
     aba:	40 e8       	ldi	r20, 0x80	; 128
     abc:	5f e3       	ldi	r21, 0x3F	; 63
     abe:	41 d7       	rcall	.+3714   	; 0x1942 <__cmpsf2>
     ac0:	87 ff       	sbrs	r24, 7
     ac2:	1e c0       	rjmp	.+60     	; 0xb00 <MPPT_P_O+0xea>
	{
		DC=Vold=Pold=0;
     ac4:	10 92 0e 04 	sts	0x040E, r1	; 0x80040e <Pold>
     ac8:	10 92 0f 04 	sts	0x040F, r1	; 0x80040f <Pold+0x1>
     acc:	10 92 10 04 	sts	0x0410, r1	; 0x800410 <Pold+0x2>
     ad0:	10 92 11 04 	sts	0x0411, r1	; 0x800411 <Pold+0x3>
     ad4:	10 92 06 04 	sts	0x0406, r1	; 0x800406 <Vold>
     ad8:	10 92 07 04 	sts	0x0407, r1	; 0x800407 <Vold+0x1>
     adc:	10 92 08 04 	sts	0x0408, r1	; 0x800408 <Vold+0x2>
     ae0:	10 92 09 04 	sts	0x0409, r1	; 0x800409 <Vold+0x3>
     ae4:	10 92 19 04 	sts	0x0419, r1	; 0x800419 <DC>
     ae8:	10 92 1a 04 	sts	0x041A, r1	; 0x80041a <DC+0x1>
     aec:	10 92 1b 04 	sts	0x041B, r1	; 0x80041b <DC+0x2>
     af0:	10 92 1c 04 	sts	0x041C, r1	; 0x80041c <DC+0x3>
		Reset_SW(DDRL,MPPT);
     af4:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
     af8:	8f 7d       	andi	r24, 0xDF	; 223
     afa:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
     afe:	7e c0       	rjmp	.+252    	; 0xbfc <MPPT_P_O+0x1e6>
	}
	else
	{
		Set_SW(DDRL,MPPT);
     b00:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
     b04:	80 62       	ori	r24, 0x20	; 32
     b06:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__TEXT_REGION_LENGTH__+0x7c010a>
		if(Pnow >= Pold)
     b0a:	60 91 0a 04 	lds	r22, 0x040A	; 0x80040a <Pnow>
     b0e:	70 91 0b 04 	lds	r23, 0x040B	; 0x80040b <Pnow+0x1>
     b12:	80 91 0c 04 	lds	r24, 0x040C	; 0x80040c <Pnow+0x2>
     b16:	90 91 0d 04 	lds	r25, 0x040D	; 0x80040d <Pnow+0x3>
     b1a:	20 91 0e 04 	lds	r18, 0x040E	; 0x80040e <Pold>
     b1e:	30 91 0f 04 	lds	r19, 0x040F	; 0x80040f <Pold+0x1>
     b22:	40 91 10 04 	lds	r20, 0x0410	; 0x800410 <Pold+0x2>
     b26:	50 91 11 04 	lds	r21, 0x0411	; 0x800411 <Pold+0x3>
     b2a:	0e 94 f0 0d 	call	0x1be0	; 0x1be0 <__gesf2>
     b2e:	87 fd       	sbrc	r24, 7
     b30:	21 c0       	rjmp	.+66     	; 0xb74 <MPPT_P_O+0x15e>
		{
			DC = Vnow;
     b32:	80 91 31 04 	lds	r24, 0x0431	; 0x800431 <Vnow>
     b36:	90 91 32 04 	lds	r25, 0x0432	; 0x800432 <Vnow+0x1>
     b3a:	a0 91 33 04 	lds	r26, 0x0433	; 0x800433 <Vnow+0x2>
     b3e:	b0 91 34 04 	lds	r27, 0x0434	; 0x800434 <Vnow+0x3>
     b42:	80 93 19 04 	sts	0x0419, r24	; 0x800419 <DC>
     b46:	90 93 1a 04 	sts	0x041A, r25	; 0x80041a <DC+0x1>
     b4a:	a0 93 1b 04 	sts	0x041B, r26	; 0x80041b <DC+0x2>
     b4e:	b0 93 1c 04 	sts	0x041C, r27	; 0x80041c <DC+0x3>
			Vold = Vnow;
     b52:	80 91 31 04 	lds	r24, 0x0431	; 0x800431 <Vnow>
     b56:	90 91 32 04 	lds	r25, 0x0432	; 0x800432 <Vnow+0x1>
     b5a:	a0 91 33 04 	lds	r26, 0x0433	; 0x800433 <Vnow+0x2>
     b5e:	b0 91 34 04 	lds	r27, 0x0434	; 0x800434 <Vnow+0x3>
     b62:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <Vold>
     b66:	90 93 07 04 	sts	0x0407, r25	; 0x800407 <Vold+0x1>
     b6a:	a0 93 08 04 	sts	0x0408, r26	; 0x800408 <Vold+0x2>
     b6e:	b0 93 09 04 	sts	0x0409, r27	; 0x800409 <Vold+0x3>
     b72:	24 c0       	rjmp	.+72     	; 0xbbc <MPPT_P_O+0x1a6>
			Pold = Pnow;
			Psd  = Pnow;
		}else
		{
			DC = Vold;
     b74:	80 91 06 04 	lds	r24, 0x0406	; 0x800406 <Vold>
     b78:	90 91 07 04 	lds	r25, 0x0407	; 0x800407 <Vold+0x1>
     b7c:	a0 91 08 04 	lds	r26, 0x0408	; 0x800408 <Vold+0x2>
     b80:	b0 91 09 04 	lds	r27, 0x0409	; 0x800409 <Vold+0x3>
     b84:	80 93 19 04 	sts	0x0419, r24	; 0x800419 <DC>
     b88:	90 93 1a 04 	sts	0x041A, r25	; 0x80041a <DC+0x1>
     b8c:	a0 93 1b 04 	sts	0x041B, r26	; 0x80041b <DC+0x2>
     b90:	b0 93 1c 04 	sts	0x041C, r27	; 0x80041c <DC+0x3>
			if (Pnow > Psd)//If effect Shading
     b94:	60 91 0a 04 	lds	r22, 0x040A	; 0x80040a <Pnow>
     b98:	70 91 0b 04 	lds	r23, 0x040B	; 0x80040b <Pnow+0x1>
     b9c:	80 91 0c 04 	lds	r24, 0x040C	; 0x80040c <Pnow+0x2>
     ba0:	90 91 0d 04 	lds	r25, 0x040D	; 0x80040d <Pnow+0x3>
     ba4:	20 91 47 04 	lds	r18, 0x0447	; 0x800447 <Psd>
     ba8:	30 91 48 04 	lds	r19, 0x0448	; 0x800448 <Psd+0x1>
     bac:	40 91 49 04 	lds	r20, 0x0449	; 0x800449 <Psd+0x2>
     bb0:	50 91 4a 04 	lds	r21, 0x044A	; 0x80044a <Psd+0x3>
     bb4:	0e 94 f0 0d 	call	0x1be0	; 0x1be0 <__gesf2>
     bb8:	18 16       	cp	r1, r24
     bba:	84 f4       	brge	.+32     	; 0xbdc <MPPT_P_O+0x1c6>
			{
				Pold = Pnow;
     bbc:	80 91 0a 04 	lds	r24, 0x040A	; 0x80040a <Pnow>
     bc0:	90 91 0b 04 	lds	r25, 0x040B	; 0x80040b <Pnow+0x1>
     bc4:	a0 91 0c 04 	lds	r26, 0x040C	; 0x80040c <Pnow+0x2>
     bc8:	b0 91 0d 04 	lds	r27, 0x040D	; 0x80040d <Pnow+0x3>
     bcc:	80 93 0e 04 	sts	0x040E, r24	; 0x80040e <Pold>
     bd0:	90 93 0f 04 	sts	0x040F, r25	; 0x80040f <Pold+0x1>
     bd4:	a0 93 10 04 	sts	0x0410, r26	; 0x800410 <Pold+0x2>
     bd8:	b0 93 11 04 	sts	0x0411, r27	; 0x800411 <Pold+0x3>
			}
			Psd = Pnow;
     bdc:	80 91 0a 04 	lds	r24, 0x040A	; 0x80040a <Pnow>
     be0:	90 91 0b 04 	lds	r25, 0x040B	; 0x80040b <Pnow+0x1>
     be4:	a0 91 0c 04 	lds	r26, 0x040C	; 0x80040c <Pnow+0x2>
     be8:	b0 91 0d 04 	lds	r27, 0x040D	; 0x80040d <Pnow+0x3>
     bec:	80 93 47 04 	sts	0x0447, r24	; 0x800447 <Psd>
     bf0:	90 93 48 04 	sts	0x0448, r25	; 0x800448 <Psd+0x1>
     bf4:	a0 93 49 04 	sts	0x0449, r26	; 0x800449 <Psd+0x2>
     bf8:	b0 93 4a 04 	sts	0x044A, r27	; 0x80044a <Psd+0x3>
		}
	}
	
	OCR5C=((DC * 1024)/5);
     bfc:	60 91 19 04 	lds	r22, 0x0419	; 0x800419 <DC>
     c00:	70 91 1a 04 	lds	r23, 0x041A	; 0x80041a <DC+0x1>
     c04:	80 91 1b 04 	lds	r24, 0x041B	; 0x80041b <DC+0x2>
     c08:	90 91 1c 04 	lds	r25, 0x041C	; 0x80041c <DC+0x3>
     c0c:	20 e0       	ldi	r18, 0x00	; 0
     c0e:	30 e0       	ldi	r19, 0x00	; 0
     c10:	40 e8       	ldi	r20, 0x80	; 128
     c12:	54 e4       	ldi	r21, 0x44	; 68
     c14:	e9 d7       	rcall	.+4050   	; 0x1be8 <__mulsf3>
     c16:	20 e0       	ldi	r18, 0x00	; 0
     c18:	30 e0       	ldi	r19, 0x00	; 0
     c1a:	40 ea       	ldi	r20, 0xA0	; 160
     c1c:	50 e4       	ldi	r21, 0x40	; 64
     c1e:	95 d6       	rcall	.+3370   	; 0x194a <__divsf3>
     c20:	01 d7       	rcall	.+3586   	; 0x1a24 <__fixunssfsi>
     c22:	70 93 2d 01 	sts	0x012D, r23	; 0x80012d <__TEXT_REGION_LENGTH__+0x7c012d>
     c26:	60 93 2c 01 	sts	0x012C, r22	; 0x80012c <__TEXT_REGION_LENGTH__+0x7c012c>
	DUTY=((DC * 1024)/5);
     c2a:	60 91 19 04 	lds	r22, 0x0419	; 0x800419 <DC>
     c2e:	70 91 1a 04 	lds	r23, 0x041A	; 0x80041a <DC+0x1>
     c32:	80 91 1b 04 	lds	r24, 0x041B	; 0x80041b <DC+0x2>
     c36:	90 91 1c 04 	lds	r25, 0x041C	; 0x80041c <DC+0x3>
     c3a:	20 e0       	ldi	r18, 0x00	; 0
     c3c:	30 e0       	ldi	r19, 0x00	; 0
     c3e:	40 e8       	ldi	r20, 0x80	; 128
     c40:	54 e4       	ldi	r21, 0x44	; 68
     c42:	d2 d7       	rcall	.+4004   	; 0x1be8 <__mulsf3>
     c44:	20 e0       	ldi	r18, 0x00	; 0
     c46:	30 e0       	ldi	r19, 0x00	; 0
     c48:	40 ea       	ldi	r20, 0xA0	; 160
     c4a:	50 e4       	ldi	r21, 0x40	; 64
     c4c:	7e d6       	rcall	.+3324   	; 0x194a <__divsf3>
     c4e:	60 93 73 04 	sts	0x0473, r22	; 0x800473 <DUTY>
     c52:	70 93 74 04 	sts	0x0474, r23	; 0x800474 <DUTY+0x1>
     c56:	80 93 75 04 	sts	0x0475, r24	; 0x800475 <DUTY+0x2>
     c5a:	90 93 76 04 	sts	0x0476, r25	; 0x800476 <DUTY+0x3>
}
     c5e:	ff 90       	pop	r15
     c60:	ef 90       	pop	r14
     c62:	df 90       	pop	r13
     c64:	cf 90       	pop	r12
     c66:	08 95       	ret

00000c68 <ON_OFF_SW>:

void ON_OFF_SW(void)
{
     c68:	cf 93       	push	r28
	if (Real_Value.VS_Battery < 6)                              // Voltage Battery below 6 Volt OFF Subsystem
     c6a:	20 e0       	ldi	r18, 0x00	; 0
     c6c:	30 e0       	ldi	r19, 0x00	; 0
     c6e:	40 ec       	ldi	r20, 0xC0	; 192
     c70:	50 e4       	ldi	r21, 0x40	; 64
     c72:	60 91 61 04 	lds	r22, 0x0461	; 0x800461 <Real_Value+0x10>
     c76:	70 91 62 04 	lds	r23, 0x0462	; 0x800462 <Real_Value+0x11>
     c7a:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <Real_Value+0x12>
     c7e:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <Real_Value+0x13>
     c82:	5f d6       	rcall	.+3262   	; 0x1942 <__cmpsf2>
     c84:	c0 91 71 04 	lds	r28, 0x0471	; 0x800471 <Real_Value+0x20>
     c88:	87 ff       	sbrs	r24, 7
     c8a:	21 c0       	rjmp	.+66     	; 0xcce <ON_OFF_SW+0x66>
	{
		Reset_SW(PORTA,CAMERA);
     c8c:	14 98       	cbi	0x02, 4	; 2
		Reset_SW(PORTA,COMMUNICATION);
     c8e:	16 98       	cbi	0x02, 6	; 2
		Reset_SW(PORTG,ADCS);
     c90:	a2 98       	cbi	0x14, 2	; 20
		if (Real_Value.VS_Solar < 1)                           // Voltage Solar cell below 1 Volt OFF Kill Switch
     c92:	20 e0       	ldi	r18, 0x00	; 0
     c94:	30 e0       	ldi	r19, 0x00	; 0
     c96:	40 e8       	ldi	r20, 0x80	; 128
     c98:	5f e3       	ldi	r21, 0x3F	; 63
     c9a:	60 91 69 04 	lds	r22, 0x0469	; 0x800469 <Real_Value+0x18>
     c9e:	70 91 6a 04 	lds	r23, 0x046A	; 0x80046a <Real_Value+0x19>
     ca2:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <Real_Value+0x1a>
     ca6:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <Real_Value+0x1b>
     caa:	4b d6       	rcall	.+3222   	; 0x1942 <__cmpsf2>
     cac:	87 ff       	sbrs	r24, 7
     cae:	03 c0       	rjmp	.+6      	; 0xcb6 <ON_OFF_SW+0x4e>
		{
			Reset_SW(PORTC,KILL_R);
     cb0:	40 98       	cbi	0x08, 0	; 8
			Reset_SW(PORTC,KILL_L);
     cb2:	42 98       	cbi	0x08, 2	; 8
     cb4:	02 c0       	rjmp	.+4      	; 0xcba <ON_OFF_SW+0x52>
			}else{
			Set_SW(PORTC,KILL_R);
     cb6:	40 9a       	sbi	0x08, 0	; 8
			Set_SW(PORTC,KILL_L);
     cb8:	42 9a       	sbi	0x08, 2	; 8
		}
		if (Real_Value.Temp_S1 == 0 || Real_Value.Temp_S2 == 0)    // Temp.S1 OR Temp.S2 below 0C ON Heater
     cba:	cc 23       	and	r28, r28
     cbc:	21 f0       	breq	.+8      	; 0xcc6 <ON_OFF_SW+0x5e>
     cbe:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <Real_Value+0x21>
     cc2:	81 11       	cpse	r24, r1
     cc4:	02 c0       	rjmp	.+4      	; 0xcca <ON_OFF_SW+0x62>
		{
			Set_SW(PORTC,HEATER);
     cc6:	44 9a       	sbi	0x08, 4	; 8
     cc8:	2c c0       	rjmp	.+88     	; 0xd22 <ON_OFF_SW+0xba>
			}else{
			Reset_SW(PORTC,HEATER);
     cca:	44 98       	cbi	0x08, 4	; 8
     ccc:	2a c0       	rjmp	.+84     	; 0xd22 <ON_OFF_SW+0xba>
		}
	}else if (Real_Value.Temp_S1 > 50 || Real_Value.Temp_S2 > 50)  // Temp.S1 OR Temp.S2 bigger 45C ON Heater
     cce:	c3 33       	cpi	r28, 0x33	; 51
     cd0:	20 f4       	brcc	.+8      	; 0xcda <ON_OFF_SW+0x72>
     cd2:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <Real_Value+0x21>
     cd6:	83 33       	cpi	r24, 0x33	; 51
     cd8:	c8 f0       	brcs	.+50     	; 0xd0c <ON_OFF_SW+0xa4>
	{
		Reset_SW(PORTA,CAMERA);
     cda:	14 98       	cbi	0x02, 4	; 2
		Reset_SW(PORTA,COMMUNICATION);
     cdc:	16 98       	cbi	0x02, 6	; 2
		Reset_SW(PORTG,ADCS);
     cde:	a2 98       	cbi	0x14, 2	; 20
		Reset_SW(PORTC,HEATER);
     ce0:	44 98       	cbi	0x08, 4	; 8
		if (Real_Value.VS_Solar < 1)                           // Voltage Solar cell below 1 Volt OFF Kill Switch
     ce2:	20 e0       	ldi	r18, 0x00	; 0
     ce4:	30 e0       	ldi	r19, 0x00	; 0
     ce6:	40 e8       	ldi	r20, 0x80	; 128
     ce8:	5f e3       	ldi	r21, 0x3F	; 63
     cea:	60 91 69 04 	lds	r22, 0x0469	; 0x800469 <Real_Value+0x18>
     cee:	70 91 6a 04 	lds	r23, 0x046A	; 0x80046a <Real_Value+0x19>
     cf2:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <Real_Value+0x1a>
     cf6:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <Real_Value+0x1b>
     cfa:	23 d6       	rcall	.+3142   	; 0x1942 <__cmpsf2>
     cfc:	87 ff       	sbrs	r24, 7
     cfe:	03 c0       	rjmp	.+6      	; 0xd06 <ON_OFF_SW+0x9e>
		{
			Reset_SW(PORTC,KILL_R);
     d00:	40 98       	cbi	0x08, 0	; 8
			Reset_SW(PORTC,KILL_L);
     d02:	42 98       	cbi	0x08, 2	; 8
     d04:	0e c0       	rjmp	.+28     	; 0xd22 <ON_OFF_SW+0xba>
			}else{
			Set_SW(PORTC,KILL_R);
     d06:	40 9a       	sbi	0x08, 0	; 8
			Set_SW(PORTC,KILL_L);
     d08:	42 9a       	sbi	0x08, 2	; 8
     d0a:	0b c0       	rjmp	.+22     	; 0xd22 <ON_OFF_SW+0xba>
		}
		}else{
		if (Real_Value.Temp_S1 == 0 || Real_Value.Temp_S2 == 0)     // Temp.S1 OR Temp.S2 below 0C ON Heater
     d0c:	cc 23       	and	r28, r28
     d0e:	11 f0       	breq	.+4      	; 0xd14 <ON_OFF_SW+0xac>
     d10:	81 11       	cpse	r24, r1
     d12:	02 c0       	rjmp	.+4      	; 0xd18 <ON_OFF_SW+0xb0>
		{
			Set_SW(PORTC,HEATER);
     d14:	44 9a       	sbi	0x08, 4	; 8
     d16:	01 c0       	rjmp	.+2      	; 0xd1a <ON_OFF_SW+0xb2>
			}else{
			Reset_SW(PORTC,HEATER);
     d18:	44 98       	cbi	0x08, 4	; 8
		}
		Set_SW(PORTA,COMMUNICATION);
     d1a:	16 9a       	sbi	0x02, 6	; 2
		Set_SW(PORTC,KILL_R);
     d1c:	40 9a       	sbi	0x08, 0	; 8
		Set_SW(PORTC,KILL_L);
     d1e:	42 9a       	sbi	0x08, 2	; 8
		Set_SW(PORTG,ADCS);
     d20:	a2 9a       	sbi	0x14, 2	; 20
	}
     d22:	cf 91       	pop	r28
     d24:	08 95       	ret

00000d26 <WRITE_EEPROM>:

#include <E2PROM.h>

void WRITE_EEPROM(uint16_t Addr ,uint8_t Data)
{
	while(EECR & (1<<EEPE));
     d26:	f9 99       	sbic	0x1f, 1	; 31
     d28:	fe cf       	rjmp	.-4      	; 0xd26 <WRITE_EEPROM>
	EEAR = Addr;
     d2a:	92 bd       	out	0x22, r25	; 34
     d2c:	81 bd       	out	0x21, r24	; 33
	EEDR = Data;
     d2e:	60 bd       	out	0x20, r22	; 32
	EECR |= (1<<EEMPE);
     d30:	fa 9a       	sbi	0x1f, 2	; 31
	EECR |= (1<<EEPE);
     d32:	f9 9a       	sbi	0x1f, 1	; 31
     d34:	08 95       	ret

00000d36 <READ_EEPROM>:
}

uint8_t READ_EEPROM(uint16_t Addr)
{
	while(EECR & (1<<EEPE));
     d36:	f9 99       	sbic	0x1f, 1	; 31
     d38:	fe cf       	rjmp	.-4      	; 0xd36 <READ_EEPROM>
	EEAR = Addr;
     d3a:	92 bd       	out	0x22, r25	; 34
     d3c:	81 bd       	out	0x21, r24	; 33
	EECR |= (1<<EERE);
     d3e:	f8 9a       	sbi	0x1f, 0	; 31
	return EEDR;
     d40:	80 b5       	in	r24, 0x20	; 32
}
     d42:	08 95       	ret

00000d44 <TELEMETRY_Tx>:
	}
	return crc ;
}

void TELEMETRY_Tx(void)
{
     d44:	cf 93       	push	r28
     d46:	df 93       	push	r29
	uint8_t crc = 0x00 ;
	if (EUSP.RL != 0x00)
     d48:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <EUSP+0x4>
     d4c:	88 23       	and	r24, r24
     d4e:	09 f4       	brne	.+2      	; 0xd52 <TELEMETRY_Tx+0xe>
     d50:	41 c0       	rjmp	.+130    	; 0xdd4 <TELEMETRY_Tx+0x90>
	{
		crc = crc8_table [ crc ^ UART2_Transmit(EUSP.STATUS)   ] ;
     d52:	80 91 3b 04 	lds	r24, 0x043B	; 0x80043b <EUSP+0x6>
     d56:	20 d5       	rcall	.+2624   	; 0x1798 <UART2_Transmit>
     d58:	e8 2f       	mov	r30, r24
     d5a:	f0 e0       	ldi	r31, 0x00	; 0
     d5c:	e0 50       	subi	r30, 0x00	; 0
     d5e:	fe 4f       	sbci	r31, 0xFE	; 254
     d60:	c0 81       	ld	r28, Z
		crc = crc8_table [ crc ^ UART2_Transmit(EUSP.SA)       ] ;
     d62:	80 91 35 04 	lds	r24, 0x0435	; 0x800435 <EUSP>
     d66:	18 d5       	rcall	.+2608   	; 0x1798 <UART2_Transmit>
     d68:	8c 27       	eor	r24, r28
     d6a:	e8 2f       	mov	r30, r24
     d6c:	f0 e0       	ldi	r31, 0x00	; 0
     d6e:	e0 50       	subi	r30, 0x00	; 0
     d70:	fe 4f       	sbci	r31, 0xFE	; 254
     d72:	c0 81       	ld	r28, Z
		crc = crc8_table [ crc ^ UART2_Transmit(EUSP.GID)      ] ;
     d74:	80 91 36 04 	lds	r24, 0x0436	; 0x800436 <EUSP+0x1>
     d78:	0f d5       	rcall	.+2590   	; 0x1798 <UART2_Transmit>
     d7a:	8c 27       	eor	r24, r28
     d7c:	e8 2f       	mov	r30, r24
     d7e:	f0 e0       	ldi	r31, 0x00	; 0
     d80:	e0 50       	subi	r30, 0x00	; 0
     d82:	fe 4f       	sbci	r31, 0xFE	; 254
     d84:	c0 81       	ld	r28, Z
		crc = crc8_table [ crc ^ UART2_Transmit(EUSP.SGID)     ] ;
     d86:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <EUSP+0x2>
     d8a:	06 d5       	rcall	.+2572   	; 0x1798 <UART2_Transmit>
     d8c:	8c 27       	eor	r24, r28
     d8e:	e8 2f       	mov	r30, r24
     d90:	f0 e0       	ldi	r31, 0x00	; 0
     d92:	e0 50       	subi	r30, 0x00	; 0
     d94:	fe 4f       	sbci	r31, 0xFE	; 254
     d96:	c0 81       	ld	r28, Z
		crc = crc8_table [ crc ^ UART2_Transmit(EUSP.RL)       ] ;
     d98:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <EUSP+0x4>
     d9c:	fd d4       	rcall	.+2554   	; 0x1798 <UART2_Transmit>
     d9e:	8c 27       	eor	r24, r28
     da0:	e8 2f       	mov	r30, r24
     da2:	f0 e0       	ldi	r31, 0x00	; 0
     da4:	e0 50       	subi	r30, 0x00	; 0
     da6:	fe 4f       	sbci	r31, 0xFE	; 254
     da8:	c0 81       	ld	r28, Z
     daa:	d0 e0       	ldi	r29, 0x00	; 0
		for (uint8_t i = 0 ; i < EUSP.RL ; i++)
     dac:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <EUSP+0x4>
     db0:	d8 17       	cp	r29, r24
     db2:	70 f4       	brcc	.+28     	; 0xdd0 <TELEMETRY_Tx+0x8c>
     db4:	ed 2f       	mov	r30, r29
		{
			crc = crc8_table [ crc ^ UART2_Transmit(REPLY[i]) ] ;
     db6:	f0 e0       	ldi	r31, 0x00	; 0
     db8:	e9 58       	subi	r30, 0x89	; 137
     dba:	fb 4f       	sbci	r31, 0xFB	; 251
     dbc:	80 81       	ld	r24, Z
     dbe:	ec d4       	rcall	.+2520   	; 0x1798 <UART2_Transmit>
     dc0:	8c 27       	eor	r24, r28
     dc2:	e8 2f       	mov	r30, r24
     dc4:	f0 e0       	ldi	r31, 0x00	; 0
     dc6:	e0 50       	subi	r30, 0x00	; 0
     dc8:	fe 4f       	sbci	r31, 0xFE	; 254
     dca:	c0 81       	ld	r28, Z
     dcc:	df 5f       	subi	r29, 0xFF	; 255
		crc = crc8_table [ crc ^ UART2_Transmit(EUSP.STATUS)   ] ;
		crc = crc8_table [ crc ^ UART2_Transmit(EUSP.SA)       ] ;
		crc = crc8_table [ crc ^ UART2_Transmit(EUSP.GID)      ] ;
		crc = crc8_table [ crc ^ UART2_Transmit(EUSP.SGID)     ] ;
		crc = crc8_table [ crc ^ UART2_Transmit(EUSP.RL)       ] ;
		for (uint8_t i = 0 ; i < EUSP.RL ; i++)
     dce:	ee cf       	rjmp	.-36     	; 0xdac <TELEMETRY_Tx+0x68>
		{
			crc = crc8_table [ crc ^ UART2_Transmit(REPLY[i]) ] ;
		}
		UART2_Transmit(crc);
     dd0:	8c 2f       	mov	r24, r28
     dd2:	08 c0       	rjmp	.+16     	; 0xde4 <TELEMETRY_Tx+0xa0>
	}
	else
	{
		crc = crc8_table [ crc ^ UART2_Transmit(EUSP.STATUS)    ] ;
     dd4:	80 91 3b 04 	lds	r24, 0x043B	; 0x80043b <EUSP+0x6>
     dd8:	df d4       	rcall	.+2494   	; 0x1798 <UART2_Transmit>
     dda:	e8 2f       	mov	r30, r24
     ddc:	f0 e0       	ldi	r31, 0x00	; 0
     dde:	e0 50       	subi	r30, 0x00	; 0
     de0:	fe 4f       	sbci	r31, 0xFE	; 254
		UART2_Transmit(crc);
     de2:	80 81       	ld	r24, Z
	}
}
     de4:	df 91       	pop	r29
     de6:	cf 91       	pop	r28
		UART2_Transmit(crc);
	}
	else
	{
		crc = crc8_table [ crc ^ UART2_Transmit(EUSP.STATUS)    ] ;
		UART2_Transmit(crc);
     de8:	d7 c4       	rjmp	.+2478   	; 0x1798 <UART2_Transmit>

00000dea <DATA_Rx>:
     dea:	0f 93       	push	r16
	}
}

void DATA_Rx(uint8_t stringTx[] ,uint8_t n)
{
     dec:	1f 93       	push	r17
     dee:	cf 93       	push	r28
     df0:	df 93       	push	r29
     df2:	ec 01       	movw	r28, r24
     df4:	8c 01       	movw	r16, r24
     df6:	06 0f       	add	r16, r22
     df8:	11 1d       	adc	r17, r1
	for(uint8_t i=0;i<n;i++)
     dfa:	c0 17       	cp	r28, r16
     dfc:	d1 07       	cpc	r29, r17
     dfe:	19 f0       	breq	.+6      	; 0xe06 <DATA_Rx+0x1c>
	{
		stringTx[i]=UART2_Receive();
     e00:	c4 d4       	rcall	.+2440   	; 0x178a <UART2_Receive>
     e02:	89 93       	st	Y+, r24
     e04:	fa cf       	rjmp	.-12     	; 0xdfa <DATA_Rx+0x10>
	}
}
     e06:	df 91       	pop	r29
     e08:	cf 91       	pop	r28
     e0a:	1f 91       	pop	r17
     e0c:	0f 91       	pop	r16
     e0e:	08 95       	ret

00000e10 <COMMAND_Rx>:

void COMMAND_Rx(void)
{
	EUSP.SA   = UART2_Receive();
     e10:	bc d4       	rcall	.+2424   	; 0x178a <UART2_Receive>
     e12:	80 93 35 04 	sts	0x0435, r24	; 0x800435 <EUSP>
	if(EUSP.SA == EPS)
     e16:	80 32       	cpi	r24, 0x20	; 32
	{
		EUSP.GID  = UART2_Receive();
     e18:	c1 f4       	brne	.+48     	; 0xe4a <COMMAND_Rx+0x3a>
     e1a:	b7 d4       	rcall	.+2414   	; 0x178a <UART2_Receive>
     e1c:	80 93 36 04 	sts	0x0436, r24	; 0x800436 <EUSP+0x1>
		EUSP.SGID = UART2_Receive();
     e20:	b4 d4       	rcall	.+2408   	; 0x178a <UART2_Receive>
     e22:	80 93 37 04 	sts	0x0437, r24	; 0x800437 <EUSP+0x2>
		EUSP.DoL  = UART2_Receive();
     e26:	b1 d4       	rcall	.+2402   	; 0x178a <UART2_Receive>
     e28:	80 93 38 04 	sts	0x0438, r24	; 0x800438 <EUSP+0x3>
		EUSP.RL   = UART2_Receive();
     e2c:	ae d4       	rcall	.+2396   	; 0x178a <UART2_Receive>
     e2e:	80 93 39 04 	sts	0x0439, r24	; 0x800439 <EUSP+0x4>
		DATA_Rx(DATA,EUSP.DoL);
     e32:	60 91 38 04 	lds	r22, 0x0438	; 0x800438 <EUSP+0x3>
     e36:	80 e0       	ldi	r24, 0x00	; 0
     e38:	93 e0       	ldi	r25, 0x03	; 3
		EUSP.CRC  = UART2_Receive();
     e3a:	d7 df       	rcall	.-82     	; 0xdea <DATA_Rx>
     e3c:	a6 d4       	rcall	.+2380   	; 0x178a <UART2_Receive>
     e3e:	80 93 3a 04 	sts	0x043A, r24	; 0x80043a <EUSP+0x5>
		FLAG_START = TRUE;
     e42:	81 e0       	ldi	r24, 0x01	; 1
     e44:	80 93 1d 04 	sts	0x041D, r24	; 0x80041d <FLAG_START>
     e48:	08 95       	ret
	}else
	{
		FLAG_START = FALSE;
     e4a:	10 92 1d 04 	sts	0x041D, r1	; 0x80041d <FLAG_START>
     e4e:	08 95       	ret

00000e50 <CRC_COMMAND>:
}

uint8_t CRC_COMMAND(void)
{
	uint8_t crc = 0x00 ;
	crc = crc8_table [ crc ^ EUSP.SA   ] ;
     e50:	e0 91 35 04 	lds	r30, 0x0435	; 0x800435 <EUSP>
     e54:	f0 e0       	ldi	r31, 0x00	; 0
     e56:	e0 50       	subi	r30, 0x00	; 0
     e58:	fe 4f       	sbci	r31, 0xFE	; 254
	crc = crc8_table [ crc ^ EUSP.GID  ] ;
     e5a:	e0 81       	ld	r30, Z
     e5c:	80 91 36 04 	lds	r24, 0x0436	; 0x800436 <EUSP+0x1>
     e60:	e8 27       	eor	r30, r24
     e62:	f0 e0       	ldi	r31, 0x00	; 0
     e64:	e0 50       	subi	r30, 0x00	; 0
     e66:	fe 4f       	sbci	r31, 0xFE	; 254
	crc = crc8_table [ crc ^ EUSP.SGID ] ;
     e68:	e0 81       	ld	r30, Z
     e6a:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <EUSP+0x2>
     e6e:	e8 27       	eor	r30, r24
     e70:	f0 e0       	ldi	r31, 0x00	; 0
	crc = crc8_table [ crc ^ EUSP.DoL  ] ;
     e72:	20 91 38 04 	lds	r18, 0x0438	; 0x800438 <EUSP+0x3>
uint8_t CRC_COMMAND(void)
{
	uint8_t crc = 0x00 ;
	crc = crc8_table [ crc ^ EUSP.SA   ] ;
	crc = crc8_table [ crc ^ EUSP.GID  ] ;
	crc = crc8_table [ crc ^ EUSP.SGID ] ;
     e76:	e0 50       	subi	r30, 0x00	; 0
     e78:	fe 4f       	sbci	r31, 0xFE	; 254
	crc = crc8_table [ crc ^ EUSP.DoL  ] ;
     e7a:	e0 81       	ld	r30, Z
     e7c:	e2 27       	eor	r30, r18
     e7e:	f0 e0       	ldi	r31, 0x00	; 0
     e80:	e0 50       	subi	r30, 0x00	; 0
     e82:	fe 4f       	sbci	r31, 0xFE	; 254
	crc = crc8_table [ crc ^ EUSP.RL   ] ;
     e84:	e0 81       	ld	r30, Z
     e86:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <EUSP+0x4>
     e8a:	e8 27       	eor	r30, r24
     e8c:	f0 e0       	ldi	r31, 0x00	; 0
     e8e:	e0 50       	subi	r30, 0x00	; 0
     e90:	fe 4f       	sbci	r31, 0xFE	; 254
     e92:	e0 81       	ld	r30, Z
     e94:	a0 e0       	ldi	r26, 0x00	; 0
     e96:	b3 e0       	ldi	r27, 0x03	; 3
	for (uint8_t i = 0 ; i < EUSP.DoL ; i++)
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	92 17       	cp	r25, r18
     e9c:	41 f0       	breq	.+16     	; 0xeae <CRC_COMMAND+0x5e>
	{
		crc = crc8_table [ crc ^ DATA[i] ] ;
     e9e:	8d 91       	ld	r24, X+
     ea0:	e8 27       	eor	r30, r24
     ea2:	f0 e0       	ldi	r31, 0x00	; 0
     ea4:	e0 50       	subi	r30, 0x00	; 0
     ea6:	fe 4f       	sbci	r31, 0xFE	; 254
     ea8:	e0 81       	ld	r30, Z
	crc = crc8_table [ crc ^ EUSP.SA   ] ;
	crc = crc8_table [ crc ^ EUSP.GID  ] ;
	crc = crc8_table [ crc ^ EUSP.SGID ] ;
	crc = crc8_table [ crc ^ EUSP.DoL  ] ;
	crc = crc8_table [ crc ^ EUSP.RL   ] ;
	for (uint8_t i = 0 ; i < EUSP.DoL ; i++)
     eaa:	9f 5f       	subi	r25, 0xFF	; 255
     eac:	f6 cf       	rjmp	.-20     	; 0xe9a <CRC_COMMAND+0x4a>
	{
		crc = crc8_table [ crc ^ DATA[i] ] ;
	}
	crc = crc8_table [ crc ^ EUSP.CRC ] ;
     eae:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <EUSP+0x5>
     eb2:	e8 27       	eor	r30, r24
     eb4:	f0 e0       	ldi	r31, 0x00	; 0
     eb6:	e0 50       	subi	r30, 0x00	; 0
     eb8:	fe 4f       	sbci	r31, 0xFE	; 254
	return crc ;
}
     eba:	80 81       	ld	r24, Z
     ebc:	08 95       	ret

00000ebe <TELEMETRY_DETERMINATION>:
void TELEMETRY_DETERMINATION(void)
{
	switch (EUSP.SA)
     ebe:	80 91 35 04 	lds	r24, 0x0435	; 0x800435 <EUSP>
     ec2:	80 32       	cpi	r24, 0x20	; 32
     ec4:	09 f0       	breq	.+2      	; 0xec8 <TELEMETRY_DETERMINATION+0xa>
     ec6:	64 c0       	rjmp	.+200    	; 0xf90 <TELEMETRY_DETERMINATION+0xd2>
	{
		case EPS:switch(EUSP.GID)
     ec8:	80 91 36 04 	lds	r24, 0x0436	; 0x800436 <EUSP+0x1>
     ecc:	83 30       	cpi	r24, 0x03	; 3
     ece:	b1 f1       	breq	.+108    	; 0xf3c <TELEMETRY_DETERMINATION+0x7e>
     ed0:	28 f4       	brcc	.+10     	; 0xedc <TELEMETRY_DETERMINATION+0x1e>
     ed2:	81 30       	cpi	r24, 0x01	; 1
     ed4:	51 f0       	breq	.+20     	; 0xeea <TELEMETRY_DETERMINATION+0x2c>
     ed6:	82 30       	cpi	r24, 0x02	; 2
     ed8:	11 f1       	breq	.+68     	; 0xf1e <TELEMETRY_DETERMINATION+0x60>
     eda:	08 95       	ret
     edc:	84 30       	cpi	r24, 0x04	; 4
     ede:	09 f4       	brne	.+2      	; 0xee2 <TELEMETRY_DETERMINATION+0x24>
     ee0:	41 c0       	rjmp	.+130    	; 0xf64 <TELEMETRY_DETERMINATION+0xa6>
     ee2:	8e 3b       	cpi	r24, 0xBE	; 190
     ee4:	09 f4       	brne	.+2      	; 0xee8 <TELEMETRY_DETERMINATION+0x2a>
     ee6:	4d c0       	rjmp	.+154    	; 0xf82 <TELEMETRY_DETERMINATION+0xc4>
     ee8:	08 95       	ret
		{
			case SENSOR:switch(EUSP.SGID)
     eea:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <EUSP+0x2>
     eee:	81 30       	cpi	r24, 0x01	; 1
     ef0:	51 f0       	breq	.+20     	; 0xf06 <TELEMETRY_DETERMINATION+0x48>
     ef2:	28 f0       	brcs	.+10     	; 0xefe <TELEMETRY_DETERMINATION+0x40>
     ef4:	82 30       	cpi	r24, 0x02	; 2
     ef6:	59 f0       	breq	.+22     	; 0xf0e <TELEMETRY_DETERMINATION+0x50>
     ef8:	83 30       	cpi	r24, 0x03	; 3
     efa:	69 f0       	breq	.+26     	; 0xf16 <TELEMETRY_DETERMINATION+0x58>
     efc:	08 95       	ret
			{
				case SOLAR_CELL:SOLAR_ARRAY(REPLY);TELEMETRY_Tx();
     efe:	87 e7       	ldi	r24, 0x77	; 119
     f00:	94 e0       	ldi	r25, 0x04	; 4
     f02:	16 d1       	rcall	.+556    	; 0x1130 <SOLAR_ARRAY>
     f04:	3d c0       	rjmp	.+122    	; 0xf80 <TELEMETRY_DETERMINATION+0xc2>
				break;
				case BATTERY:GET_Battery(REPLY);TELEMETRY_Tx();
     f06:	87 e7       	ldi	r24, 0x77	; 119
     f08:	94 e0       	ldi	r25, 0x04	; 4
     f0a:	92 d1       	rcall	.+804    	; 0x1230 <GET_Battery>
     f0c:	39 c0       	rjmp	.+114    	; 0xf80 <TELEMETRY_DETERMINATION+0xc2>
				break;
				case BUCK:BUCKS(REPLY);TELEMETRY_Tx();
     f0e:	87 e7       	ldi	r24, 0x77	; 119
     f10:	94 e0       	ldi	r25, 0x04	; 4
     f12:	40 d1       	rcall	.+640    	; 0x1194 <BUCKS>
     f14:	35 c0       	rjmp	.+106    	; 0xf80 <TELEMETRY_DETERMINATION+0xc2>
				break;
				case ALL_EPS:Get_All_Telemetry(REPLY);TELEMETRY_Tx();
     f16:	87 e7       	ldi	r24, 0x77	; 119
     f18:	94 e0       	ldi	r25, 0x04	; 4
     f1a:	bb d1       	rcall	.+886    	; 0x1292 <Get_All_Telemetry>
     f1c:	31 c0       	rjmp	.+98     	; 0xf80 <TELEMETRY_DETERMINATION+0xc2>
     f1e:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <EUSP+0x2>
				break;
				default:;
				break;
			}
			break;
			case POWER_SET:switch(EUSP.SGID)
     f22:	88 23       	and	r24, r24
     f24:	19 f0       	breq	.+6      	; 0xf2c <TELEMETRY_DETERMINATION+0x6e>
     f26:	81 30       	cpi	r24, 0x01	; 1
     f28:	29 f0       	breq	.+10     	; 0xf34 <TELEMETRY_DETERMINATION+0x76>
     f2a:	08 95       	ret
			{
				case SET_POWER:POWER_SWITCH(DATA[0]);TELEMETRY_Tx();
     f2c:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <__data_end>
     f30:	44 d2       	rcall	.+1160   	; 0x13ba <POWER_SWITCH>
     f32:	26 c0       	rjmp	.+76     	; 0xf80 <TELEMETRY_DETERMINATION+0xc2>
				break;
				case GET_POWER:STATUS_SW(REPLY);TELEMETRY_Tx();
     f34:	87 e7       	ldi	r24, 0x77	; 119
     f36:	94 e0       	ldi	r25, 0x04	; 4
     f38:	2c d2       	rcall	.+1112   	; 0x1392 <STATUS_SW>
     f3a:	22 c0       	rjmp	.+68     	; 0xf80 <TELEMETRY_DETERMINATION+0xc2>
     f3c:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <EUSP+0x2>
				break;
				default:;
				break;
			}
			break;
			case TIME:switch(EUSP.SGID)
     f40:	81 30       	cpi	r24, 0x01	; 1
     f42:	41 f0       	breq	.+16     	; 0xf54 <TELEMETRY_DETERMINATION+0x96>
     f44:	18 f0       	brcs	.+6      	; 0xf4c <TELEMETRY_DETERMINATION+0x8e>
     f46:	82 30       	cpi	r24, 0x02	; 2
     f48:	49 f0       	breq	.+18     	; 0xf5c <TELEMETRY_DETERMINATION+0x9e>
     f4a:	08 95       	ret
			{
				case SET_TIME:SET_TIME_NOW(DATA);TELEMETRY_Tx();
     f4c:	80 e0       	ldi	r24, 0x00	; 0
     f4e:	93 e0       	ldi	r25, 0x03	; 3
     f50:	3c d2       	rcall	.+1144   	; 0x13ca <SET_TIME_NOW>
     f52:	16 c0       	rjmp	.+44     	; 0xf80 <TELEMETRY_DETERMINATION+0xc2>
				break;
				case GET_TIME:GET_TIME_NOW(REPLY);TELEMETRY_Tx();
     f54:	87 e7       	ldi	r24, 0x77	; 119
     f56:	94 e0       	ldi	r25, 0x04	; 4
     f58:	63 d2       	rcall	.+1222   	; 0x1420 <GET_TIME_NOW>
     f5a:	12 c0       	rjmp	.+36     	; 0xf80 <TELEMETRY_DETERMINATION+0xc2>
     f5c:	80 e0       	ldi	r24, 0x00	; 0
				break;
				case CLOCK:SET_CLOCK(DATA);TELEMETRY_Tx();
     f5e:	93 e0       	ldi	r25, 0x03	; 3
     f60:	7d d2       	rcall	.+1274   	; 0x145c <SET_CLOCK>
     f62:	0e c0       	rjmp	.+28     	; 0xf80 <TELEMETRY_DETERMINATION+0xc2>
     f64:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <EUSP+0x2>
				break;
				default:;
				break;
			}
			break;
			case TEST:switch(EUSP.SGID)
     f68:	88 23       	and	r24, r24
     f6a:	19 f0       	breq	.+6      	; 0xf72 <TELEMETRY_DETERMINATION+0xb4>
     f6c:	81 30       	cpi	r24, 0x01	; 1
     f6e:	29 f0       	breq	.+10     	; 0xf7a <TELEMETRY_DETERMINATION+0xbc>
     f70:	08 95       	ret
			{
				case TRANSLOG:EPS_Transaction_Log(REPLY);TELEMETRY_Tx();
     f72:	87 e7       	ldi	r24, 0x77	; 119
     f74:	94 e0       	ldi	r25, 0x04	; 4
     f76:	9e d2       	rcall	.+1340   	; 0x14b4 <EPS_Transaction_Log>
     f78:	03 c0       	rjmp	.+6      	; 0xf80 <TELEMETRY_DETERMINATION+0xc2>
     f7a:	87 e7       	ldi	r24, 0x77	; 119
				break;
				case TEST_PING:Test_EPS_Tx(REPLY);TELEMETRY_Tx();
     f7c:	94 e0       	ldi	r25, 0x04	; 4
     f7e:	89 d2       	rcall	.+1298   	; 0x1492 <Test_EPS_Tx>
     f80:	e1 ce       	rjmp	.-574    	; 0xd44 <TELEMETRY_Tx>
     f82:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <EUSP+0x2>
     f86:	81 11       	cpse	r24, r1
				break;
				default:;
				break;
			}
			break;
			case BOOT:switch(EUSP.SGID)
     f88:	03 c0       	rjmp	.+6      	; 0xf90 <TELEMETRY_DETERMINATION+0xd2>
     f8a:	81 e0       	ldi	r24, 0x01	; 1
     f8c:	80 93 3c 04 	sts	0x043C, r24	; 0x80043c <FLAG_BOOT>
			{
				case STRAT_BOOT:FLAG_BOOT=TRUE;
     f90:	08 95       	ret

00000f92 <Rx_CRC_Tx>:
     f92:	3e df       	rcall	.-388    	; 0xe10 <COMMAND_Rx>
     f94:	80 91 1d 04 	lds	r24, 0x041D	; 0x80041d <FLAG_START>

void Rx_CRC_Tx(void)
{
	uint8_t crc = 0x00 ;
	COMMAND_Rx();
	if (FLAG_START)
     f98:	88 23       	and	r24, r24
	{
		if (CRC_COMMAND() == 0x00)
     f9a:	89 f0       	breq	.+34     	; 0xfbe <Rx_CRC_Tx+0x2c>
     f9c:	59 df       	rcall	.-334    	; 0xe50 <CRC_COMMAND>
     f9e:	81 11       	cpse	r24, r1
     fa0:	04 c0       	rjmp	.+8      	; 0xfaa <Rx_CRC_Tx+0x18>
		{
			EUSP.STATUS=ACK;
     fa2:	8c ea       	ldi	r24, 0xAC	; 172
     fa4:	80 93 3b 04 	sts	0x043B, r24	; 0x80043b <EUSP+0x6>
			TELEMETRY_DETERMINATION();
     fa8:	8a cf       	rjmp	.-236    	; 0xebe <TELEMETRY_DETERMINATION>
			}else{
			EUSP.STATUS=NACK;
     faa:	84 e5       	ldi	r24, 0x54	; 84
     fac:	80 93 3b 04 	sts	0x043B, r24	; 0x80043b <EUSP+0x6>
			crc = crc8_table [ crc ^ UART2_Transmit(EUSP.STATUS) ] ;
     fb0:	f3 d3       	rcall	.+2022   	; 0x1798 <UART2_Transmit>
     fb2:	e8 2f       	mov	r30, r24
     fb4:	f0 e0       	ldi	r31, 0x00	; 0
     fb6:	e0 50       	subi	r30, 0x00	; 0
			UART2_Transmit(crc);
     fb8:	fe 4f       	sbci	r31, 0xFE	; 254
     fba:	80 81       	ld	r24, Z
     fbc:	ed c3       	rjmp	.+2010   	; 0x1798 <UART2_Transmit>
     fbe:	08 95       	ret

00000fc0 <FtoA>:

#include <FRAMES.h>


void FtoA(float Value_Float, char* BUFER, uint8_t POINT_NUM)
{
     fc0:	4f 92       	push	r4
     fc2:	5f 92       	push	r5
     fc4:	6f 92       	push	r6
     fc6:	7f 92       	push	r7
     fc8:	8f 92       	push	r8
     fca:	9f 92       	push	r9
     fcc:	af 92       	push	r10
     fce:	bf 92       	push	r11
     fd0:	cf 92       	push	r12
     fd2:	df 92       	push	r13
     fd4:	ef 92       	push	r14
     fd6:	ff 92       	push	r15
     fd8:	0f 93       	push	r16
     fda:	1f 93       	push	r17
     fdc:	cf 93       	push	r28
     fde:	df 93       	push	r29
     fe0:	4b 01       	movw	r8, r22
     fe2:	5c 01       	movw	r10, r24
     fe4:	ea 01       	movw	r28, r20
     fe6:	72 2e       	mov	r7, r18
	int FIRST_PART =Value_Float;
     fe8:	18 d5       	rcall	.+2608   	; 0x1a1a <__fixsfsi>
     fea:	6b 01       	movw	r12, r22
     fec:	7c 01       	movw	r14, r24
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     fee:	4a e0       	ldi	r20, 0x0A	; 10
     ff0:	be 01       	movw	r22, r28
     ff2:	c6 01       	movw	r24, r12
     ff4:	0e 94 05 10 	call	0x200a	; 0x200a <__itoa_ncheck>
	float SECOND_PART = Value_Float - FIRST_PART;
	int i = strlen(itoa(FIRST_PART, BUFER,10));
     ff8:	fc 01       	movw	r30, r24
     ffa:	01 90       	ld	r0, Z+
     ffc:	00 20       	and	r0, r0
     ffe:	e9 f7       	brne	.-6      	; 0xffa <FtoA+0x3a>
    1000:	31 97       	sbiw	r30, 0x01	; 1
    1002:	8f 01       	movw	r16, r30
    1004:	08 1b       	sub	r16, r24
    1006:	19 0b       	sbc	r17, r25
	if (POINT_NUM != 0)
    1008:	77 20       	and	r7, r7
    100a:	09 f4       	brne	.+2      	; 0x100e <__EEPROM_REGION_LENGTH__+0xe>
    100c:	3a c0       	rjmp	.+116    	; 0x1082 <__EEPROM_REGION_LENGTH__+0x82>
	{
		BUFER[i] = '.';
    100e:	fe 01       	movw	r30, r28
    1010:	e0 0f       	add	r30, r16
    1012:	f1 1f       	adc	r31, r17
    1014:	8e e2       	ldi	r24, 0x2E	; 46
    1016:	80 83       	st	Z, r24
		SECOND_PART = (float)SECOND_PART * pow(10, POINT_NUM);
    1018:	67 2d       	mov	r22, r7
    101a:	70 e0       	ldi	r23, 0x00	; 0
    101c:	80 e0       	ldi	r24, 0x00	; 0
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	2d d5       	rcall	.+2650   	; 0x1a7c <__floatunsisf>
    1022:	9b 01       	movw	r18, r22
    1024:	ac 01       	movw	r20, r24
    1026:	60 e0       	ldi	r22, 0x00	; 0
    1028:	70 e0       	ldi	r23, 0x00	; 0
    102a:	80 e2       	ldi	r24, 0x20	; 32
    102c:	91 e4       	ldi	r25, 0x41	; 65
    102e:	3f d6       	rcall	.+3198   	; 0x1cae <pow>
    1030:	2b 01       	movw	r4, r22
    1032:	3c 01       	movw	r6, r24


void FtoA(float Value_Float, char* BUFER, uint8_t POINT_NUM)
{
	int FIRST_PART =Value_Float;
	float SECOND_PART = Value_Float - FIRST_PART;
    1034:	b6 01       	movw	r22, r12
    1036:	dd 0c       	add	r13, r13
    1038:	88 0b       	sbc	r24, r24
    103a:	99 0b       	sbc	r25, r25
    103c:	21 d5       	rcall	.+2626   	; 0x1a80 <__floatsisf>
    103e:	9b 01       	movw	r18, r22
    1040:	ac 01       	movw	r20, r24
    1042:	c5 01       	movw	r24, r10
    1044:	b4 01       	movw	r22, r8
    1046:	18 d4       	rcall	.+2096   	; 0x1878 <__subsf3>
    1048:	0f 5f       	subi	r16, 0xFF	; 255
    104a:	1f 4f       	sbci	r17, 0xFF	; 255
    104c:	c0 0f       	add	r28, r16
    104e:	d1 1f       	adc	r29, r17
    1050:	a3 01       	movw	r20, r6
    1052:	92 01       	movw	r18, r4
    1054:	c9 d5       	rcall	.+2962   	; 0x1be8 <__mulsf3>
    1056:	e1 d4       	rcall	.+2498   	; 0x1a1a <__fixsfsi>
    1058:	dc 01       	movw	r26, r24
    105a:	cb 01       	movw	r24, r22
    105c:	4a e0       	ldi	r20, 0x0A	; 10
    105e:	be 01       	movw	r22, r28
		BUFER[i] = '.';
		SECOND_PART = (float)SECOND_PART * pow(10, POINT_NUM);
		SECOND_PART =(int)SECOND_PART;
		itoa((int)SECOND_PART, BUFER + i + 1, 10);
	}
}
    1060:	df 91       	pop	r29
    1062:	cf 91       	pop	r28
    1064:	1f 91       	pop	r17
    1066:	0f 91       	pop	r16
    1068:	ff 90       	pop	r15
    106a:	ef 90       	pop	r14
    106c:	df 90       	pop	r13
    106e:	cf 90       	pop	r12
    1070:	bf 90       	pop	r11
    1072:	af 90       	pop	r10
    1074:	9f 90       	pop	r9
    1076:	8f 90       	pop	r8
    1078:	7f 90       	pop	r7
    107a:	6f 90       	pop	r6
    107c:	5f 90       	pop	r5
    107e:	4f 90       	pop	r4
    1080:	c4 c7       	rjmp	.+3976   	; 0x200a <__itoa_ncheck>
    1082:	df 91       	pop	r29
    1084:	cf 91       	pop	r28
    1086:	1f 91       	pop	r17
    1088:	0f 91       	pop	r16
    108a:	ff 90       	pop	r15
    108c:	ef 90       	pop	r14
    108e:	df 90       	pop	r13
    1090:	cf 90       	pop	r12
    1092:	bf 90       	pop	r11
    1094:	af 90       	pop	r10
    1096:	9f 90       	pop	r9
    1098:	8f 90       	pop	r8
    109a:	7f 90       	pop	r7
    109c:	6f 90       	pop	r6
    109e:	5f 90       	pop	r5
    10a0:	4f 90       	pop	r4
    10a2:	08 95       	ret

000010a4 <STRING_VALUE_SENSOR>:

void STRING_VALUE_SENSOR(void)
{
    10a4:	cf 93       	push	r28
    10a6:	df 93       	push	r29
	FtoA(Real_Value.VS_Buck3,VS_BUC3,3);
    10a8:	c1 e5       	ldi	r28, 0x51	; 81
    10aa:	d4 e0       	ldi	r29, 0x04	; 4
    10ac:	68 81       	ld	r22, Y
    10ae:	79 81       	ldd	r23, Y+1	; 0x01
    10b0:	8a 81       	ldd	r24, Y+2	; 0x02
    10b2:	9b 81       	ldd	r25, Y+3	; 0x03
    10b4:	23 e0       	ldi	r18, 0x03	; 3
    10b6:	4b e7       	ldi	r20, 0x7B	; 123
    10b8:	55 e0       	ldi	r21, 0x05	; 5
    10ba:	82 df       	rcall	.-252    	; 0xfc0 <FtoA>
	FtoA(Real_Value.CS_Buck3,CS_BUC3,3);
    10bc:	6c 81       	ldd	r22, Y+4	; 0x04
    10be:	7d 81       	ldd	r23, Y+5	; 0x05
    10c0:	8e 81       	ldd	r24, Y+6	; 0x06
    10c2:	9f 81       	ldd	r25, Y+7	; 0x07
    10c4:	23 e0       	ldi	r18, 0x03	; 3
    10c6:	4b e2       	ldi	r20, 0x2B	; 43
    10c8:	54 e0       	ldi	r21, 0x04	; 4
    10ca:	7a df       	rcall	.-268    	; 0xfc0 <FtoA>
	FtoA(Real_Value.VS_Buck5,VS_BUC5,3);
    10cc:	68 85       	ldd	r22, Y+8	; 0x08
    10ce:	79 85       	ldd	r23, Y+9	; 0x09
    10d0:	8a 85       	ldd	r24, Y+10	; 0x0a
    10d2:	9b 85       	ldd	r25, Y+11	; 0x0b
    10d4:	23 e0       	ldi	r18, 0x03	; 3
    10d6:	4b e4       	ldi	r20, 0x4B	; 75
    10d8:	54 e0       	ldi	r21, 0x04	; 4
    10da:	72 df       	rcall	.-284    	; 0xfc0 <FtoA>
	FtoA(Real_Value.CS_Buck5,CS_BUC5,3);
    10dc:	6c 85       	ldd	r22, Y+12	; 0x0c
    10de:	7d 85       	ldd	r23, Y+13	; 0x0d
    10e0:	8e 85       	ldd	r24, Y+14	; 0x0e
    10e2:	9f 85       	ldd	r25, Y+15	; 0x0f
    10e4:	23 e0       	ldi	r18, 0x03	; 3
    10e6:	4f e1       	ldi	r20, 0x1F	; 31
    10e8:	54 e0       	ldi	r21, 0x04	; 4
    10ea:	6a df       	rcall	.-300    	; 0xfc0 <FtoA>
	FtoA(Real_Value.VS_Battery,VS_BAT,3);
    10ec:	68 89       	ldd	r22, Y+16	; 0x10
    10ee:	79 89       	ldd	r23, Y+17	; 0x11
    10f0:	8a 89       	ldd	r24, Y+18	; 0x12
    10f2:	9b 89       	ldd	r25, Y+19	; 0x13
    10f4:	23 e0       	ldi	r18, 0x03	; 3
    10f6:	41 e4       	ldi	r20, 0x41	; 65
    10f8:	54 e0       	ldi	r21, 0x04	; 4
    10fa:	62 df       	rcall	.-316    	; 0xfc0 <FtoA>
	FtoA(Real_Value.CS_Battery,CS_BAT,3);
    10fc:	6c 89       	ldd	r22, Y+20	; 0x14
    10fe:	7d 89       	ldd	r23, Y+21	; 0x15
    1100:	8e 89       	ldd	r24, Y+22	; 0x16
    1102:	9f 89       	ldd	r25, Y+23	; 0x17
    1104:	23 e0       	ldi	r18, 0x03	; 3
    1106:	42 e1       	ldi	r20, 0x12	; 18
    1108:	54 e0       	ldi	r21, 0x04	; 4
    110a:	5a df       	rcall	.-332    	; 0xfc0 <FtoA>
	FtoA(Real_Value.VS_Solar,VS_BOS,3);
    110c:	68 8d       	ldd	r22, Y+24	; 0x18
    110e:	79 8d       	ldd	r23, Y+25	; 0x19
    1110:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1112:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1114:	23 e0       	ldi	r18, 0x03	; 3
    1116:	45 e2       	ldi	r20, 0x25	; 37
    1118:	54 e0       	ldi	r21, 0x04	; 4
    111a:	52 df       	rcall	.-348    	; 0xfc0 <FtoA>
	FtoA(Real_Value.CS_Solar,CS_BOS,3);
    111c:	6c 8d       	ldd	r22, Y+28	; 0x1c
    111e:	7d 8d       	ldd	r23, Y+29	; 0x1d
    1120:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1122:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1124:	23 e0       	ldi	r18, 0x03	; 3
    1126:	40 e0       	ldi	r20, 0x00	; 0
}
    1128:	54 e0       	ldi	r21, 0x04	; 4
    112a:	df 91       	pop	r29
	FtoA(Real_Value.VS_Buck5,VS_BUC5,3);
	FtoA(Real_Value.CS_Buck5,CS_BUC5,3);
	FtoA(Real_Value.VS_Battery,VS_BAT,3);
	FtoA(Real_Value.CS_Battery,CS_BAT,3);
	FtoA(Real_Value.VS_Solar,VS_BOS,3);
	FtoA(Real_Value.CS_Solar,CS_BOS,3);
    112c:	cf 91       	pop	r28
    112e:	48 cf       	rjmp	.-368    	; 0xfc0 <FtoA>

00001130 <SOLAR_ARRAY>:
}
// GROUP-1
void SOLAR_ARRAY(uint8_t SOLAR_array[])
{
    1130:	cf 93       	push	r28
    1132:	df 93       	push	r29
    1134:	ec 01       	movw	r28, r24
	SOLAR_array[0]=VS_BOS[0];// Measured value  of voltage solar Cells
    1136:	e5 e2       	ldi	r30, 0x25	; 37
    1138:	f4 e0       	ldi	r31, 0x04	; 4
    113a:	80 81       	ld	r24, Z
    113c:	88 83       	st	Y, r24
	SOLAR_array[1]=VS_BOS[1];
    113e:	81 81       	ldd	r24, Z+1	; 0x01
    1140:	89 83       	std	Y+1, r24	; 0x01
	SOLAR_array[2]=VS_BOS[2];
    1142:	82 81       	ldd	r24, Z+2	; 0x02
    1144:	8a 83       	std	Y+2, r24	; 0x02
	SOLAR_array[3]=VS_BOS[3];
    1146:	83 81       	ldd	r24, Z+3	; 0x03
    1148:	8b 83       	std	Y+3, r24	; 0x03
	SOLAR_array[4]=VS_BOS[4];
    114a:	84 81       	ldd	r24, Z+4	; 0x04
    114c:	8c 83       	std	Y+4, r24	; 0x04
	SOLAR_array[5]=CS_BOS[0];// Measured value  of current solar Cells
    114e:	e0 e0       	ldi	r30, 0x00	; 0
    1150:	f4 e0       	ldi	r31, 0x04	; 4
    1152:	80 81       	ld	r24, Z
    1154:	8d 83       	std	Y+5, r24	; 0x05
	SOLAR_array[6]=CS_BOS[1];
    1156:	81 81       	ldd	r24, Z+1	; 0x01
    1158:	8e 83       	std	Y+6, r24	; 0x06
	SOLAR_array[7]=CS_BOS[2];
    115a:	82 81       	ldd	r24, Z+2	; 0x02
    115c:	8f 83       	std	Y+7, r24	; 0x07
	SOLAR_array[8]=CS_BOS[3];
    115e:	83 81       	ldd	r24, Z+3	; 0x03
    1160:	88 87       	std	Y+8, r24	; 0x08
	SOLAR_array[9]=CS_BOS[4];
    1162:	84 81       	ldd	r24, Z+4	; 0x04
    1164:	89 87       	std	Y+9, r24	; 0x09
	SOLAR_array[10]=((DUTY/1024)*100);
    1166:	20 e0       	ldi	r18, 0x00	; 0
    1168:	30 e0       	ldi	r19, 0x00	; 0
    116a:	40 e8       	ldi	r20, 0x80	; 128
    116c:	5a e3       	ldi	r21, 0x3A	; 58
    116e:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <DUTY>
    1172:	70 91 74 04 	lds	r23, 0x0474	; 0x800474 <DUTY+0x1>
    1176:	80 91 75 04 	lds	r24, 0x0475	; 0x800475 <DUTY+0x2>
    117a:	90 91 76 04 	lds	r25, 0x0476	; 0x800476 <DUTY+0x3>
    117e:	34 d5       	rcall	.+2664   	; 0x1be8 <__mulsf3>
    1180:	20 e0       	ldi	r18, 0x00	; 0
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	48 ec       	ldi	r20, 0xC8	; 200
    1186:	52 e4       	ldi	r21, 0x42	; 66
    1188:	2f d5       	rcall	.+2654   	; 0x1be8 <__mulsf3>
    118a:	4c d4       	rcall	.+2200   	; 0x1a24 <__fixunssfsi>
    118c:	6a 87       	std	Y+10, r22	; 0x0a
}
    118e:	df 91       	pop	r29
    1190:	cf 91       	pop	r28
    1192:	08 95       	ret

00001194 <BUCKS>:

void BUCKS(uint8_t BUS[])
{
    1194:	fc 01       	movw	r30, r24
	BUS[0]=VS_BUC3[0];// Measured value of voltage Buck 3.3V
    1196:	ab e7       	ldi	r26, 0x7B	; 123
    1198:	b5 e0       	ldi	r27, 0x05	; 5
    119a:	8c 91       	ld	r24, X
    119c:	80 83       	st	Z, r24
	BUS[1]=VS_BUC3[1];
    119e:	11 96       	adiw	r26, 0x01	; 1
    11a0:	8c 91       	ld	r24, X
    11a2:	11 97       	sbiw	r26, 0x01	; 1
    11a4:	81 83       	std	Z+1, r24	; 0x01
	BUS[2]=VS_BUC3[2];
    11a6:	12 96       	adiw	r26, 0x02	; 2
    11a8:	8c 91       	ld	r24, X
    11aa:	12 97       	sbiw	r26, 0x02	; 2
    11ac:	82 83       	std	Z+2, r24	; 0x02
	BUS[3]=VS_BUC3[3];
    11ae:	13 96       	adiw	r26, 0x03	; 3
    11b0:	8c 91       	ld	r24, X
    11b2:	13 97       	sbiw	r26, 0x03	; 3
    11b4:	83 83       	std	Z+3, r24	; 0x03
	BUS[4]=VS_BUC3[4];
    11b6:	14 96       	adiw	r26, 0x04	; 4
    11b8:	8c 91       	ld	r24, X
    11ba:	84 83       	std	Z+4, r24	; 0x04
	BUS[5]=VS_BUC5[0];// Measured value of voltage Buck 5V
    11bc:	ab e4       	ldi	r26, 0x4B	; 75
    11be:	b4 e0       	ldi	r27, 0x04	; 4
    11c0:	8c 91       	ld	r24, X
    11c2:	85 83       	std	Z+5, r24	; 0x05
	BUS[6]=VS_BUC5[1];
    11c4:	11 96       	adiw	r26, 0x01	; 1
    11c6:	8c 91       	ld	r24, X
    11c8:	11 97       	sbiw	r26, 0x01	; 1
    11ca:	86 83       	std	Z+6, r24	; 0x06
	BUS[7]=VS_BUC5[2];
    11cc:	12 96       	adiw	r26, 0x02	; 2
    11ce:	8c 91       	ld	r24, X
    11d0:	12 97       	sbiw	r26, 0x02	; 2
    11d2:	87 83       	std	Z+7, r24	; 0x07
	BUS[8]=VS_BUC5[3];
    11d4:	13 96       	adiw	r26, 0x03	; 3
    11d6:	8c 91       	ld	r24, X
    11d8:	13 97       	sbiw	r26, 0x03	; 3
    11da:	80 87       	std	Z+8, r24	; 0x08
	BUS[9]=VS_BUC5[4];
    11dc:	14 96       	adiw	r26, 0x04	; 4
    11de:	8c 91       	ld	r24, X
    11e0:	81 87       	std	Z+9, r24	; 0x09
	BUS[10]=CS_BUC3[0];// Measured value of current Buck 3.3V
    11e2:	ab e2       	ldi	r26, 0x2B	; 43
    11e4:	b4 e0       	ldi	r27, 0x04	; 4
    11e6:	8c 91       	ld	r24, X
    11e8:	82 87       	std	Z+10, r24	; 0x0a
	BUS[11]=CS_BUC3[1];
    11ea:	11 96       	adiw	r26, 0x01	; 1
    11ec:	8c 91       	ld	r24, X
    11ee:	11 97       	sbiw	r26, 0x01	; 1
    11f0:	83 87       	std	Z+11, r24	; 0x0b
	BUS[12]=CS_BUC3[2];
    11f2:	12 96       	adiw	r26, 0x02	; 2
    11f4:	8c 91       	ld	r24, X
    11f6:	12 97       	sbiw	r26, 0x02	; 2
    11f8:	84 87       	std	Z+12, r24	; 0x0c
	BUS[13]=CS_BUC3[3];
    11fa:	13 96       	adiw	r26, 0x03	; 3
    11fc:	8c 91       	ld	r24, X
    11fe:	13 97       	sbiw	r26, 0x03	; 3
    1200:	85 87       	std	Z+13, r24	; 0x0d
	BUS[14]=CS_BUC3[4];
    1202:	14 96       	adiw	r26, 0x04	; 4
    1204:	8c 91       	ld	r24, X
    1206:	86 87       	std	Z+14, r24	; 0x0e
	BUS[15]=CS_BUC5[0];// Measured value of current Buck 5V
    1208:	af e1       	ldi	r26, 0x1F	; 31
    120a:	b4 e0       	ldi	r27, 0x04	; 4
    120c:	8c 91       	ld	r24, X
    120e:	87 87       	std	Z+15, r24	; 0x0f
	BUS[16]=CS_BUC5[1];
    1210:	11 96       	adiw	r26, 0x01	; 1
    1212:	8c 91       	ld	r24, X
    1214:	11 97       	sbiw	r26, 0x01	; 1
    1216:	80 8b       	std	Z+16, r24	; 0x10
	BUS[17]=CS_BUC5[2];
    1218:	12 96       	adiw	r26, 0x02	; 2
    121a:	8c 91       	ld	r24, X
    121c:	12 97       	sbiw	r26, 0x02	; 2
    121e:	81 8b       	std	Z+17, r24	; 0x11
	BUS[18]=CS_BUC5[3];
    1220:	13 96       	adiw	r26, 0x03	; 3
    1222:	8c 91       	ld	r24, X
    1224:	13 97       	sbiw	r26, 0x03	; 3
    1226:	82 8b       	std	Z+18, r24	; 0x12
	BUS[19]=CS_BUC5[4];
    1228:	14 96       	adiw	r26, 0x04	; 4
    122a:	8c 91       	ld	r24, X
    122c:	83 8b       	std	Z+19, r24	; 0x13
    122e:	08 95       	ret

00001230 <GET_Battery>:
}

void GET_Battery(uint8_t Batt[])
{
    1230:	fc 01       	movw	r30, r24
	Batt[0]=Real_Value.Temp_S1;// Measured value of Temp. Sensor 1
    1232:	a1 e5       	ldi	r26, 0x51	; 81
    1234:	b4 e0       	ldi	r27, 0x04	; 4
    1236:	90 96       	adiw	r26, 0x20	; 32
    1238:	8c 91       	ld	r24, X
    123a:	90 97       	sbiw	r26, 0x20	; 32
    123c:	80 83       	st	Z, r24
	Batt[1]=Real_Value.Temp_S2;// Measured value of Temp. Sensor 2
    123e:	91 96       	adiw	r26, 0x21	; 33
    1240:	8c 91       	ld	r24, X
    1242:	81 83       	std	Z+1, r24	; 0x01
	Batt[2]=VS_BAT[0];// Measured value  of voltage Battery
    1244:	a1 e4       	ldi	r26, 0x41	; 65
    1246:	b4 e0       	ldi	r27, 0x04	; 4
    1248:	8c 91       	ld	r24, X
    124a:	82 83       	std	Z+2, r24	; 0x02
	Batt[3]=VS_BAT[1];
    124c:	11 96       	adiw	r26, 0x01	; 1
    124e:	8c 91       	ld	r24, X
    1250:	11 97       	sbiw	r26, 0x01	; 1
    1252:	83 83       	std	Z+3, r24	; 0x03
	Batt[4]=VS_BAT[2];
    1254:	12 96       	adiw	r26, 0x02	; 2
    1256:	8c 91       	ld	r24, X
    1258:	12 97       	sbiw	r26, 0x02	; 2
    125a:	84 83       	std	Z+4, r24	; 0x04
	Batt[5]=VS_BAT[3];
    125c:	13 96       	adiw	r26, 0x03	; 3
    125e:	8c 91       	ld	r24, X
    1260:	13 97       	sbiw	r26, 0x03	; 3
    1262:	85 83       	std	Z+5, r24	; 0x05
	Batt[6]=VS_BAT[4];
    1264:	14 96       	adiw	r26, 0x04	; 4
    1266:	8c 91       	ld	r24, X
    1268:	86 83       	std	Z+6, r24	; 0x06
	Batt[7]=CS_BAT[0];// Measured value  of current Battery
    126a:	a2 e1       	ldi	r26, 0x12	; 18
    126c:	b4 e0       	ldi	r27, 0x04	; 4
    126e:	8c 91       	ld	r24, X
    1270:	87 83       	std	Z+7, r24	; 0x07
	Batt[8]=CS_BAT[1];
    1272:	11 96       	adiw	r26, 0x01	; 1
    1274:	8c 91       	ld	r24, X
    1276:	11 97       	sbiw	r26, 0x01	; 1
    1278:	80 87       	std	Z+8, r24	; 0x08
	Batt[9]=CS_BAT[2];
    127a:	12 96       	adiw	r26, 0x02	; 2
    127c:	8c 91       	ld	r24, X
    127e:	12 97       	sbiw	r26, 0x02	; 2
    1280:	81 87       	std	Z+9, r24	; 0x09
	Batt[10]=CS_BAT[3];
    1282:	13 96       	adiw	r26, 0x03	; 3
    1284:	8c 91       	ld	r24, X
    1286:	13 97       	sbiw	r26, 0x03	; 3
    1288:	82 87       	std	Z+10, r24	; 0x0a
	Batt[11]=CS_BAT[4];
    128a:	14 96       	adiw	r26, 0x04	; 4
    128c:	8c 91       	ld	r24, X
    128e:	83 87       	std	Z+11, r24	; 0x0b
    1290:	08 95       	ret

00001292 <Get_All_Telemetry>:
}

void Get_All_Telemetry(uint8_t All_value_ADC[])
{
    1292:	cf 93       	push	r28
    1294:	df 93       	push	r29
    1296:	ec 01       	movw	r28, r24
	All_value_ADC[0]=VS_BUC3[0];// Measured value of voltage Buck 3.3V
    1298:	eb e7       	ldi	r30, 0x7B	; 123
    129a:	f5 e0       	ldi	r31, 0x05	; 5
    129c:	80 81       	ld	r24, Z
    129e:	88 83       	st	Y, r24
	All_value_ADC[1]=VS_BUC3[1];
    12a0:	81 81       	ldd	r24, Z+1	; 0x01
    12a2:	89 83       	std	Y+1, r24	; 0x01
	All_value_ADC[2]=VS_BUC3[2];
    12a4:	82 81       	ldd	r24, Z+2	; 0x02
    12a6:	8a 83       	std	Y+2, r24	; 0x02
	All_value_ADC[3]=VS_BUC3[3];
    12a8:	83 81       	ldd	r24, Z+3	; 0x03
    12aa:	8b 83       	std	Y+3, r24	; 0x03
	All_value_ADC[4]=VS_BUC3[4];
    12ac:	84 81       	ldd	r24, Z+4	; 0x04
    12ae:	8c 83       	std	Y+4, r24	; 0x04
	All_value_ADC[5]=VS_BUC5[0];// Measured value of voltage Buck 5V
    12b0:	eb e4       	ldi	r30, 0x4B	; 75
    12b2:	f4 e0       	ldi	r31, 0x04	; 4
    12b4:	80 81       	ld	r24, Z
    12b6:	8d 83       	std	Y+5, r24	; 0x05
	All_value_ADC[6]=VS_BUC5[1];
    12b8:	81 81       	ldd	r24, Z+1	; 0x01
    12ba:	8e 83       	std	Y+6, r24	; 0x06
	All_value_ADC[7]=VS_BUC5[2];
    12bc:	82 81       	ldd	r24, Z+2	; 0x02
    12be:	8f 83       	std	Y+7, r24	; 0x07
	All_value_ADC[8]=VS_BUC5[3];
    12c0:	83 81       	ldd	r24, Z+3	; 0x03
    12c2:	88 87       	std	Y+8, r24	; 0x08
	All_value_ADC[9]=VS_BUC5[4];
    12c4:	84 81       	ldd	r24, Z+4	; 0x04
    12c6:	89 87       	std	Y+9, r24	; 0x09
	All_value_ADC[10]=CS_BUC3[0];// Measured value of current Buck 3.3V
    12c8:	eb e2       	ldi	r30, 0x2B	; 43
    12ca:	f4 e0       	ldi	r31, 0x04	; 4
    12cc:	80 81       	ld	r24, Z
    12ce:	8a 87       	std	Y+10, r24	; 0x0a
	All_value_ADC[11]=CS_BUC3[1];
    12d0:	81 81       	ldd	r24, Z+1	; 0x01
    12d2:	8b 87       	std	Y+11, r24	; 0x0b
	All_value_ADC[12]=CS_BUC3[2];
    12d4:	82 81       	ldd	r24, Z+2	; 0x02
    12d6:	8c 87       	std	Y+12, r24	; 0x0c
	All_value_ADC[13]=CS_BUC3[3];
    12d8:	83 81       	ldd	r24, Z+3	; 0x03
    12da:	8d 87       	std	Y+13, r24	; 0x0d
	All_value_ADC[14]=CS_BUC3[4];
    12dc:	84 81       	ldd	r24, Z+4	; 0x04
    12de:	8e 87       	std	Y+14, r24	; 0x0e
	All_value_ADC[15]=CS_BUC5[0];// Measured value of current Buck 5V
    12e0:	ef e1       	ldi	r30, 0x1F	; 31
    12e2:	f4 e0       	ldi	r31, 0x04	; 4
    12e4:	80 81       	ld	r24, Z
    12e6:	8f 87       	std	Y+15, r24	; 0x0f
	All_value_ADC[16]=CS_BUC5[1];
    12e8:	81 81       	ldd	r24, Z+1	; 0x01
    12ea:	88 8b       	std	Y+16, r24	; 0x10
	All_value_ADC[17]=CS_BUC5[2];
    12ec:	82 81       	ldd	r24, Z+2	; 0x02
    12ee:	89 8b       	std	Y+17, r24	; 0x11
	All_value_ADC[18]=CS_BUC5[3];
    12f0:	83 81       	ldd	r24, Z+3	; 0x03
    12f2:	8a 8b       	std	Y+18, r24	; 0x12
	All_value_ADC[19]=CS_BUC5[4];
    12f4:	84 81       	ldd	r24, Z+4	; 0x04
    12f6:	8b 8b       	std	Y+19, r24	; 0x13
	All_value_ADC[20]=VS_BOS[0];// Measured value  of voltage solar Cells
    12f8:	e5 e2       	ldi	r30, 0x25	; 37
    12fa:	f4 e0       	ldi	r31, 0x04	; 4
    12fc:	80 81       	ld	r24, Z
    12fe:	8c 8b       	std	Y+20, r24	; 0x14
	All_value_ADC[21]=VS_BOS[1];
    1300:	81 81       	ldd	r24, Z+1	; 0x01
    1302:	8d 8b       	std	Y+21, r24	; 0x15
	All_value_ADC[22]=VS_BOS[2];
    1304:	82 81       	ldd	r24, Z+2	; 0x02
    1306:	8e 8b       	std	Y+22, r24	; 0x16
	All_value_ADC[23]=VS_BOS[3];
    1308:	83 81       	ldd	r24, Z+3	; 0x03
    130a:	8f 8b       	std	Y+23, r24	; 0x17
	All_value_ADC[24]=VS_BOS[4];
    130c:	84 81       	ldd	r24, Z+4	; 0x04
    130e:	88 8f       	std	Y+24, r24	; 0x18
	All_value_ADC[25]=CS_BOS[0];// Measured value  of current solar Cells
    1310:	e0 e0       	ldi	r30, 0x00	; 0
    1312:	f4 e0       	ldi	r31, 0x04	; 4
    1314:	80 81       	ld	r24, Z
    1316:	89 8f       	std	Y+25, r24	; 0x19
	All_value_ADC[26]=CS_BOS[1];
    1318:	81 81       	ldd	r24, Z+1	; 0x01
    131a:	8a 8f       	std	Y+26, r24	; 0x1a
	All_value_ADC[27]=CS_BOS[2];
    131c:	82 81       	ldd	r24, Z+2	; 0x02
    131e:	8b 8f       	std	Y+27, r24	; 0x1b
	All_value_ADC[28]=CS_BOS[3];
    1320:	83 81       	ldd	r24, Z+3	; 0x03
    1322:	8c 8f       	std	Y+28, r24	; 0x1c
	All_value_ADC[29]=CS_BOS[4];
    1324:	84 81       	ldd	r24, Z+4	; 0x04
    1326:	8d 8f       	std	Y+29, r24	; 0x1d
	All_value_ADC[30]=VS_BAT[0];// Measured value  of voltage Battery
    1328:	e1 e4       	ldi	r30, 0x41	; 65
    132a:	f4 e0       	ldi	r31, 0x04	; 4
    132c:	80 81       	ld	r24, Z
    132e:	8e 8f       	std	Y+30, r24	; 0x1e
	All_value_ADC[31]=VS_BAT[1];
    1330:	81 81       	ldd	r24, Z+1	; 0x01
    1332:	8f 8f       	std	Y+31, r24	; 0x1f
	All_value_ADC[32]=VS_BAT[2];
    1334:	82 81       	ldd	r24, Z+2	; 0x02
    1336:	88 a3       	std	Y+32, r24	; 0x20
	All_value_ADC[33]=VS_BAT[3];
    1338:	83 81       	ldd	r24, Z+3	; 0x03
    133a:	89 a3       	std	Y+33, r24	; 0x21
	All_value_ADC[34]=VS_BAT[4];
    133c:	84 81       	ldd	r24, Z+4	; 0x04
    133e:	8a a3       	std	Y+34, r24	; 0x22
	All_value_ADC[35]=CS_BAT[0];// Measured value  of current Battery
    1340:	e2 e1       	ldi	r30, 0x12	; 18
    1342:	f4 e0       	ldi	r31, 0x04	; 4
    1344:	80 81       	ld	r24, Z
    1346:	8b a3       	std	Y+35, r24	; 0x23
	All_value_ADC[36]=CS_BAT[1];
    1348:	81 81       	ldd	r24, Z+1	; 0x01
    134a:	8c a3       	std	Y+36, r24	; 0x24
	All_value_ADC[37]=CS_BAT[2];
    134c:	82 81       	ldd	r24, Z+2	; 0x02
    134e:	8d a3       	std	Y+37, r24	; 0x25
	All_value_ADC[38]=CS_BAT[3];
    1350:	83 81       	ldd	r24, Z+3	; 0x03
    1352:	8e a3       	std	Y+38, r24	; 0x26
	All_value_ADC[39]=CS_BAT[4];
    1354:	84 81       	ldd	r24, Z+4	; 0x04
    1356:	8f a3       	std	Y+39, r24	; 0x27
	All_value_ADC[40]=Real_Value.Temp_S1;// Measured value of Temp. Sensor 1
    1358:	e1 e5       	ldi	r30, 0x51	; 81
    135a:	f4 e0       	ldi	r31, 0x04	; 4
    135c:	80 a1       	ldd	r24, Z+32	; 0x20
    135e:	88 a7       	std	Y+40, r24	; 0x28
	All_value_ADC[41]=Real_Value.Temp_S2;// Measured value of Temp. Sensor 2
    1360:	81 a1       	ldd	r24, Z+33	; 0x21
    1362:	89 a7       	std	Y+41, r24	; 0x29
	All_value_ADC[42]=((DUTY/1024)*100);
    1364:	20 e0       	ldi	r18, 0x00	; 0
    1366:	30 e0       	ldi	r19, 0x00	; 0
    1368:	40 e8       	ldi	r20, 0x80	; 128
    136a:	5a e3       	ldi	r21, 0x3A	; 58
    136c:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <DUTY>
    1370:	70 91 74 04 	lds	r23, 0x0474	; 0x800474 <DUTY+0x1>
    1374:	80 91 75 04 	lds	r24, 0x0475	; 0x800475 <DUTY+0x2>
    1378:	90 91 76 04 	lds	r25, 0x0476	; 0x800476 <DUTY+0x3>
    137c:	35 d4       	rcall	.+2154   	; 0x1be8 <__mulsf3>
    137e:	20 e0       	ldi	r18, 0x00	; 0
    1380:	30 e0       	ldi	r19, 0x00	; 0
    1382:	48 ec       	ldi	r20, 0xC8	; 200
    1384:	52 e4       	ldi	r21, 0x42	; 66
    1386:	30 d4       	rcall	.+2144   	; 0x1be8 <__mulsf3>
    1388:	4d d3       	rcall	.+1690   	; 0x1a24 <__fixunssfsi>
    138a:	6a a7       	std	Y+42, r22	; 0x2a

}
    138c:	df 91       	pop	r29
    138e:	cf 91       	pop	r28
    1390:	08 95       	ret

00001392 <STATUS_SW>:

// GROUP-2
void STATUS_SW(uint8_t STATUS_SW_BUF[])
{
    1392:	fc 01       	movw	r30, r24
	STATUS_SW_BUF[0]=(0x10 & PORTA);//CAMERA
    1394:	82 b1       	in	r24, 0x02	; 2
    1396:	80 71       	andi	r24, 0x10	; 16
    1398:	80 83       	st	Z, r24
	STATUS_SW_BUF[1]=(0x40 & PORTA);//COMMUNICATION
    139a:	82 b1       	in	r24, 0x02	; 2
    139c:	80 74       	andi	r24, 0x40	; 64
    139e:	81 83       	std	Z+1, r24	; 0x01
	STATUS_SW_BUF[2]=(0x01 & PORTC);//KILL SWITCH R
    13a0:	88 b1       	in	r24, 0x08	; 8
    13a2:	81 70       	andi	r24, 0x01	; 1
    13a4:	82 83       	std	Z+2, r24	; 0x02
	STATUS_SW_BUF[3]=(0x04 & PORTC);//KILL SWITCH L
    13a6:	88 b1       	in	r24, 0x08	; 8
    13a8:	84 70       	andi	r24, 0x04	; 4
    13aa:	83 83       	std	Z+3, r24	; 0x03
	STATUS_SW_BUF[4]=(0x10 & PORTC);//HEATER
    13ac:	88 b1       	in	r24, 0x08	; 8
    13ae:	80 71       	andi	r24, 0x10	; 16
    13b0:	84 83       	std	Z+4, r24	; 0x04
	STATUS_SW_BUF[5]=(0x04 & PORTG);//ADCS
    13b2:	84 b3       	in	r24, 0x14	; 20
    13b4:	84 70       	andi	r24, 0x04	; 4
    13b6:	85 83       	std	Z+5, r24	; 0x05
    13b8:	08 95       	ret

000013ba <POWER_SWITCH>:
}

void POWER_SWITCH(uint8_t Flag)
{
	if (Flag == ON)
    13ba:	81 30       	cpi	r24, 0x01	; 1
    13bc:	11 f4       	brne	.+4      	; 0x13c2 <POWER_SWITCH+0x8>
	{
		Set_SW(PORTA,CAMERA);
    13be:	14 9a       	sbi	0x02, 4	; 2
    13c0:	08 95       	ret
	}
	else if(Flag == OFF)
    13c2:	81 11       	cpse	r24, r1
    13c4:	01 c0       	rjmp	.+2      	; 0x13c8 <POWER_SWITCH+0xe>
	{
		Reset_SW(PORTA,CAMERA);
    13c6:	14 98       	cbi	0x02, 4	; 2
    13c8:	08 95       	ret

000013ca <SET_TIME_NOW>:
	}
}

// GROUP-3
void SET_TIME_NOW(uint8_t STime[])
{	
    13ca:	cf 93       	push	r28
    13cc:	df 93       	push	r29
    13ce:	cd b7       	in	r28, 0x3d	; 61
    13d0:	de b7       	in	r29, 0x3e	; 62
    13d2:	2c 97       	sbiw	r28, 0x0c	; 12
    13d4:	0f b6       	in	r0, 0x3f	; 63
    13d6:	f8 94       	cli
    13d8:	de bf       	out	0x3e, r29	; 62
    13da:	0f be       	out	0x3f, r0	; 63
    13dc:	cd bf       	out	0x3d, r28	; 61
    13de:	fc 01       	movw	r30, r24
	struct tm Time;
	time_t Set_time;
	Time.tm_sec  =STime[0];
    13e0:	80 81       	ld	r24, Z
    13e2:	89 83       	std	Y+1, r24	; 0x01
	Time.tm_min  =STime[1]+2;
    13e4:	81 81       	ldd	r24, Z+1	; 0x01
    13e6:	8e 5f       	subi	r24, 0xFE	; 254
    13e8:	8a 83       	std	Y+2, r24	; 0x02
	Time.tm_hour =STime[2];
    13ea:	82 81       	ldd	r24, Z+2	; 0x02
    13ec:	8b 83       	std	Y+3, r24	; 0x03
	Time.tm_mday =STime[3];
    13ee:	83 81       	ldd	r24, Z+3	; 0x03
    13f0:	8c 83       	std	Y+4, r24	; 0x04
	Time.tm_wday =STime[4];
    13f2:	84 81       	ldd	r24, Z+4	; 0x04
    13f4:	8d 83       	std	Y+5, r24	; 0x05
	Time.tm_mon  =STime[5];
    13f6:	85 81       	ldd	r24, Z+5	; 0x05
    13f8:	8e 83       	std	Y+6, r24	; 0x06
	Time.tm_year =STime[6];
    13fa:	86 81       	ldd	r24, Z+6	; 0x06
    13fc:	90 e0       	ldi	r25, 0x00	; 0
    13fe:	98 87       	std	Y+8, r25	; 0x08
    1400:	8f 83       	std	Y+7, r24	; 0x07
	Set_time =mktime(&Time);
    1402:	ce 01       	movw	r24, r28
    1404:	01 96       	adiw	r24, 0x01	; 1
    1406:	0e 94 2b 01 	call	0x256	; 0x256 <mktime>
	set_system_time(Set_time);
    140a:	0e 94 91 01 	call	0x322	; 0x322 <set_system_time>
}
    140e:	2c 96       	adiw	r28, 0x0c	; 12
    1410:	0f b6       	in	r0, 0x3f	; 63
    1412:	f8 94       	cli
    1414:	de bf       	out	0x3e, r29	; 62
    1416:	0f be       	out	0x3f, r0	; 63
    1418:	cd bf       	out	0x3d, r28	; 61
    141a:	df 91       	pop	r29
    141c:	cf 91       	pop	r28
    141e:	08 95       	ret

00001420 <GET_TIME_NOW>:

void GET_TIME_NOW(uint8_t GTime[])
{	
    1420:	cf 93       	push	r28
    1422:	df 93       	push	r29
    1424:	ec 01       	movw	r28, r24
	GTime[0]=READ_EEPROM(0x0081);
    1426:	81 e8       	ldi	r24, 0x81	; 129
    1428:	90 e0       	ldi	r25, 0x00	; 0
    142a:	85 dc       	rcall	.-1782   	; 0xd36 <READ_EEPROM>
    142c:	88 83       	st	Y, r24
	GTime[1]=READ_EEPROM(0x0082);
    142e:	82 e8       	ldi	r24, 0x82	; 130
    1430:	90 e0       	ldi	r25, 0x00	; 0
    1432:	81 dc       	rcall	.-1790   	; 0xd36 <READ_EEPROM>
    1434:	89 83       	std	Y+1, r24	; 0x01
	GTime[2]=READ_EEPROM(0x0083);
    1436:	83 e8       	ldi	r24, 0x83	; 131
    1438:	90 e0       	ldi	r25, 0x00	; 0
    143a:	7d dc       	rcall	.-1798   	; 0xd36 <READ_EEPROM>
    143c:	8a 83       	std	Y+2, r24	; 0x02
	GTime[3]=READ_EEPROM(0x0084);
    143e:	84 e8       	ldi	r24, 0x84	; 132
    1440:	90 e0       	ldi	r25, 0x00	; 0
    1442:	79 dc       	rcall	.-1806   	; 0xd36 <READ_EEPROM>
    1444:	8b 83       	std	Y+3, r24	; 0x03
	GTime[4]=READ_EEPROM(0x0086);
    1446:	86 e8       	ldi	r24, 0x86	; 134
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	75 dc       	rcall	.-1814   	; 0xd36 <READ_EEPROM>
    144c:	8c 83       	std	Y+4, r24	; 0x04
	GTime[5]=READ_EEPROM(0x0087);
    144e:	87 e8       	ldi	r24, 0x87	; 135
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	71 dc       	rcall	.-1822   	; 0xd36 <READ_EEPROM>
    1454:	8d 83       	std	Y+5, r24	; 0x05
    1456:	df 91       	pop	r29
}
    1458:	cf 91       	pop	r28
    145a:	08 95       	ret

0000145c <SET_CLOCK>:
    145c:	cf 93       	push	r28

void SET_CLOCK(uint8_t Clock[])
{
    145e:	df 93       	push	r29
    1460:	ec 01       	movw	r28, r24
	WRITE_EEPROM(0x0090 ,Clock[0] );
    1462:	68 81       	ld	r22, Y
    1464:	80 e9       	ldi	r24, 0x90	; 144
    1466:	90 e0       	ldi	r25, 0x00	; 0
    1468:	5e dc       	rcall	.-1860   	; 0xd26 <WRITE_EEPROM>
	WRITE_EEPROM(0x0091 ,Clock[1] );
    146a:	69 81       	ldd	r22, Y+1	; 0x01
    146c:	81 e9       	ldi	r24, 0x91	; 145
    146e:	90 e0       	ldi	r25, 0x00	; 0
    1470:	5a dc       	rcall	.-1868   	; 0xd26 <WRITE_EEPROM>
	WRITE_EEPROM(0x0092 ,Clock[2] );
    1472:	6a 81       	ldd	r22, Y+2	; 0x02
    1474:	82 e9       	ldi	r24, 0x92	; 146
    1476:	90 e0       	ldi	r25, 0x00	; 0
    1478:	56 dc       	rcall	.-1876   	; 0xd26 <WRITE_EEPROM>
	WRITE_EEPROM(0x0093 ,Clock[3] );
    147a:	6b 81       	ldd	r22, Y+3	; 0x03
    147c:	83 e9       	ldi	r24, 0x93	; 147
    147e:	90 e0       	ldi	r25, 0x00	; 0
    1480:	52 dc       	rcall	.-1884   	; 0xd26 <WRITE_EEPROM>
	WRITE_EEPROM(0x0094 ,Clock[4]+Clock[0]);
    1482:	6c 81       	ldd	r22, Y+4	; 0x04
    1484:	88 81       	ld	r24, Y
    1486:	68 0f       	add	r22, r24
    1488:	84 e9       	ldi	r24, 0x94	; 148
}
    148a:	90 e0       	ldi	r25, 0x00	; 0
    148c:	df 91       	pop	r29
{
	WRITE_EEPROM(0x0090 ,Clock[0] );
	WRITE_EEPROM(0x0091 ,Clock[1] );
	WRITE_EEPROM(0x0092 ,Clock[2] );
	WRITE_EEPROM(0x0093 ,Clock[3] );
	WRITE_EEPROM(0x0094 ,Clock[4]+Clock[0]);
    148e:	cf 91       	pop	r28
    1490:	4a cc       	rjmp	.-1900   	; 0xd26 <WRITE_EEPROM>

00001492 <Test_EPS_Tx>:
}

// GROUP-4
void Test_EPS_Tx(uint8_t TEST_EPS_Tx[])
{
    1492:	fc 01       	movw	r30, r24
	TEST_EPS_Tx[0]=0x45;
    1494:	85 e4       	ldi	r24, 0x45	; 69
    1496:	80 83       	st	Z, r24
	TEST_EPS_Tx[1]=0x50;
    1498:	80 e5       	ldi	r24, 0x50	; 80
    149a:	81 83       	std	Z+1, r24	; 0x01
	TEST_EPS_Tx[2]=0x53;
    149c:	93 e5       	ldi	r25, 0x53	; 83
    149e:	92 83       	std	Z+2, r25	; 0x02
	TEST_EPS_Tx[3]=0x5f;
    14a0:	9f e5       	ldi	r25, 0x5F	; 95
    14a2:	93 83       	std	Z+3, r25	; 0x03
	TEST_EPS_Tx[4]=0x50;
    14a4:	84 83       	std	Z+4, r24	; 0x04
	TEST_EPS_Tx[5]=0x49;
    14a6:	89 e4       	ldi	r24, 0x49	; 73
    14a8:	85 83       	std	Z+5, r24	; 0x05
	TEST_EPS_Tx[6]=0x4e;
    14aa:	8e e4       	ldi	r24, 0x4E	; 78
    14ac:	86 83       	std	Z+6, r24	; 0x06
	TEST_EPS_Tx[7]=0x47;
    14ae:	87 e4       	ldi	r24, 0x47	; 71
    14b0:	87 83       	std	Z+7, r24	; 0x07
    14b2:	08 95       	ret

000014b4 <EPS_Transaction_Log>:
}

void EPS_Transaction_Log(uint8_t Transaction_BUF[])
{
    14b4:	cf 93       	push	r28
    14b6:	df 93       	push	r29
    14b8:	ec 01       	movw	r28, r24
	Transaction_BUF[0]=VS_BUC3[0];// Measured value of voltage Buck 3.3V
    14ba:	eb e7       	ldi	r30, 0x7B	; 123
    14bc:	f5 e0       	ldi	r31, 0x05	; 5
    14be:	80 81       	ld	r24, Z
    14c0:	88 83       	st	Y, r24
	Transaction_BUF[1]=VS_BUC3[1];
    14c2:	81 81       	ldd	r24, Z+1	; 0x01
    14c4:	89 83       	std	Y+1, r24	; 0x01
	Transaction_BUF[2]=VS_BUC3[2];
    14c6:	82 81       	ldd	r24, Z+2	; 0x02
    14c8:	8a 83       	std	Y+2, r24	; 0x02
	Transaction_BUF[3]=VS_BUC3[3];
    14ca:	83 81       	ldd	r24, Z+3	; 0x03
    14cc:	8b 83       	std	Y+3, r24	; 0x03
	Transaction_BUF[4]=VS_BUC3[4];
    14ce:	84 81       	ldd	r24, Z+4	; 0x04
    14d0:	8c 83       	std	Y+4, r24	; 0x04
	Transaction_BUF[5]=VS_BUC5[0];// Measured value of voltage Buck 5V
    14d2:	eb e4       	ldi	r30, 0x4B	; 75
    14d4:	f4 e0       	ldi	r31, 0x04	; 4
    14d6:	80 81       	ld	r24, Z
    14d8:	8d 83       	std	Y+5, r24	; 0x05
	Transaction_BUF[6]=VS_BUC5[1];
    14da:	81 81       	ldd	r24, Z+1	; 0x01
    14dc:	8e 83       	std	Y+6, r24	; 0x06
	Transaction_BUF[7]=VS_BUC5[2];
    14de:	82 81       	ldd	r24, Z+2	; 0x02
    14e0:	8f 83       	std	Y+7, r24	; 0x07
	Transaction_BUF[8]=VS_BUC5[3];
    14e2:	83 81       	ldd	r24, Z+3	; 0x03
    14e4:	88 87       	std	Y+8, r24	; 0x08
	Transaction_BUF[9]=VS_BUC5[4];
    14e6:	84 81       	ldd	r24, Z+4	; 0x04
    14e8:	89 87       	std	Y+9, r24	; 0x09
	Transaction_BUF[10]=CS_BUC3[0];// Measured value of current Buck 3.3V
    14ea:	eb e2       	ldi	r30, 0x2B	; 43
    14ec:	f4 e0       	ldi	r31, 0x04	; 4
    14ee:	80 81       	ld	r24, Z
    14f0:	8a 87       	std	Y+10, r24	; 0x0a
	Transaction_BUF[11]=CS_BUC3[1];
    14f2:	81 81       	ldd	r24, Z+1	; 0x01
    14f4:	8b 87       	std	Y+11, r24	; 0x0b
	Transaction_BUF[12]=CS_BUC3[2];
    14f6:	82 81       	ldd	r24, Z+2	; 0x02
    14f8:	8c 87       	std	Y+12, r24	; 0x0c
	Transaction_BUF[13]=CS_BUC3[3];
    14fa:	83 81       	ldd	r24, Z+3	; 0x03
    14fc:	8d 87       	std	Y+13, r24	; 0x0d
	Transaction_BUF[14]=CS_BUC3[4];
    14fe:	84 81       	ldd	r24, Z+4	; 0x04
    1500:	8e 87       	std	Y+14, r24	; 0x0e
	Transaction_BUF[15]=CS_BUC5[0];// Measured value of current Buck 5V
    1502:	ef e1       	ldi	r30, 0x1F	; 31
    1504:	f4 e0       	ldi	r31, 0x04	; 4
    1506:	80 81       	ld	r24, Z
    1508:	8f 87       	std	Y+15, r24	; 0x0f
	Transaction_BUF[16]=CS_BUC5[1];
    150a:	81 81       	ldd	r24, Z+1	; 0x01
    150c:	88 8b       	std	Y+16, r24	; 0x10
	Transaction_BUF[17]=CS_BUC5[2];
    150e:	82 81       	ldd	r24, Z+2	; 0x02
    1510:	89 8b       	std	Y+17, r24	; 0x11
	Transaction_BUF[18]=CS_BUC5[3];
    1512:	83 81       	ldd	r24, Z+3	; 0x03
    1514:	8a 8b       	std	Y+18, r24	; 0x12
	Transaction_BUF[19]=CS_BUC5[4];
    1516:	84 81       	ldd	r24, Z+4	; 0x04
    1518:	8b 8b       	std	Y+19, r24	; 0x13
	Transaction_BUF[20]=VS_BOS[0];// Measured value  of voltage solar Cells
    151a:	e5 e2       	ldi	r30, 0x25	; 37
    151c:	f4 e0       	ldi	r31, 0x04	; 4
    151e:	80 81       	ld	r24, Z
    1520:	8c 8b       	std	Y+20, r24	; 0x14
	Transaction_BUF[21]=VS_BOS[1];
    1522:	81 81       	ldd	r24, Z+1	; 0x01
    1524:	8d 8b       	std	Y+21, r24	; 0x15
	Transaction_BUF[22]=VS_BOS[2];
    1526:	82 81       	ldd	r24, Z+2	; 0x02
    1528:	8e 8b       	std	Y+22, r24	; 0x16
	Transaction_BUF[23]=VS_BOS[3];
    152a:	83 81       	ldd	r24, Z+3	; 0x03
    152c:	8f 8b       	std	Y+23, r24	; 0x17
	Transaction_BUF[24]=VS_BOS[4];
    152e:	84 81       	ldd	r24, Z+4	; 0x04
    1530:	88 8f       	std	Y+24, r24	; 0x18
	Transaction_BUF[25]=CS_BOS[0];// Measured value  of current solar Cells
    1532:	e0 e0       	ldi	r30, 0x00	; 0
    1534:	f4 e0       	ldi	r31, 0x04	; 4
    1536:	80 81       	ld	r24, Z
    1538:	89 8f       	std	Y+25, r24	; 0x19
	Transaction_BUF[26]=CS_BOS[1];
    153a:	81 81       	ldd	r24, Z+1	; 0x01
    153c:	8a 8f       	std	Y+26, r24	; 0x1a
	Transaction_BUF[27]=CS_BOS[2];
    153e:	82 81       	ldd	r24, Z+2	; 0x02
    1540:	8b 8f       	std	Y+27, r24	; 0x1b
	Transaction_BUF[28]=CS_BOS[3];
    1542:	83 81       	ldd	r24, Z+3	; 0x03
    1544:	8c 8f       	std	Y+28, r24	; 0x1c
	Transaction_BUF[29]=CS_BOS[4];
    1546:	84 81       	ldd	r24, Z+4	; 0x04
    1548:	8d 8f       	std	Y+29, r24	; 0x1d
	Transaction_BUF[30]=VS_BAT[0];// Measured value  of voltage Battery
    154a:	e1 e4       	ldi	r30, 0x41	; 65
    154c:	f4 e0       	ldi	r31, 0x04	; 4
    154e:	80 81       	ld	r24, Z
    1550:	8e 8f       	std	Y+30, r24	; 0x1e
	Transaction_BUF[31]=VS_BAT[1];
    1552:	81 81       	ldd	r24, Z+1	; 0x01
    1554:	8f 8f       	std	Y+31, r24	; 0x1f
	Transaction_BUF[32]=VS_BAT[2];
    1556:	82 81       	ldd	r24, Z+2	; 0x02
    1558:	88 a3       	std	Y+32, r24	; 0x20
	Transaction_BUF[33]=VS_BAT[3];
    155a:	83 81       	ldd	r24, Z+3	; 0x03
    155c:	89 a3       	std	Y+33, r24	; 0x21
	Transaction_BUF[34]=VS_BAT[4];
    155e:	84 81       	ldd	r24, Z+4	; 0x04
    1560:	8a a3       	std	Y+34, r24	; 0x22
	Transaction_BUF[35]=CS_BAT[0];// Measured value  of current Battery
    1562:	e2 e1       	ldi	r30, 0x12	; 18
    1564:	f4 e0       	ldi	r31, 0x04	; 4
    1566:	80 81       	ld	r24, Z
    1568:	8b a3       	std	Y+35, r24	; 0x23
	Transaction_BUF[36]=CS_BAT[1];
    156a:	81 81       	ldd	r24, Z+1	; 0x01
    156c:	8c a3       	std	Y+36, r24	; 0x24
	Transaction_BUF[37]=CS_BAT[2];
    156e:	82 81       	ldd	r24, Z+2	; 0x02
    1570:	8d a3       	std	Y+37, r24	; 0x25
	Transaction_BUF[38]=CS_BAT[3];
    1572:	83 81       	ldd	r24, Z+3	; 0x03
    1574:	8e a3       	std	Y+38, r24	; 0x26
	Transaction_BUF[39]=CS_BAT[4];
    1576:	84 81       	ldd	r24, Z+4	; 0x04
    1578:	8f a3       	std	Y+39, r24	; 0x27
	Transaction_BUF[40]=Real_Value.Temp_S1;// Measured value of Temp. Sensor 1
    157a:	e1 e5       	ldi	r30, 0x51	; 81
    157c:	f4 e0       	ldi	r31, 0x04	; 4
    157e:	80 a1       	ldd	r24, Z+32	; 0x20
    1580:	88 a7       	std	Y+40, r24	; 0x28
	Transaction_BUF[41]=Real_Value.Temp_S2;// Measured value of Temp. Sensor 2
    1582:	81 a1       	ldd	r24, Z+33	; 0x21
    1584:	89 a7       	std	Y+41, r24	; 0x29
	Transaction_BUF[42]=((DUTY/1024)*100);
    1586:	20 e0       	ldi	r18, 0x00	; 0
    1588:	30 e0       	ldi	r19, 0x00	; 0
    158a:	40 e8       	ldi	r20, 0x80	; 128
    158c:	5a e3       	ldi	r21, 0x3A	; 58
    158e:	60 91 73 04 	lds	r22, 0x0473	; 0x800473 <DUTY>
    1592:	70 91 74 04 	lds	r23, 0x0474	; 0x800474 <DUTY+0x1>
    1596:	80 91 75 04 	lds	r24, 0x0475	; 0x800475 <DUTY+0x2>
    159a:	90 91 76 04 	lds	r25, 0x0476	; 0x800476 <DUTY+0x3>
    159e:	24 d3       	rcall	.+1608   	; 0x1be8 <__mulsf3>
    15a0:	20 e0       	ldi	r18, 0x00	; 0
    15a2:	30 e0       	ldi	r19, 0x00	; 0
    15a4:	48 ec       	ldi	r20, 0xC8	; 200
    15a6:	52 e4       	ldi	r21, 0x42	; 66
    15a8:	1f d3       	rcall	.+1598   	; 0x1be8 <__mulsf3>
    15aa:	3c d2       	rcall	.+1144   	; 0x1a24 <__fixunssfsi>
    15ac:	6a a7       	std	Y+42, r22	; 0x2a
	/*** STATUS SWITCH ***/
	Transaction_BUF[43]=(0x10 & PORTA);//CAMERA
    15ae:	82 b1       	in	r24, 0x02	; 2
    15b0:	80 71       	andi	r24, 0x10	; 16
    15b2:	8b a7       	std	Y+43, r24	; 0x2b
	Transaction_BUF[44]=(0x40 & PORTA);//COMMUNICATION
    15b4:	82 b1       	in	r24, 0x02	; 2
    15b6:	80 74       	andi	r24, 0x40	; 64
    15b8:	8c a7       	std	Y+44, r24	; 0x2c
	Transaction_BUF[45]=(0x01 & PORTC);//KILL SWITCH R
    15ba:	88 b1       	in	r24, 0x08	; 8
    15bc:	81 70       	andi	r24, 0x01	; 1
    15be:	8d a7       	std	Y+45, r24	; 0x2d
	Transaction_BUF[46]=(0x04 & PORTC);//KILL SWITCH L
    15c0:	88 b1       	in	r24, 0x08	; 8
    15c2:	84 70       	andi	r24, 0x04	; 4
    15c4:	8e a7       	std	Y+46, r24	; 0x2e
	Transaction_BUF[47]=(0x10 & PORTC);//HEATER
    15c6:	88 b1       	in	r24, 0x08	; 8
    15c8:	80 71       	andi	r24, 0x10	; 16
    15ca:	8f a7       	std	Y+47, r24	; 0x2f
	Transaction_BUF[48]=(0x04 & PORTG);//ADCS
    15cc:	84 b3       	in	r24, 0x14	; 20
    15ce:	84 70       	andi	r24, 0x04	; 4
	/*** GET TIME ***/
	Transaction_BUF[49]=READ_EEPROM(0x0081);
    15d0:	88 ab       	std	Y+48, r24	; 0x30
    15d2:	81 e8       	ldi	r24, 0x81	; 129
    15d4:	90 e0       	ldi	r25, 0x00	; 0
    15d6:	af db       	rcall	.-2210   	; 0xd36 <READ_EEPROM>
	Transaction_BUF[50]=READ_EEPROM(0x0082);
    15d8:	89 ab       	std	Y+49, r24	; 0x31
    15da:	82 e8       	ldi	r24, 0x82	; 130
    15dc:	90 e0       	ldi	r25, 0x00	; 0
    15de:	ab db       	rcall	.-2218   	; 0xd36 <READ_EEPROM>
	Transaction_BUF[51]=READ_EEPROM(0x0083);
    15e0:	8a ab       	std	Y+50, r24	; 0x32
    15e2:	83 e8       	ldi	r24, 0x83	; 131
    15e4:	90 e0       	ldi	r25, 0x00	; 0
    15e6:	a7 db       	rcall	.-2226   	; 0xd36 <READ_EEPROM>
	Transaction_BUF[52]=READ_EEPROM(0x0084);
    15e8:	8b ab       	std	Y+51, r24	; 0x33
    15ea:	84 e8       	ldi	r24, 0x84	; 132
    15ec:	90 e0       	ldi	r25, 0x00	; 0
    15ee:	a3 db       	rcall	.-2234   	; 0xd36 <READ_EEPROM>
	Transaction_BUF[53]=READ_EEPROM(0x0086);
    15f0:	8c ab       	std	Y+52, r24	; 0x34
    15f2:	86 e8       	ldi	r24, 0x86	; 134
    15f4:	90 e0       	ldi	r25, 0x00	; 0
    15f6:	9f db       	rcall	.-2242   	; 0xd36 <READ_EEPROM>
	Transaction_BUF[54]=READ_EEPROM(0x0087);
    15f8:	8d ab       	std	Y+53, r24	; 0x35
    15fa:	87 e8       	ldi	r24, 0x87	; 135
    15fc:	90 e0       	ldi	r25, 0x00	; 0
    15fe:	9b db       	rcall	.-2250   	; 0xd36 <READ_EEPROM>
	/*** GET CLOCK VALUE ***/
	Transaction_BUF[55]=READ_EEPROM(0x0090);
    1600:	8e ab       	std	Y+54, r24	; 0x36
    1602:	80 e9       	ldi	r24, 0x90	; 144
    1604:	90 e0       	ldi	r25, 0x00	; 0
    1606:	97 db       	rcall	.-2258   	; 0xd36 <READ_EEPROM>
	Transaction_BUF[56]=READ_EEPROM(0x0091);
    1608:	8f ab       	std	Y+55, r24	; 0x37
    160a:	81 e9       	ldi	r24, 0x91	; 145
    160c:	90 e0       	ldi	r25, 0x00	; 0
    160e:	93 db       	rcall	.-2266   	; 0xd36 <READ_EEPROM>
	Transaction_BUF[57]=READ_EEPROM(0x0092);
    1610:	88 af       	std	Y+56, r24	; 0x38
    1612:	82 e9       	ldi	r24, 0x92	; 146
    1614:	90 e0       	ldi	r25, 0x00	; 0
    1616:	8f db       	rcall	.-2274   	; 0xd36 <READ_EEPROM>
    1618:	89 af       	std	Y+57, r24	; 0x39
	Transaction_BUF[58]=READ_EEPROM(0x0093);
    161a:	83 e9       	ldi	r24, 0x93	; 147
    161c:	90 e0       	ldi	r25, 0x00	; 0
    161e:	8b db       	rcall	.-2282   	; 0xd36 <READ_EEPROM>
    1620:	8a af       	std	Y+58, r24	; 0x3a
    1622:	84 e9       	ldi	r24, 0x94	; 148
	Transaction_BUF[59]=READ_EEPROM(0x0094);
    1624:	90 e0       	ldi	r25, 0x00	; 0
    1626:	87 db       	rcall	.-2290   	; 0xd36 <READ_EEPROM>
    1628:	8b af       	std	Y+59, r24	; 0x3b
    162a:	85 e4       	ldi	r24, 0x45	; 69
    162c:	8c af       	std	Y+60, r24	; 0x3c
	/*** EPS TEST ***/
	Transaction_BUF[60]=0x45;
    162e:	80 e5       	ldi	r24, 0x50	; 80
    1630:	8d af       	std	Y+61, r24	; 0x3d
	Transaction_BUF[61]=0x50;
    1632:	93 e5       	ldi	r25, 0x53	; 83
    1634:	9e af       	std	Y+62, r25	; 0x3e
	Transaction_BUF[62]=0x53;
    1636:	9f e5       	ldi	r25, 0x5F	; 95
    1638:	9f af       	std	Y+63, r25	; 0x3f
	Transaction_BUF[63]=0x5f;
    163a:	fe 01       	movw	r30, r28
    163c:	e0 5c       	subi	r30, 0xC0	; 192
	Transaction_BUF[64]=0x50;
    163e:	ff 4f       	sbci	r31, 0xFF	; 255
    1640:	80 83       	st	Z, r24
    1642:	31 96       	adiw	r30, 0x01	; 1
    1644:	89 e4       	ldi	r24, 0x49	; 73
	Transaction_BUF[65]=0x49;
    1646:	80 83       	st	Z, r24
    1648:	31 96       	adiw	r30, 0x01	; 1
    164a:	8e e4       	ldi	r24, 0x4E	; 78
	Transaction_BUF[66]=0x4e;
    164c:	80 83       	st	Z, r24
    164e:	cd 5b       	subi	r28, 0xBD	; 189
    1650:	df 4f       	sbci	r29, 0xFF	; 255
	Transaction_BUF[67]=0x47;
    1652:	87 e4       	ldi	r24, 0x47	; 71
    1654:	88 83       	st	Y, r24
    1656:	df 91       	pop	r29
    1658:	cf 91       	pop	r28
}
    165a:	08 95       	ret

0000165c <UPDATE_ReQuest>:
    165c:	80 91 3c 04 	lds	r24, 0x043C	; 0x80043c <FLAG_BOOT>

// GROUP-5
void UPDATE_ReQuest(void)
{
	if (FLAG_BOOT)
    1660:	88 23       	and	r24, r24
    1662:	39 f0       	breq	.+14     	; 0x1672 <UPDATE_ReQuest+0x16>
	{
		WRITE_EEPROM(0x0BED,0xBD);
    1664:	6d eb       	ldi	r22, 0xBD	; 189
    1666:	8d ee       	ldi	r24, 0xED	; 237
    1668:	9b e0       	ldi	r25, 0x0B	; 11
    166a:	5d db       	rcall	.-2374   	; 0xd26 <WRITE_EEPROM>
     	cli();
    166c:	f8 94       	cli
 		asm("jmp 0x3E000");
    166e:	0d 94 00 f0 	jmp	0x3e000	; 0x3e000 <__data_load_end+0x3bd66>
    1672:	08 95       	ret

00001674 <Set_Time_E2PROM>:
 *  Author: Ahmed H. Zakaria
 */ 
#include <TIME_SUB.h>

void Set_Time_E2PROM(void)
{
    1674:	0f 93       	push	r16
    1676:	1f 93       	push	r17
    1678:	cf 93       	push	r28
    167a:	df 93       	push	r29
    167c:	00 d0       	rcall	.+0      	; 0x167e <Set_Time_E2PROM+0xa>
    167e:	1f 92       	push	r1
    1680:	cd b7       	in	r28, 0x3d	; 61
    1682:	de b7       	in	r29, 0x3e	; 62
	struct tm *Time_Now;
	time_t PUT_Time;
	PUT_Time = time(NULL);
    1684:	80 e0       	ldi	r24, 0x00	; 0
    1686:	90 e0       	ldi	r25, 0x00	; 0
    1688:	0e 94 9d 01 	call	0x33a	; 0x33a <time>
    168c:	69 83       	std	Y+1, r22	; 0x01
    168e:	7a 83       	std	Y+2, r23	; 0x02
    1690:	8b 83       	std	Y+3, r24	; 0x03
    1692:	9c 83       	std	Y+4, r25	; 0x04
	Time_Now = localtime(&PUT_Time);
    1694:	ce 01       	movw	r24, r28
    1696:	01 96       	adiw	r24, 0x01	; 1
    1698:	0e 94 d5 00 	call	0x1aa	; 0x1aa <localtime>
    169c:	8c 01       	movw	r16, r24
	WRITE_EEPROM(0x0081 ,Time_Now->tm_sec );
    169e:	fc 01       	movw	r30, r24
    16a0:	60 81       	ld	r22, Z
    16a2:	81 e8       	ldi	r24, 0x81	; 129
    16a4:	90 e0       	ldi	r25, 0x00	; 0
    16a6:	3f db       	rcall	.-2434   	; 0xd26 <WRITE_EEPROM>
	WRITE_EEPROM(0x0082 ,Time_Now->tm_min);
    16a8:	f8 01       	movw	r30, r16
    16aa:	61 81       	ldd	r22, Z+1	; 0x01
    16ac:	82 e8       	ldi	r24, 0x82	; 130
    16ae:	90 e0       	ldi	r25, 0x00	; 0
    16b0:	3a db       	rcall	.-2444   	; 0xd26 <WRITE_EEPROM>
	WRITE_EEPROM(0x0083 ,Time_Now->tm_hour);
    16b2:	f8 01       	movw	r30, r16
    16b4:	62 81       	ldd	r22, Z+2	; 0x02
    16b6:	83 e8       	ldi	r24, 0x83	; 131
    16b8:	90 e0       	ldi	r25, 0x00	; 0
    16ba:	35 db       	rcall	.-2454   	; 0xd26 <WRITE_EEPROM>
	WRITE_EEPROM(0x0084 ,Time_Now->tm_mday);
    16bc:	f8 01       	movw	r30, r16
    16be:	63 81       	ldd	r22, Z+3	; 0x03
    16c0:	84 e8       	ldi	r24, 0x84	; 132
    16c2:	90 e0       	ldi	r25, 0x00	; 0
    16c4:	30 db       	rcall	.-2464   	; 0xd26 <WRITE_EEPROM>
	WRITE_EEPROM(0x0085 ,Time_Now->tm_wday);
    16c6:	f8 01       	movw	r30, r16
    16c8:	64 81       	ldd	r22, Z+4	; 0x04
    16ca:	85 e8       	ldi	r24, 0x85	; 133
    16cc:	90 e0       	ldi	r25, 0x00	; 0
    16ce:	2b db       	rcall	.-2474   	; 0xd26 <WRITE_EEPROM>
	WRITE_EEPROM(0x0086 ,Time_Now->tm_mon );
    16d0:	f8 01       	movw	r30, r16
    16d2:	65 81       	ldd	r22, Z+5	; 0x05
    16d4:	86 e8       	ldi	r24, 0x86	; 134
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	26 db       	rcall	.-2484   	; 0xd26 <WRITE_EEPROM>
	WRITE_EEPROM(0x0087 ,((Time_Now->tm_year)-2000));
    16da:	f8 01       	movw	r30, r16
    16dc:	66 81       	ldd	r22, Z+6	; 0x06
    16de:	60 5d       	subi	r22, 0xD0	; 208
    16e0:	87 e8       	ldi	r24, 0x87	; 135
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	20 db       	rcall	.-2496   	; 0xd26 <WRITE_EEPROM>
    16e6:	0f 90       	pop	r0
}
    16e8:	0f 90       	pop	r0
    16ea:	0f 90       	pop	r0
    16ec:	0f 90       	pop	r0
    16ee:	df 91       	pop	r29
    16f0:	cf 91       	pop	r28
    16f2:	1f 91       	pop	r17
    16f4:	0f 91       	pop	r16
    16f6:	08 95       	ret

000016f8 <CLOCK_PYLOAD>:
    16f8:	cf 93       	push	r28

void CLOCK_PYLOAD(void)
{
	switch (READ_EEPROM(0x0086) - READ_EEPROM(0x0093))
    16fa:	86 e8       	ldi	r24, 0x86	; 134
    16fc:	90 e0       	ldi	r25, 0x00	; 0
    16fe:	1b db       	rcall	.-2506   	; 0xd36 <READ_EEPROM>
    1700:	c8 2f       	mov	r28, r24
    1702:	83 e9       	ldi	r24, 0x93	; 147
    1704:	90 e0       	ldi	r25, 0x00	; 0
    1706:	17 db       	rcall	.-2514   	; 0xd36 <READ_EEPROM>
    1708:	2c 2f       	mov	r18, r28
    170a:	30 e0       	ldi	r19, 0x00	; 0
    170c:	28 1b       	sub	r18, r24
    170e:	31 09       	sbc	r19, r1
    1710:	69 f5       	brne	.+90     	; 0x176c <CLOCK_PYLOAD+0x74>
	{
		case 0x00:switch(READ_EEPROM(0x0084) - READ_EEPROM(0x0092))
    1712:	84 e8       	ldi	r24, 0x84	; 132
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	0f db       	rcall	.-2530   	; 0xd36 <READ_EEPROM>
    1718:	c8 2f       	mov	r28, r24
    171a:	82 e9       	ldi	r24, 0x92	; 146
    171c:	90 e0       	ldi	r25, 0x00	; 0
    171e:	0b db       	rcall	.-2538   	; 0xd36 <READ_EEPROM>
    1720:	2c 2f       	mov	r18, r28
    1722:	30 e0       	ldi	r19, 0x00	; 0
    1724:	28 1b       	sub	r18, r24
    1726:	31 09       	sbc	r19, r1
    1728:	09 f5       	brne	.+66     	; 0x176c <CLOCK_PYLOAD+0x74>
		{
			case 0x00:switch (READ_EEPROM(0x0083) - READ_EEPROM(0x0091))
    172a:	83 e8       	ldi	r24, 0x83	; 131
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	03 db       	rcall	.-2554   	; 0xd36 <READ_EEPROM>
    1730:	c8 2f       	mov	r28, r24
    1732:	81 e9       	ldi	r24, 0x91	; 145
    1734:	90 e0       	ldi	r25, 0x00	; 0
    1736:	ff da       	rcall	.-2562   	; 0xd36 <READ_EEPROM>
    1738:	2c 2f       	mov	r18, r28
    173a:	30 e0       	ldi	r19, 0x00	; 0
    173c:	28 1b       	sub	r18, r24
    173e:	31 09       	sbc	r19, r1
    1740:	a9 f4       	brne	.+42     	; 0x176c <CLOCK_PYLOAD+0x74>
			{
				case 0x00:if ((READ_EEPROM(0x0082) - READ_EEPROM(0x0090)) == 0)
    1742:	82 e8       	ldi	r24, 0x82	; 130
    1744:	90 e0       	ldi	r25, 0x00	; 0
    1746:	f7 da       	rcall	.-2578   	; 0xd36 <READ_EEPROM>
    1748:	c8 2f       	mov	r28, r24
    174a:	80 e9       	ldi	r24, 0x90	; 144
    174c:	90 e0       	ldi	r25, 0x00	; 0
    174e:	f3 da       	rcall	.-2586   	; 0xd36 <READ_EEPROM>
    1750:	c8 13       	cpse	r28, r24
    1752:	02 c0       	rjmp	.+4      	; 0x1758 <CLOCK_PYLOAD+0x60>
				{
					Set_SW(PORTA,CAMERA);
    1754:	14 9a       	sbi	0x02, 4	; 2
				}
				else if((READ_EEPROM(0x0083) - READ_EEPROM(0x0094)) == 0)
    1756:	0a c0       	rjmp	.+20     	; 0x176c <CLOCK_PYLOAD+0x74>
    1758:	83 e8       	ldi	r24, 0x83	; 131
    175a:	90 e0       	ldi	r25, 0x00	; 0
    175c:	ec da       	rcall	.-2600   	; 0xd36 <READ_EEPROM>
    175e:	c8 2f       	mov	r28, r24
    1760:	84 e9       	ldi	r24, 0x94	; 148
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	e8 da       	rcall	.-2608   	; 0xd36 <READ_EEPROM>
    1766:	c8 13       	cpse	r28, r24
    1768:	01 c0       	rjmp	.+2      	; 0x176c <CLOCK_PYLOAD+0x74>
    176a:	14 98       	cbi	0x02, 4	; 2
				{
					Reset_SW(PORTA,CAMERA);
    176c:	cf 91       	pop	r28
		}
		break;
		default:;
		break;
	}
    176e:	08 95       	ret

00001770 <UART2_Init>:
 */ 
#include <UART2.h>

void UART2_Init(uint8_t  baud)
{
	UBRR2L=(uint8_t) baud;
    1770:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <__TEXT_REGION_LENGTH__+0x7c00d4>
	UBRR2H=(uint8_t)( baud>>8);
    1774:	10 92 d5 00 	sts	0x00D5, r1	; 0x8000d5 <__TEXT_REGION_LENGTH__+0x7c00d5>
	UCSR2B = (1<<TXEN2)|(1<<RXEN2)|(1<<RXCIE2);
    1778:	88 e9       	ldi	r24, 0x98	; 152
    177a:	80 93 d1 00 	sts	0x00D1, r24	; 0x8000d1 <__TEXT_REGION_LENGTH__+0x7c00d1>
	UCSR2C = (3<<UCSZ20);
    177e:	86 e0       	ldi	r24, 0x06	; 6
    1780:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <__TEXT_REGION_LENGTH__+0x7c00d2>
	FLAG_BOOT = FALSE;
    1784:	10 92 3c 04 	sts	0x043C, r1	; 0x80043c <FLAG_BOOT>
    1788:	08 95       	ret

0000178a <UART2_Receive>:
}

uint8_t UART2_Receive(void)
{
	while ( !(UCSR2A & (1<<RXC2)) );
    178a:	80 91 d0 00 	lds	r24, 0x00D0	; 0x8000d0 <__TEXT_REGION_LENGTH__+0x7c00d0>
    178e:	87 ff       	sbrs	r24, 7
    1790:	fc cf       	rjmp	.-8      	; 0x178a <UART2_Receive>
	return UDR2;
    1792:	80 91 d6 00 	lds	r24, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7c00d6>
}
    1796:	08 95       	ret

00001798 <UART2_Transmit>:

uint8_t UART2_Transmit(uint8_t data)
{
	UDR2 = data;
    1798:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7c00d6>
	while ( !( UCSR2A & (1<<UDRE2)) );
    179c:	90 91 d0 00 	lds	r25, 0x00D0	; 0x8000d0 <__TEXT_REGION_LENGTH__+0x7c00d0>
    17a0:	95 ff       	sbrs	r25, 5
    17a2:	fc cf       	rjmp	.-8      	; 0x179c <UART2_Transmit+0x4>
	return data;
    17a4:	08 95       	ret

000017a6 <__vector_17>:

#include <main.h>

/*Timer Counter 1 *1Sec**/
ISR(TIMER1_COMPA_vect)
{
    17a6:	1f 92       	push	r1
    17a8:	0f 92       	push	r0
    17aa:	0f b6       	in	r0, 0x3f	; 63
    17ac:	0f 92       	push	r0
    17ae:	11 24       	eor	r1, r1
    17b0:	0b b6       	in	r0, 0x3b	; 59
    17b2:	0f 92       	push	r0
    17b4:	2f 93       	push	r18
    17b6:	3f 93       	push	r19
    17b8:	4f 93       	push	r20
    17ba:	5f 93       	push	r21
    17bc:	6f 93       	push	r22
    17be:	7f 93       	push	r23
    17c0:	8f 93       	push	r24
    17c2:	9f 93       	push	r25
    17c4:	af 93       	push	r26
    17c6:	bf 93       	push	r27
    17c8:	ef 93       	push	r30
    17ca:	ff 93       	push	r31
	system_tick();
    17cc:	0e 94 b0 01 	call	0x360	; 0x360 <system_tick>
}
    17d0:	ff 91       	pop	r31
    17d2:	ef 91       	pop	r30
    17d4:	bf 91       	pop	r27
    17d6:	af 91       	pop	r26
    17d8:	9f 91       	pop	r25
    17da:	8f 91       	pop	r24
    17dc:	7f 91       	pop	r23
    17de:	6f 91       	pop	r22
    17e0:	5f 91       	pop	r21
    17e2:	4f 91       	pop	r20
    17e4:	3f 91       	pop	r19
    17e6:	2f 91       	pop	r18
    17e8:	0f 90       	pop	r0
    17ea:	0b be       	out	0x3b, r0	; 59
    17ec:	0f 90       	pop	r0
    17ee:	0f be       	out	0x3f, r0	; 63
    17f0:	0f 90       	pop	r0
    17f2:	1f 90       	pop	r1
    17f4:	18 95       	reti

000017f6 <__vector_51>:

/*Interrupt Receiver*/
ISR(USART2_RX_vect)
{
    17f6:	1f 92       	push	r1
    17f8:	0f 92       	push	r0
    17fa:	0f b6       	in	r0, 0x3f	; 63
    17fc:	0f 92       	push	r0
    17fe:	11 24       	eor	r1, r1
    1800:	0b b6       	in	r0, 0x3b	; 59
    1802:	0f 92       	push	r0
    1804:	2f 93       	push	r18
    1806:	3f 93       	push	r19
    1808:	4f 93       	push	r20
    180a:	5f 93       	push	r21
    180c:	6f 93       	push	r22
    180e:	7f 93       	push	r23
    1810:	8f 93       	push	r24
    1812:	9f 93       	push	r25
    1814:	af 93       	push	r26
    1816:	bf 93       	push	r27
    1818:	ef 93       	push	r30
    181a:	ff 93       	push	r31
	Rx_CRC_Tx();
    181c:	ba db       	rcall	.-2188   	; 0xf92 <Rx_CRC_Tx>
}
    181e:	ff 91       	pop	r31
    1820:	ef 91       	pop	r30
    1822:	bf 91       	pop	r27
    1824:	af 91       	pop	r26
    1826:	9f 91       	pop	r25
    1828:	8f 91       	pop	r24
    182a:	7f 91       	pop	r23
    182c:	6f 91       	pop	r22
    182e:	5f 91       	pop	r21
    1830:	4f 91       	pop	r20
    1832:	3f 91       	pop	r19
    1834:	2f 91       	pop	r18
    1836:	0f 90       	pop	r0
    1838:	0b be       	out	0x3b, r0	; 59
    183a:	0f 90       	pop	r0
    183c:	0f be       	out	0x3f, r0	; 63
    183e:	0f 90       	pop	r0
    1840:	1f 90       	pop	r1
    1842:	18 95       	reti

00001844 <main>:
				: "r0"
		);
	}
	else
	{
		__asm__ __volatile__ (
    1844:	9e e0       	ldi	r25, 0x0E	; 14
    1846:	88 e1       	ldi	r24, 0x18	; 24
    1848:	0f b6       	in	r0, 0x3f	; 63
    184a:	f8 94       	cli
    184c:	a8 95       	wdr
    184e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    1852:	0f be       	out	0x3f, r0	; 63
    1854:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>

int main(void)
{
    wdt_enable(WDTO_1S); /* Enable WatchDog Timer --> 1 Sec*/ 
    ADC_Enable();
    1858:	0e 94 74 03 	call	0x6e8	; 0x6e8 <ADC_Enable>
    PWM_Enable();
    185c:	b1 d8       	rcall	.-3742   	; 0x9c0 <PWM_Enable>
    UART2_Init(MYUBRR);
    185e:	87 e6       	ldi	r24, 0x67	; 103
    Timer1_Freq_1Hz();
    1860:	87 df       	rcall	.-242    	; 0x1770 <UART2_Init>
    1862:	c8 d8       	rcall	.-3696   	; 0x9f4 <Timer1_Freq_1Hz>
    sei();               /*Global interrupt*/
    1864:	78 94       	sei
    while (1) 
    {
		wdt_reset();               /*Refresh WatchDog Timer*/
		REAL_VALUE_SENSOR();       /*Read Values of Sensors*/
    1866:	a8 95       	wdr
		MPPT_P_O();                /*Perturb & Observe Algorithm ----> Control Duty Cycle*/
    1868:	0e 94 c1 03 	call	0x782	; 0x782 <REAL_VALUE_SENSOR>
		ON_OFF_SW();               /*Check EPS Emergency case*/
    186c:	d4 d8       	rcall	.-3672   	; 0xa16 <MPPT_P_O>
		CLOCK_PYLOAD();
    186e:	fc d9       	rcall	.-3080   	; 0xc68 <ON_OFF_SW>
    1870:	43 df       	rcall	.-378    	; 0x16f8 <CLOCK_PYLOAD>
		Set_Time_E2PROM();
    1872:	00 df       	rcall	.-512    	; 0x1674 <Set_Time_E2PROM>
    1874:	f3 de       	rcall	.-538    	; 0x165c <UPDATE_ReQuest>
		UPDATE_ReQuest();
    1876:	f7 cf       	rjmp	.-18     	; 0x1866 <main+0x22>

00001878 <__subsf3>:
    1878:	50 58       	subi	r21, 0x80	; 128

0000187a <__addsf3>:
    187a:	bb 27       	eor	r27, r27
    187c:	aa 27       	eor	r26, r26
    187e:	0e d0       	rcall	.+28     	; 0x189c <__addsf3x>
    1880:	75 c1       	rjmp	.+746    	; 0x1b6c <__fp_round>
    1882:	66 d1       	rcall	.+716    	; 0x1b50 <__fp_pscA>
    1884:	30 f0       	brcs	.+12     	; 0x1892 <__addsf3+0x18>
    1886:	6b d1       	rcall	.+726    	; 0x1b5e <__fp_pscB>
    1888:	20 f0       	brcs	.+8      	; 0x1892 <__addsf3+0x18>
    188a:	31 f4       	brne	.+12     	; 0x1898 <__addsf3+0x1e>
    188c:	9f 3f       	cpi	r25, 0xFF	; 255
    188e:	11 f4       	brne	.+4      	; 0x1894 <__addsf3+0x1a>
    1890:	1e f4       	brtc	.+6      	; 0x1898 <__addsf3+0x1e>
    1892:	5b c1       	rjmp	.+694    	; 0x1b4a <__fp_nan>
    1894:	0e f4       	brtc	.+2      	; 0x1898 <__addsf3+0x1e>
    1896:	e0 95       	com	r30
    1898:	e7 fb       	bst	r30, 7
    189a:	51 c1       	rjmp	.+674    	; 0x1b3e <__fp_inf>

0000189c <__addsf3x>:
    189c:	e9 2f       	mov	r30, r25
    189e:	77 d1       	rcall	.+750    	; 0x1b8e <__fp_split3>
    18a0:	80 f3       	brcs	.-32     	; 0x1882 <__addsf3+0x8>
    18a2:	ba 17       	cp	r27, r26
    18a4:	62 07       	cpc	r22, r18
    18a6:	73 07       	cpc	r23, r19
    18a8:	84 07       	cpc	r24, r20
    18aa:	95 07       	cpc	r25, r21
    18ac:	18 f0       	brcs	.+6      	; 0x18b4 <__addsf3x+0x18>
    18ae:	71 f4       	brne	.+28     	; 0x18cc <__addsf3x+0x30>
    18b0:	9e f5       	brtc	.+102    	; 0x1918 <__addsf3x+0x7c>
    18b2:	8f c1       	rjmp	.+798    	; 0x1bd2 <__fp_zero>
    18b4:	0e f4       	brtc	.+2      	; 0x18b8 <__addsf3x+0x1c>
    18b6:	e0 95       	com	r30
    18b8:	0b 2e       	mov	r0, r27
    18ba:	ba 2f       	mov	r27, r26
    18bc:	a0 2d       	mov	r26, r0
    18be:	0b 01       	movw	r0, r22
    18c0:	b9 01       	movw	r22, r18
    18c2:	90 01       	movw	r18, r0
    18c4:	0c 01       	movw	r0, r24
    18c6:	ca 01       	movw	r24, r20
    18c8:	a0 01       	movw	r20, r0
    18ca:	11 24       	eor	r1, r1
    18cc:	ff 27       	eor	r31, r31
    18ce:	59 1b       	sub	r21, r25
    18d0:	99 f0       	breq	.+38     	; 0x18f8 <__addsf3x+0x5c>
    18d2:	59 3f       	cpi	r21, 0xF9	; 249
    18d4:	50 f4       	brcc	.+20     	; 0x18ea <__addsf3x+0x4e>
    18d6:	50 3e       	cpi	r21, 0xE0	; 224
    18d8:	68 f1       	brcs	.+90     	; 0x1934 <__addsf3x+0x98>
    18da:	1a 16       	cp	r1, r26
    18dc:	f0 40       	sbci	r31, 0x00	; 0
    18de:	a2 2f       	mov	r26, r18
    18e0:	23 2f       	mov	r18, r19
    18e2:	34 2f       	mov	r19, r20
    18e4:	44 27       	eor	r20, r20
    18e6:	58 5f       	subi	r21, 0xF8	; 248
    18e8:	f3 cf       	rjmp	.-26     	; 0x18d0 <__addsf3x+0x34>
    18ea:	46 95       	lsr	r20
    18ec:	37 95       	ror	r19
    18ee:	27 95       	ror	r18
    18f0:	a7 95       	ror	r26
    18f2:	f0 40       	sbci	r31, 0x00	; 0
    18f4:	53 95       	inc	r21
    18f6:	c9 f7       	brne	.-14     	; 0x18ea <__addsf3x+0x4e>
    18f8:	7e f4       	brtc	.+30     	; 0x1918 <__addsf3x+0x7c>
    18fa:	1f 16       	cp	r1, r31
    18fc:	ba 0b       	sbc	r27, r26
    18fe:	62 0b       	sbc	r22, r18
    1900:	73 0b       	sbc	r23, r19
    1902:	84 0b       	sbc	r24, r20
    1904:	ba f0       	brmi	.+46     	; 0x1934 <__addsf3x+0x98>
    1906:	91 50       	subi	r25, 0x01	; 1
    1908:	a1 f0       	breq	.+40     	; 0x1932 <__addsf3x+0x96>
    190a:	ff 0f       	add	r31, r31
    190c:	bb 1f       	adc	r27, r27
    190e:	66 1f       	adc	r22, r22
    1910:	77 1f       	adc	r23, r23
    1912:	88 1f       	adc	r24, r24
    1914:	c2 f7       	brpl	.-16     	; 0x1906 <__addsf3x+0x6a>
    1916:	0e c0       	rjmp	.+28     	; 0x1934 <__addsf3x+0x98>
    1918:	ba 0f       	add	r27, r26
    191a:	62 1f       	adc	r22, r18
    191c:	73 1f       	adc	r23, r19
    191e:	84 1f       	adc	r24, r20
    1920:	48 f4       	brcc	.+18     	; 0x1934 <__addsf3x+0x98>
    1922:	87 95       	ror	r24
    1924:	77 95       	ror	r23
    1926:	67 95       	ror	r22
    1928:	b7 95       	ror	r27
    192a:	f7 95       	ror	r31
    192c:	9e 3f       	cpi	r25, 0xFE	; 254
    192e:	08 f0       	brcs	.+2      	; 0x1932 <__addsf3x+0x96>
    1930:	b3 cf       	rjmp	.-154    	; 0x1898 <__addsf3+0x1e>
    1932:	93 95       	inc	r25
    1934:	88 0f       	add	r24, r24
    1936:	08 f0       	brcs	.+2      	; 0x193a <__addsf3x+0x9e>
    1938:	99 27       	eor	r25, r25
    193a:	ee 0f       	add	r30, r30
    193c:	97 95       	ror	r25
    193e:	87 95       	ror	r24
    1940:	08 95       	ret

00001942 <__cmpsf2>:
    1942:	d9 d0       	rcall	.+434    	; 0x1af6 <__fp_cmp>
    1944:	08 f4       	brcc	.+2      	; 0x1948 <__cmpsf2+0x6>
    1946:	81 e0       	ldi	r24, 0x01	; 1
    1948:	08 95       	ret

0000194a <__divsf3>:
    194a:	0c d0       	rcall	.+24     	; 0x1964 <__divsf3x>
    194c:	0f c1       	rjmp	.+542    	; 0x1b6c <__fp_round>
    194e:	07 d1       	rcall	.+526    	; 0x1b5e <__fp_pscB>
    1950:	40 f0       	brcs	.+16     	; 0x1962 <__divsf3+0x18>
    1952:	fe d0       	rcall	.+508    	; 0x1b50 <__fp_pscA>
    1954:	30 f0       	brcs	.+12     	; 0x1962 <__divsf3+0x18>
    1956:	21 f4       	brne	.+8      	; 0x1960 <__divsf3+0x16>
    1958:	5f 3f       	cpi	r21, 0xFF	; 255
    195a:	19 f0       	breq	.+6      	; 0x1962 <__divsf3+0x18>
    195c:	f0 c0       	rjmp	.+480    	; 0x1b3e <__fp_inf>
    195e:	51 11       	cpse	r21, r1
    1960:	39 c1       	rjmp	.+626    	; 0x1bd4 <__fp_szero>
    1962:	f3 c0       	rjmp	.+486    	; 0x1b4a <__fp_nan>

00001964 <__divsf3x>:
    1964:	14 d1       	rcall	.+552    	; 0x1b8e <__fp_split3>
    1966:	98 f3       	brcs	.-26     	; 0x194e <__divsf3+0x4>

00001968 <__divsf3_pse>:
    1968:	99 23       	and	r25, r25
    196a:	c9 f3       	breq	.-14     	; 0x195e <__divsf3+0x14>
    196c:	55 23       	and	r21, r21
    196e:	b1 f3       	breq	.-20     	; 0x195c <__divsf3+0x12>
    1970:	95 1b       	sub	r25, r21
    1972:	55 0b       	sbc	r21, r21
    1974:	bb 27       	eor	r27, r27
    1976:	aa 27       	eor	r26, r26
    1978:	62 17       	cp	r22, r18
    197a:	73 07       	cpc	r23, r19
    197c:	84 07       	cpc	r24, r20
    197e:	38 f0       	brcs	.+14     	; 0x198e <__divsf3_pse+0x26>
    1980:	9f 5f       	subi	r25, 0xFF	; 255
    1982:	5f 4f       	sbci	r21, 0xFF	; 255
    1984:	22 0f       	add	r18, r18
    1986:	33 1f       	adc	r19, r19
    1988:	44 1f       	adc	r20, r20
    198a:	aa 1f       	adc	r26, r26
    198c:	a9 f3       	breq	.-22     	; 0x1978 <__divsf3_pse+0x10>
    198e:	33 d0       	rcall	.+102    	; 0x19f6 <__divsf3_pse+0x8e>
    1990:	0e 2e       	mov	r0, r30
    1992:	3a f0       	brmi	.+14     	; 0x19a2 <__divsf3_pse+0x3a>
    1994:	e0 e8       	ldi	r30, 0x80	; 128
    1996:	30 d0       	rcall	.+96     	; 0x19f8 <__divsf3_pse+0x90>
    1998:	91 50       	subi	r25, 0x01	; 1
    199a:	50 40       	sbci	r21, 0x00	; 0
    199c:	e6 95       	lsr	r30
    199e:	00 1c       	adc	r0, r0
    19a0:	ca f7       	brpl	.-14     	; 0x1994 <__divsf3_pse+0x2c>
    19a2:	29 d0       	rcall	.+82     	; 0x19f6 <__divsf3_pse+0x8e>
    19a4:	fe 2f       	mov	r31, r30
    19a6:	27 d0       	rcall	.+78     	; 0x19f6 <__divsf3_pse+0x8e>
    19a8:	66 0f       	add	r22, r22
    19aa:	77 1f       	adc	r23, r23
    19ac:	88 1f       	adc	r24, r24
    19ae:	bb 1f       	adc	r27, r27
    19b0:	26 17       	cp	r18, r22
    19b2:	37 07       	cpc	r19, r23
    19b4:	48 07       	cpc	r20, r24
    19b6:	ab 07       	cpc	r26, r27
    19b8:	b0 e8       	ldi	r27, 0x80	; 128
    19ba:	09 f0       	breq	.+2      	; 0x19be <__divsf3_pse+0x56>
    19bc:	bb 0b       	sbc	r27, r27
    19be:	80 2d       	mov	r24, r0
    19c0:	bf 01       	movw	r22, r30
    19c2:	ff 27       	eor	r31, r31
    19c4:	93 58       	subi	r25, 0x83	; 131
    19c6:	5f 4f       	sbci	r21, 0xFF	; 255
    19c8:	2a f0       	brmi	.+10     	; 0x19d4 <__divsf3_pse+0x6c>
    19ca:	9e 3f       	cpi	r25, 0xFE	; 254
    19cc:	51 05       	cpc	r21, r1
    19ce:	68 f0       	brcs	.+26     	; 0x19ea <__divsf3_pse+0x82>
    19d0:	b6 c0       	rjmp	.+364    	; 0x1b3e <__fp_inf>
    19d2:	00 c1       	rjmp	.+512    	; 0x1bd4 <__fp_szero>
    19d4:	5f 3f       	cpi	r21, 0xFF	; 255
    19d6:	ec f3       	brlt	.-6      	; 0x19d2 <__divsf3_pse+0x6a>
    19d8:	98 3e       	cpi	r25, 0xE8	; 232
    19da:	dc f3       	brlt	.-10     	; 0x19d2 <__divsf3_pse+0x6a>
    19dc:	86 95       	lsr	r24
    19de:	77 95       	ror	r23
    19e0:	67 95       	ror	r22
    19e2:	b7 95       	ror	r27
    19e4:	f7 95       	ror	r31
    19e6:	9f 5f       	subi	r25, 0xFF	; 255
    19e8:	c9 f7       	brne	.-14     	; 0x19dc <__divsf3_pse+0x74>
    19ea:	88 0f       	add	r24, r24
    19ec:	91 1d       	adc	r25, r1
    19ee:	96 95       	lsr	r25
    19f0:	87 95       	ror	r24
    19f2:	97 f9       	bld	r25, 7
    19f4:	08 95       	ret
    19f6:	e1 e0       	ldi	r30, 0x01	; 1
    19f8:	66 0f       	add	r22, r22
    19fa:	77 1f       	adc	r23, r23
    19fc:	88 1f       	adc	r24, r24
    19fe:	bb 1f       	adc	r27, r27
    1a00:	62 17       	cp	r22, r18
    1a02:	73 07       	cpc	r23, r19
    1a04:	84 07       	cpc	r24, r20
    1a06:	ba 07       	cpc	r27, r26
    1a08:	20 f0       	brcs	.+8      	; 0x1a12 <__divsf3_pse+0xaa>
    1a0a:	62 1b       	sub	r22, r18
    1a0c:	73 0b       	sbc	r23, r19
    1a0e:	84 0b       	sbc	r24, r20
    1a10:	ba 0b       	sbc	r27, r26
    1a12:	ee 1f       	adc	r30, r30
    1a14:	88 f7       	brcc	.-30     	; 0x19f8 <__divsf3_pse+0x90>
    1a16:	e0 95       	com	r30
    1a18:	08 95       	ret

00001a1a <__fixsfsi>:
    1a1a:	04 d0       	rcall	.+8      	; 0x1a24 <__fixunssfsi>
    1a1c:	68 94       	set
    1a1e:	b1 11       	cpse	r27, r1
    1a20:	d9 c0       	rjmp	.+434    	; 0x1bd4 <__fp_szero>
    1a22:	08 95       	ret

00001a24 <__fixunssfsi>:
    1a24:	bc d0       	rcall	.+376    	; 0x1b9e <__fp_splitA>
    1a26:	88 f0       	brcs	.+34     	; 0x1a4a <__fixunssfsi+0x26>
    1a28:	9f 57       	subi	r25, 0x7F	; 127
    1a2a:	90 f0       	brcs	.+36     	; 0x1a50 <__fixunssfsi+0x2c>
    1a2c:	b9 2f       	mov	r27, r25
    1a2e:	99 27       	eor	r25, r25
    1a30:	b7 51       	subi	r27, 0x17	; 23
    1a32:	a0 f0       	brcs	.+40     	; 0x1a5c <__fixunssfsi+0x38>
    1a34:	d1 f0       	breq	.+52     	; 0x1a6a <__fixunssfsi+0x46>
    1a36:	66 0f       	add	r22, r22
    1a38:	77 1f       	adc	r23, r23
    1a3a:	88 1f       	adc	r24, r24
    1a3c:	99 1f       	adc	r25, r25
    1a3e:	1a f0       	brmi	.+6      	; 0x1a46 <__fixunssfsi+0x22>
    1a40:	ba 95       	dec	r27
    1a42:	c9 f7       	brne	.-14     	; 0x1a36 <__fixunssfsi+0x12>
    1a44:	12 c0       	rjmp	.+36     	; 0x1a6a <__fixunssfsi+0x46>
    1a46:	b1 30       	cpi	r27, 0x01	; 1
    1a48:	81 f0       	breq	.+32     	; 0x1a6a <__fixunssfsi+0x46>
    1a4a:	c3 d0       	rcall	.+390    	; 0x1bd2 <__fp_zero>
    1a4c:	b1 e0       	ldi	r27, 0x01	; 1
    1a4e:	08 95       	ret
    1a50:	c0 c0       	rjmp	.+384    	; 0x1bd2 <__fp_zero>
    1a52:	67 2f       	mov	r22, r23
    1a54:	78 2f       	mov	r23, r24
    1a56:	88 27       	eor	r24, r24
    1a58:	b8 5f       	subi	r27, 0xF8	; 248
    1a5a:	39 f0       	breq	.+14     	; 0x1a6a <__fixunssfsi+0x46>
    1a5c:	b9 3f       	cpi	r27, 0xF9	; 249
    1a5e:	cc f3       	brlt	.-14     	; 0x1a52 <__fixunssfsi+0x2e>
    1a60:	86 95       	lsr	r24
    1a62:	77 95       	ror	r23
    1a64:	67 95       	ror	r22
    1a66:	b3 95       	inc	r27
    1a68:	d9 f7       	brne	.-10     	; 0x1a60 <__fixunssfsi+0x3c>
    1a6a:	3e f4       	brtc	.+14     	; 0x1a7a <__fixunssfsi+0x56>
    1a6c:	90 95       	com	r25
    1a6e:	80 95       	com	r24
    1a70:	70 95       	com	r23
    1a72:	61 95       	neg	r22
    1a74:	7f 4f       	sbci	r23, 0xFF	; 255
    1a76:	8f 4f       	sbci	r24, 0xFF	; 255
    1a78:	9f 4f       	sbci	r25, 0xFF	; 255
    1a7a:	08 95       	ret

00001a7c <__floatunsisf>:
    1a7c:	e8 94       	clt
    1a7e:	09 c0       	rjmp	.+18     	; 0x1a92 <__floatsisf+0x12>

00001a80 <__floatsisf>:
    1a80:	97 fb       	bst	r25, 7
    1a82:	3e f4       	brtc	.+14     	; 0x1a92 <__floatsisf+0x12>
    1a84:	90 95       	com	r25
    1a86:	80 95       	com	r24
    1a88:	70 95       	com	r23
    1a8a:	61 95       	neg	r22
    1a8c:	7f 4f       	sbci	r23, 0xFF	; 255
    1a8e:	8f 4f       	sbci	r24, 0xFF	; 255
    1a90:	9f 4f       	sbci	r25, 0xFF	; 255
    1a92:	99 23       	and	r25, r25
    1a94:	a9 f0       	breq	.+42     	; 0x1ac0 <__floatsisf+0x40>
    1a96:	f9 2f       	mov	r31, r25
    1a98:	96 e9       	ldi	r25, 0x96	; 150
    1a9a:	bb 27       	eor	r27, r27
    1a9c:	93 95       	inc	r25
    1a9e:	f6 95       	lsr	r31
    1aa0:	87 95       	ror	r24
    1aa2:	77 95       	ror	r23
    1aa4:	67 95       	ror	r22
    1aa6:	b7 95       	ror	r27
    1aa8:	f1 11       	cpse	r31, r1
    1aaa:	f8 cf       	rjmp	.-16     	; 0x1a9c <__floatsisf+0x1c>
    1aac:	fa f4       	brpl	.+62     	; 0x1aec <__floatsisf+0x6c>
    1aae:	bb 0f       	add	r27, r27
    1ab0:	11 f4       	brne	.+4      	; 0x1ab6 <__floatsisf+0x36>
    1ab2:	60 ff       	sbrs	r22, 0
    1ab4:	1b c0       	rjmp	.+54     	; 0x1aec <__floatsisf+0x6c>
    1ab6:	6f 5f       	subi	r22, 0xFF	; 255
    1ab8:	7f 4f       	sbci	r23, 0xFF	; 255
    1aba:	8f 4f       	sbci	r24, 0xFF	; 255
    1abc:	9f 4f       	sbci	r25, 0xFF	; 255
    1abe:	16 c0       	rjmp	.+44     	; 0x1aec <__floatsisf+0x6c>
    1ac0:	88 23       	and	r24, r24
    1ac2:	11 f0       	breq	.+4      	; 0x1ac8 <__floatsisf+0x48>
    1ac4:	96 e9       	ldi	r25, 0x96	; 150
    1ac6:	11 c0       	rjmp	.+34     	; 0x1aea <__floatsisf+0x6a>
    1ac8:	77 23       	and	r23, r23
    1aca:	21 f0       	breq	.+8      	; 0x1ad4 <__floatsisf+0x54>
    1acc:	9e e8       	ldi	r25, 0x8E	; 142
    1ace:	87 2f       	mov	r24, r23
    1ad0:	76 2f       	mov	r23, r22
    1ad2:	05 c0       	rjmp	.+10     	; 0x1ade <__floatsisf+0x5e>
    1ad4:	66 23       	and	r22, r22
    1ad6:	71 f0       	breq	.+28     	; 0x1af4 <__floatsisf+0x74>
    1ad8:	96 e8       	ldi	r25, 0x86	; 134
    1ada:	86 2f       	mov	r24, r22
    1adc:	70 e0       	ldi	r23, 0x00	; 0
    1ade:	60 e0       	ldi	r22, 0x00	; 0
    1ae0:	2a f0       	brmi	.+10     	; 0x1aec <__floatsisf+0x6c>
    1ae2:	9a 95       	dec	r25
    1ae4:	66 0f       	add	r22, r22
    1ae6:	77 1f       	adc	r23, r23
    1ae8:	88 1f       	adc	r24, r24
    1aea:	da f7       	brpl	.-10     	; 0x1ae2 <__floatsisf+0x62>
    1aec:	88 0f       	add	r24, r24
    1aee:	96 95       	lsr	r25
    1af0:	87 95       	ror	r24
    1af2:	97 f9       	bld	r25, 7
    1af4:	08 95       	ret

00001af6 <__fp_cmp>:
    1af6:	99 0f       	add	r25, r25
    1af8:	00 08       	sbc	r0, r0
    1afa:	55 0f       	add	r21, r21
    1afc:	aa 0b       	sbc	r26, r26
    1afe:	e0 e8       	ldi	r30, 0x80	; 128
    1b00:	fe ef       	ldi	r31, 0xFE	; 254
    1b02:	16 16       	cp	r1, r22
    1b04:	17 06       	cpc	r1, r23
    1b06:	e8 07       	cpc	r30, r24
    1b08:	f9 07       	cpc	r31, r25
    1b0a:	c0 f0       	brcs	.+48     	; 0x1b3c <__fp_cmp+0x46>
    1b0c:	12 16       	cp	r1, r18
    1b0e:	13 06       	cpc	r1, r19
    1b10:	e4 07       	cpc	r30, r20
    1b12:	f5 07       	cpc	r31, r21
    1b14:	98 f0       	brcs	.+38     	; 0x1b3c <__fp_cmp+0x46>
    1b16:	62 1b       	sub	r22, r18
    1b18:	73 0b       	sbc	r23, r19
    1b1a:	84 0b       	sbc	r24, r20
    1b1c:	95 0b       	sbc	r25, r21
    1b1e:	39 f4       	brne	.+14     	; 0x1b2e <__fp_cmp+0x38>
    1b20:	0a 26       	eor	r0, r26
    1b22:	61 f0       	breq	.+24     	; 0x1b3c <__fp_cmp+0x46>
    1b24:	23 2b       	or	r18, r19
    1b26:	24 2b       	or	r18, r20
    1b28:	25 2b       	or	r18, r21
    1b2a:	21 f4       	brne	.+8      	; 0x1b34 <__fp_cmp+0x3e>
    1b2c:	08 95       	ret
    1b2e:	0a 26       	eor	r0, r26
    1b30:	09 f4       	brne	.+2      	; 0x1b34 <__fp_cmp+0x3e>
    1b32:	a1 40       	sbci	r26, 0x01	; 1
    1b34:	a6 95       	lsr	r26
    1b36:	8f ef       	ldi	r24, 0xFF	; 255
    1b38:	81 1d       	adc	r24, r1
    1b3a:	81 1d       	adc	r24, r1
    1b3c:	08 95       	ret

00001b3e <__fp_inf>:
    1b3e:	97 f9       	bld	r25, 7
    1b40:	9f 67       	ori	r25, 0x7F	; 127
    1b42:	80 e8       	ldi	r24, 0x80	; 128
    1b44:	70 e0       	ldi	r23, 0x00	; 0
    1b46:	60 e0       	ldi	r22, 0x00	; 0
    1b48:	08 95       	ret

00001b4a <__fp_nan>:
    1b4a:	9f ef       	ldi	r25, 0xFF	; 255
    1b4c:	80 ec       	ldi	r24, 0xC0	; 192
    1b4e:	08 95       	ret

00001b50 <__fp_pscA>:
    1b50:	00 24       	eor	r0, r0
    1b52:	0a 94       	dec	r0
    1b54:	16 16       	cp	r1, r22
    1b56:	17 06       	cpc	r1, r23
    1b58:	18 06       	cpc	r1, r24
    1b5a:	09 06       	cpc	r0, r25
    1b5c:	08 95       	ret

00001b5e <__fp_pscB>:
    1b5e:	00 24       	eor	r0, r0
    1b60:	0a 94       	dec	r0
    1b62:	12 16       	cp	r1, r18
    1b64:	13 06       	cpc	r1, r19
    1b66:	14 06       	cpc	r1, r20
    1b68:	05 06       	cpc	r0, r21
    1b6a:	08 95       	ret

00001b6c <__fp_round>:
    1b6c:	09 2e       	mov	r0, r25
    1b6e:	03 94       	inc	r0
    1b70:	00 0c       	add	r0, r0
    1b72:	11 f4       	brne	.+4      	; 0x1b78 <__fp_round+0xc>
    1b74:	88 23       	and	r24, r24
    1b76:	52 f0       	brmi	.+20     	; 0x1b8c <__fp_round+0x20>
    1b78:	bb 0f       	add	r27, r27
    1b7a:	40 f4       	brcc	.+16     	; 0x1b8c <__fp_round+0x20>
    1b7c:	bf 2b       	or	r27, r31
    1b7e:	11 f4       	brne	.+4      	; 0x1b84 <__fp_round+0x18>
    1b80:	60 ff       	sbrs	r22, 0
    1b82:	04 c0       	rjmp	.+8      	; 0x1b8c <__fp_round+0x20>
    1b84:	6f 5f       	subi	r22, 0xFF	; 255
    1b86:	7f 4f       	sbci	r23, 0xFF	; 255
    1b88:	8f 4f       	sbci	r24, 0xFF	; 255
    1b8a:	9f 4f       	sbci	r25, 0xFF	; 255
    1b8c:	08 95       	ret

00001b8e <__fp_split3>:
    1b8e:	57 fd       	sbrc	r21, 7
    1b90:	90 58       	subi	r25, 0x80	; 128
    1b92:	44 0f       	add	r20, r20
    1b94:	55 1f       	adc	r21, r21
    1b96:	59 f0       	breq	.+22     	; 0x1bae <__fp_splitA+0x10>
    1b98:	5f 3f       	cpi	r21, 0xFF	; 255
    1b9a:	71 f0       	breq	.+28     	; 0x1bb8 <__fp_splitA+0x1a>
    1b9c:	47 95       	ror	r20

00001b9e <__fp_splitA>:
    1b9e:	88 0f       	add	r24, r24
    1ba0:	97 fb       	bst	r25, 7
    1ba2:	99 1f       	adc	r25, r25
    1ba4:	61 f0       	breq	.+24     	; 0x1bbe <__fp_splitA+0x20>
    1ba6:	9f 3f       	cpi	r25, 0xFF	; 255
    1ba8:	79 f0       	breq	.+30     	; 0x1bc8 <__fp_splitA+0x2a>
    1baa:	87 95       	ror	r24
    1bac:	08 95       	ret
    1bae:	12 16       	cp	r1, r18
    1bb0:	13 06       	cpc	r1, r19
    1bb2:	14 06       	cpc	r1, r20
    1bb4:	55 1f       	adc	r21, r21
    1bb6:	f2 cf       	rjmp	.-28     	; 0x1b9c <__fp_split3+0xe>
    1bb8:	46 95       	lsr	r20
    1bba:	f1 df       	rcall	.-30     	; 0x1b9e <__fp_splitA>
    1bbc:	08 c0       	rjmp	.+16     	; 0x1bce <__fp_splitA+0x30>
    1bbe:	16 16       	cp	r1, r22
    1bc0:	17 06       	cpc	r1, r23
    1bc2:	18 06       	cpc	r1, r24
    1bc4:	99 1f       	adc	r25, r25
    1bc6:	f1 cf       	rjmp	.-30     	; 0x1baa <__fp_splitA+0xc>
    1bc8:	86 95       	lsr	r24
    1bca:	71 05       	cpc	r23, r1
    1bcc:	61 05       	cpc	r22, r1
    1bce:	08 94       	sec
    1bd0:	08 95       	ret

00001bd2 <__fp_zero>:
    1bd2:	e8 94       	clt

00001bd4 <__fp_szero>:
    1bd4:	bb 27       	eor	r27, r27
    1bd6:	66 27       	eor	r22, r22
    1bd8:	77 27       	eor	r23, r23
    1bda:	cb 01       	movw	r24, r22
    1bdc:	97 f9       	bld	r25, 7
    1bde:	08 95       	ret

00001be0 <__gesf2>:
    1be0:	8a df       	rcall	.-236    	; 0x1af6 <__fp_cmp>
    1be2:	08 f4       	brcc	.+2      	; 0x1be6 <__gesf2+0x6>
    1be4:	8f ef       	ldi	r24, 0xFF	; 255
    1be6:	08 95       	ret

00001be8 <__mulsf3>:
    1be8:	0b d0       	rcall	.+22     	; 0x1c00 <__mulsf3x>
    1bea:	c0 cf       	rjmp	.-128    	; 0x1b6c <__fp_round>
    1bec:	b1 df       	rcall	.-158    	; 0x1b50 <__fp_pscA>
    1bee:	28 f0       	brcs	.+10     	; 0x1bfa <__mulsf3+0x12>
    1bf0:	b6 df       	rcall	.-148    	; 0x1b5e <__fp_pscB>
    1bf2:	18 f0       	brcs	.+6      	; 0x1bfa <__mulsf3+0x12>
    1bf4:	95 23       	and	r25, r21
    1bf6:	09 f0       	breq	.+2      	; 0x1bfa <__mulsf3+0x12>
    1bf8:	a2 cf       	rjmp	.-188    	; 0x1b3e <__fp_inf>
    1bfa:	a7 cf       	rjmp	.-178    	; 0x1b4a <__fp_nan>
    1bfc:	11 24       	eor	r1, r1
    1bfe:	ea cf       	rjmp	.-44     	; 0x1bd4 <__fp_szero>

00001c00 <__mulsf3x>:
    1c00:	c6 df       	rcall	.-116    	; 0x1b8e <__fp_split3>
    1c02:	a0 f3       	brcs	.-24     	; 0x1bec <__mulsf3+0x4>

00001c04 <__mulsf3_pse>:
    1c04:	95 9f       	mul	r25, r21
    1c06:	d1 f3       	breq	.-12     	; 0x1bfc <__mulsf3+0x14>
    1c08:	95 0f       	add	r25, r21
    1c0a:	50 e0       	ldi	r21, 0x00	; 0
    1c0c:	55 1f       	adc	r21, r21
    1c0e:	62 9f       	mul	r22, r18
    1c10:	f0 01       	movw	r30, r0
    1c12:	72 9f       	mul	r23, r18
    1c14:	bb 27       	eor	r27, r27
    1c16:	f0 0d       	add	r31, r0
    1c18:	b1 1d       	adc	r27, r1
    1c1a:	63 9f       	mul	r22, r19
    1c1c:	aa 27       	eor	r26, r26
    1c1e:	f0 0d       	add	r31, r0
    1c20:	b1 1d       	adc	r27, r1
    1c22:	aa 1f       	adc	r26, r26
    1c24:	64 9f       	mul	r22, r20
    1c26:	66 27       	eor	r22, r22
    1c28:	b0 0d       	add	r27, r0
    1c2a:	a1 1d       	adc	r26, r1
    1c2c:	66 1f       	adc	r22, r22
    1c2e:	82 9f       	mul	r24, r18
    1c30:	22 27       	eor	r18, r18
    1c32:	b0 0d       	add	r27, r0
    1c34:	a1 1d       	adc	r26, r1
    1c36:	62 1f       	adc	r22, r18
    1c38:	73 9f       	mul	r23, r19
    1c3a:	b0 0d       	add	r27, r0
    1c3c:	a1 1d       	adc	r26, r1
    1c3e:	62 1f       	adc	r22, r18
    1c40:	83 9f       	mul	r24, r19
    1c42:	a0 0d       	add	r26, r0
    1c44:	61 1d       	adc	r22, r1
    1c46:	22 1f       	adc	r18, r18
    1c48:	74 9f       	mul	r23, r20
    1c4a:	33 27       	eor	r19, r19
    1c4c:	a0 0d       	add	r26, r0
    1c4e:	61 1d       	adc	r22, r1
    1c50:	23 1f       	adc	r18, r19
    1c52:	84 9f       	mul	r24, r20
    1c54:	60 0d       	add	r22, r0
    1c56:	21 1d       	adc	r18, r1
    1c58:	82 2f       	mov	r24, r18
    1c5a:	76 2f       	mov	r23, r22
    1c5c:	6a 2f       	mov	r22, r26
    1c5e:	11 24       	eor	r1, r1
    1c60:	9f 57       	subi	r25, 0x7F	; 127
    1c62:	50 40       	sbci	r21, 0x00	; 0
    1c64:	8a f0       	brmi	.+34     	; 0x1c88 <__mulsf3_pse+0x84>
    1c66:	e1 f0       	breq	.+56     	; 0x1ca0 <__mulsf3_pse+0x9c>
    1c68:	88 23       	and	r24, r24
    1c6a:	4a f0       	brmi	.+18     	; 0x1c7e <__mulsf3_pse+0x7a>
    1c6c:	ee 0f       	add	r30, r30
    1c6e:	ff 1f       	adc	r31, r31
    1c70:	bb 1f       	adc	r27, r27
    1c72:	66 1f       	adc	r22, r22
    1c74:	77 1f       	adc	r23, r23
    1c76:	88 1f       	adc	r24, r24
    1c78:	91 50       	subi	r25, 0x01	; 1
    1c7a:	50 40       	sbci	r21, 0x00	; 0
    1c7c:	a9 f7       	brne	.-22     	; 0x1c68 <__mulsf3_pse+0x64>
    1c7e:	9e 3f       	cpi	r25, 0xFE	; 254
    1c80:	51 05       	cpc	r21, r1
    1c82:	70 f0       	brcs	.+28     	; 0x1ca0 <__mulsf3_pse+0x9c>
    1c84:	5c cf       	rjmp	.-328    	; 0x1b3e <__fp_inf>
    1c86:	a6 cf       	rjmp	.-180    	; 0x1bd4 <__fp_szero>
    1c88:	5f 3f       	cpi	r21, 0xFF	; 255
    1c8a:	ec f3       	brlt	.-6      	; 0x1c86 <__mulsf3_pse+0x82>
    1c8c:	98 3e       	cpi	r25, 0xE8	; 232
    1c8e:	dc f3       	brlt	.-10     	; 0x1c86 <__mulsf3_pse+0x82>
    1c90:	86 95       	lsr	r24
    1c92:	77 95       	ror	r23
    1c94:	67 95       	ror	r22
    1c96:	b7 95       	ror	r27
    1c98:	f7 95       	ror	r31
    1c9a:	e7 95       	ror	r30
    1c9c:	9f 5f       	subi	r25, 0xFF	; 255
    1c9e:	c1 f7       	brne	.-16     	; 0x1c90 <__mulsf3_pse+0x8c>
    1ca0:	fe 2b       	or	r31, r30
    1ca2:	88 0f       	add	r24, r24
    1ca4:	91 1d       	adc	r25, r1
    1ca6:	96 95       	lsr	r25
    1ca8:	87 95       	ror	r24
    1caa:	97 f9       	bld	r25, 7
    1cac:	08 95       	ret

00001cae <pow>:
    1cae:	fa 01       	movw	r30, r20
    1cb0:	ee 0f       	add	r30, r30
    1cb2:	ff 1f       	adc	r31, r31
    1cb4:	30 96       	adiw	r30, 0x00	; 0
    1cb6:	21 05       	cpc	r18, r1
    1cb8:	31 05       	cpc	r19, r1
    1cba:	99 f1       	breq	.+102    	; 0x1d22 <pow+0x74>
    1cbc:	61 15       	cp	r22, r1
    1cbe:	71 05       	cpc	r23, r1
    1cc0:	61 f4       	brne	.+24     	; 0x1cda <pow+0x2c>
    1cc2:	80 38       	cpi	r24, 0x80	; 128
    1cc4:	bf e3       	ldi	r27, 0x3F	; 63
    1cc6:	9b 07       	cpc	r25, r27
    1cc8:	49 f1       	breq	.+82     	; 0x1d1c <pow+0x6e>
    1cca:	68 94       	set
    1ccc:	90 38       	cpi	r25, 0x80	; 128
    1cce:	81 05       	cpc	r24, r1
    1cd0:	61 f0       	breq	.+24     	; 0x1cea <pow+0x3c>
    1cd2:	80 38       	cpi	r24, 0x80	; 128
    1cd4:	bf ef       	ldi	r27, 0xFF	; 255
    1cd6:	9b 07       	cpc	r25, r27
    1cd8:	41 f0       	breq	.+16     	; 0x1cea <pow+0x3c>
    1cda:	99 23       	and	r25, r25
    1cdc:	42 f5       	brpl	.+80     	; 0x1d2e <pow+0x80>
    1cde:	ff 3f       	cpi	r31, 0xFF	; 255
    1ce0:	e1 05       	cpc	r30, r1
    1ce2:	31 05       	cpc	r19, r1
    1ce4:	21 05       	cpc	r18, r1
    1ce6:	11 f1       	breq	.+68     	; 0x1d2c <pow+0x7e>
    1ce8:	e8 94       	clt
    1cea:	08 94       	sec
    1cec:	e7 95       	ror	r30
    1cee:	d9 01       	movw	r26, r18
    1cf0:	aa 23       	and	r26, r26
    1cf2:	29 f4       	brne	.+10     	; 0x1cfe <pow+0x50>
    1cf4:	ab 2f       	mov	r26, r27
    1cf6:	be 2f       	mov	r27, r30
    1cf8:	f8 5f       	subi	r31, 0xF8	; 248
    1cfa:	d0 f3       	brcs	.-12     	; 0x1cf0 <pow+0x42>
    1cfc:	10 c0       	rjmp	.+32     	; 0x1d1e <pow+0x70>
    1cfe:	ff 5f       	subi	r31, 0xFF	; 255
    1d00:	70 f4       	brcc	.+28     	; 0x1d1e <pow+0x70>
    1d02:	a6 95       	lsr	r26
    1d04:	e0 f7       	brcc	.-8      	; 0x1cfe <pow+0x50>
    1d06:	f7 39       	cpi	r31, 0x97	; 151
    1d08:	50 f0       	brcs	.+20     	; 0x1d1e <pow+0x70>
    1d0a:	19 f0       	breq	.+6      	; 0x1d12 <pow+0x64>
    1d0c:	ff 3a       	cpi	r31, 0xAF	; 175
    1d0e:	38 f4       	brcc	.+14     	; 0x1d1e <pow+0x70>
    1d10:	9f 77       	andi	r25, 0x7F	; 127
    1d12:	9f 93       	push	r25
    1d14:	0c d0       	rcall	.+24     	; 0x1d2e <pow+0x80>
    1d16:	0f 90       	pop	r0
    1d18:	07 fc       	sbrc	r0, 7
    1d1a:	90 58       	subi	r25, 0x80	; 128
    1d1c:	08 95       	ret
    1d1e:	3e f0       	brts	.+14     	; 0x1d2e <pow+0x80>
    1d20:	14 cf       	rjmp	.-472    	; 0x1b4a <__fp_nan>
    1d22:	60 e0       	ldi	r22, 0x00	; 0
    1d24:	70 e0       	ldi	r23, 0x00	; 0
    1d26:	80 e8       	ldi	r24, 0x80	; 128
    1d28:	9f e3       	ldi	r25, 0x3F	; 63
    1d2a:	08 95       	ret
    1d2c:	4f e7       	ldi	r20, 0x7F	; 127
    1d2e:	9f 77       	andi	r25, 0x7F	; 127
    1d30:	5f 93       	push	r21
    1d32:	4f 93       	push	r20
    1d34:	3f 93       	push	r19
    1d36:	2f 93       	push	r18
    1d38:	f5 d0       	rcall	.+490    	; 0x1f24 <log>
    1d3a:	2f 91       	pop	r18
    1d3c:	3f 91       	pop	r19
    1d3e:	4f 91       	pop	r20
    1d40:	5f 91       	pop	r21
    1d42:	52 df       	rcall	.-348    	; 0x1be8 <__mulsf3>
    1d44:	47 c0       	rjmp	.+142    	; 0x1dd4 <exp>
    1d46:	11 f4       	brne	.+4      	; 0x1d4c <pow+0x9e>
    1d48:	0e f4       	brtc	.+2      	; 0x1d4c <pow+0x9e>
    1d4a:	ff ce       	rjmp	.-514    	; 0x1b4a <__fp_nan>
    1d4c:	6f c0       	rjmp	.+222    	; 0x1e2c <__fp_mpack>

00001d4e <sqrt>:
    1d4e:	27 df       	rcall	.-434    	; 0x1b9e <__fp_splitA>
    1d50:	d0 f3       	brcs	.-12     	; 0x1d46 <pow+0x98>
    1d52:	99 23       	and	r25, r25
    1d54:	d9 f3       	breq	.-10     	; 0x1d4c <pow+0x9e>
    1d56:	ce f3       	brts	.-14     	; 0x1d4a <pow+0x9c>
    1d58:	9f 57       	subi	r25, 0x7F	; 127
    1d5a:	55 0b       	sbc	r21, r21
    1d5c:	87 ff       	sbrs	r24, 7
    1d5e:	74 d0       	rcall	.+232    	; 0x1e48 <__fp_norm2>
    1d60:	00 24       	eor	r0, r0
    1d62:	a0 e6       	ldi	r26, 0x60	; 96
    1d64:	40 ea       	ldi	r20, 0xA0	; 160
    1d66:	90 01       	movw	r18, r0
    1d68:	80 58       	subi	r24, 0x80	; 128
    1d6a:	56 95       	lsr	r21
    1d6c:	97 95       	ror	r25
    1d6e:	28 f4       	brcc	.+10     	; 0x1d7a <sqrt+0x2c>
    1d70:	80 5c       	subi	r24, 0xC0	; 192
    1d72:	66 0f       	add	r22, r22
    1d74:	77 1f       	adc	r23, r23
    1d76:	88 1f       	adc	r24, r24
    1d78:	20 f0       	brcs	.+8      	; 0x1d82 <sqrt+0x34>
    1d7a:	26 17       	cp	r18, r22
    1d7c:	37 07       	cpc	r19, r23
    1d7e:	48 07       	cpc	r20, r24
    1d80:	30 f4       	brcc	.+12     	; 0x1d8e <sqrt+0x40>
    1d82:	62 1b       	sub	r22, r18
    1d84:	73 0b       	sbc	r23, r19
    1d86:	84 0b       	sbc	r24, r20
    1d88:	20 29       	or	r18, r0
    1d8a:	31 29       	or	r19, r1
    1d8c:	4a 2b       	or	r20, r26
    1d8e:	a6 95       	lsr	r26
    1d90:	17 94       	ror	r1
    1d92:	07 94       	ror	r0
    1d94:	20 25       	eor	r18, r0
    1d96:	31 25       	eor	r19, r1
    1d98:	4a 27       	eor	r20, r26
    1d9a:	58 f7       	brcc	.-42     	; 0x1d72 <sqrt+0x24>
    1d9c:	66 0f       	add	r22, r22
    1d9e:	77 1f       	adc	r23, r23
    1da0:	88 1f       	adc	r24, r24
    1da2:	20 f0       	brcs	.+8      	; 0x1dac <sqrt+0x5e>
    1da4:	26 17       	cp	r18, r22
    1da6:	37 07       	cpc	r19, r23
    1da8:	48 07       	cpc	r20, r24
    1daa:	30 f4       	brcc	.+12     	; 0x1db8 <sqrt+0x6a>
    1dac:	62 0b       	sbc	r22, r18
    1dae:	73 0b       	sbc	r23, r19
    1db0:	84 0b       	sbc	r24, r20
    1db2:	20 0d       	add	r18, r0
    1db4:	31 1d       	adc	r19, r1
    1db6:	41 1d       	adc	r20, r1
    1db8:	a0 95       	com	r26
    1dba:	81 f7       	brne	.-32     	; 0x1d9c <sqrt+0x4e>
    1dbc:	b9 01       	movw	r22, r18
    1dbe:	84 2f       	mov	r24, r20
    1dc0:	91 58       	subi	r25, 0x81	; 129
    1dc2:	88 0f       	add	r24, r24
    1dc4:	96 95       	lsr	r25
    1dc6:	87 95       	ror	r24
    1dc8:	08 95       	ret
    1dca:	19 f4       	brne	.+6      	; 0x1dd2 <sqrt+0x84>
    1dcc:	0e f0       	brts	.+2      	; 0x1dd0 <sqrt+0x82>
    1dce:	b7 ce       	rjmp	.-658    	; 0x1b3e <__fp_inf>
    1dd0:	00 cf       	rjmp	.-512    	; 0x1bd2 <__fp_zero>
    1dd2:	bb ce       	rjmp	.-650    	; 0x1b4a <__fp_nan>

00001dd4 <exp>:
    1dd4:	e4 de       	rcall	.-568    	; 0x1b9e <__fp_splitA>
    1dd6:	c8 f3       	brcs	.-14     	; 0x1dca <sqrt+0x7c>
    1dd8:	96 38       	cpi	r25, 0x86	; 134
    1dda:	c0 f7       	brcc	.-16     	; 0x1dcc <sqrt+0x7e>
    1ddc:	07 f8       	bld	r0, 7
    1dde:	0f 92       	push	r0
    1de0:	e8 94       	clt
    1de2:	2b e3       	ldi	r18, 0x3B	; 59
    1de4:	3a ea       	ldi	r19, 0xAA	; 170
    1de6:	48 eb       	ldi	r20, 0xB8	; 184
    1de8:	5f e7       	ldi	r21, 0x7F	; 127
    1dea:	0c df       	rcall	.-488    	; 0x1c04 <__mulsf3_pse>
    1dec:	0f 92       	push	r0
    1dee:	0f 92       	push	r0
    1df0:	0f 92       	push	r0
    1df2:	4d b7       	in	r20, 0x3d	; 61
    1df4:	5e b7       	in	r21, 0x3e	; 62
    1df6:	0f 92       	push	r0
    1df8:	d5 d0       	rcall	.+426    	; 0x1fa4 <modf>
    1dfa:	e4 ee       	ldi	r30, 0xE4	; 228
    1dfc:	f0 e0       	ldi	r31, 0x00	; 0
    1dfe:	2b d0       	rcall	.+86     	; 0x1e56 <__fp_powser>
    1e00:	4f 91       	pop	r20
    1e02:	5f 91       	pop	r21
    1e04:	ef 91       	pop	r30
    1e06:	ff 91       	pop	r31
    1e08:	e5 95       	asr	r30
    1e0a:	ee 1f       	adc	r30, r30
    1e0c:	ff 1f       	adc	r31, r31
    1e0e:	49 f0       	breq	.+18     	; 0x1e22 <exp+0x4e>
    1e10:	fe 57       	subi	r31, 0x7E	; 126
    1e12:	e0 68       	ori	r30, 0x80	; 128
    1e14:	44 27       	eor	r20, r20
    1e16:	ee 0f       	add	r30, r30
    1e18:	44 1f       	adc	r20, r20
    1e1a:	fa 95       	dec	r31
    1e1c:	e1 f7       	brne	.-8      	; 0x1e16 <exp+0x42>
    1e1e:	41 95       	neg	r20
    1e20:	55 0b       	sbc	r21, r21
    1e22:	47 d0       	rcall	.+142    	; 0x1eb2 <ldexp>
    1e24:	0f 90       	pop	r0
    1e26:	07 fe       	sbrs	r0, 7
    1e28:	3b c0       	rjmp	.+118    	; 0x1ea0 <inverse>
    1e2a:	08 95       	ret

00001e2c <__fp_mpack>:
    1e2c:	9f 3f       	cpi	r25, 0xFF	; 255
    1e2e:	31 f0       	breq	.+12     	; 0x1e3c <__fp_mpack_finite+0xc>

00001e30 <__fp_mpack_finite>:
    1e30:	91 50       	subi	r25, 0x01	; 1
    1e32:	20 f4       	brcc	.+8      	; 0x1e3c <__fp_mpack_finite+0xc>
    1e34:	87 95       	ror	r24
    1e36:	77 95       	ror	r23
    1e38:	67 95       	ror	r22
    1e3a:	b7 95       	ror	r27
    1e3c:	88 0f       	add	r24, r24
    1e3e:	91 1d       	adc	r25, r1
    1e40:	96 95       	lsr	r25
    1e42:	87 95       	ror	r24
    1e44:	97 f9       	bld	r25, 7
    1e46:	08 95       	ret

00001e48 <__fp_norm2>:
    1e48:	91 50       	subi	r25, 0x01	; 1
    1e4a:	50 40       	sbci	r21, 0x00	; 0
    1e4c:	66 0f       	add	r22, r22
    1e4e:	77 1f       	adc	r23, r23
    1e50:	88 1f       	adc	r24, r24
    1e52:	d2 f7       	brpl	.-12     	; 0x1e48 <__fp_norm2>
    1e54:	08 95       	ret

00001e56 <__fp_powser>:
    1e56:	df 93       	push	r29
    1e58:	cf 93       	push	r28
    1e5a:	1f 93       	push	r17
    1e5c:	0f 93       	push	r16
    1e5e:	ff 92       	push	r15
    1e60:	ef 92       	push	r14
    1e62:	df 92       	push	r13
    1e64:	7b 01       	movw	r14, r22
    1e66:	8c 01       	movw	r16, r24
    1e68:	68 94       	set
    1e6a:	05 c0       	rjmp	.+10     	; 0x1e76 <__fp_powser+0x20>
    1e6c:	da 2e       	mov	r13, r26
    1e6e:	ef 01       	movw	r28, r30
    1e70:	c7 de       	rcall	.-626    	; 0x1c00 <__mulsf3x>
    1e72:	fe 01       	movw	r30, r28
    1e74:	e8 94       	clt
    1e76:	a5 91       	lpm	r26, Z+
    1e78:	25 91       	lpm	r18, Z+
    1e7a:	35 91       	lpm	r19, Z+
    1e7c:	45 91       	lpm	r20, Z+
    1e7e:	55 91       	lpm	r21, Z+
    1e80:	ae f3       	brts	.-22     	; 0x1e6c <__fp_powser+0x16>
    1e82:	ef 01       	movw	r28, r30
    1e84:	0b dd       	rcall	.-1514   	; 0x189c <__addsf3x>
    1e86:	fe 01       	movw	r30, r28
    1e88:	97 01       	movw	r18, r14
    1e8a:	a8 01       	movw	r20, r16
    1e8c:	da 94       	dec	r13
    1e8e:	79 f7       	brne	.-34     	; 0x1e6e <__fp_powser+0x18>
    1e90:	df 90       	pop	r13
    1e92:	ef 90       	pop	r14
    1e94:	ff 90       	pop	r15
    1e96:	0f 91       	pop	r16
    1e98:	1f 91       	pop	r17
    1e9a:	cf 91       	pop	r28
    1e9c:	df 91       	pop	r29
    1e9e:	08 95       	ret

00001ea0 <inverse>:
    1ea0:	9b 01       	movw	r18, r22
    1ea2:	ac 01       	movw	r20, r24
    1ea4:	60 e0       	ldi	r22, 0x00	; 0
    1ea6:	70 e0       	ldi	r23, 0x00	; 0
    1ea8:	80 e8       	ldi	r24, 0x80	; 128
    1eaa:	9f e3       	ldi	r25, 0x3F	; 63
    1eac:	4e cd       	rjmp	.-1380   	; 0x194a <__divsf3>
    1eae:	47 ce       	rjmp	.-882    	; 0x1b3e <__fp_inf>
    1eb0:	bd cf       	rjmp	.-134    	; 0x1e2c <__fp_mpack>

00001eb2 <ldexp>:
    1eb2:	75 de       	rcall	.-790    	; 0x1b9e <__fp_splitA>
    1eb4:	e8 f3       	brcs	.-6      	; 0x1eb0 <inverse+0x10>
    1eb6:	99 23       	and	r25, r25
    1eb8:	d9 f3       	breq	.-10     	; 0x1eb0 <inverse+0x10>
    1eba:	94 0f       	add	r25, r20
    1ebc:	51 1d       	adc	r21, r1
    1ebe:	bb f3       	brvs	.-18     	; 0x1eae <inverse+0xe>
    1ec0:	91 50       	subi	r25, 0x01	; 1
    1ec2:	50 40       	sbci	r21, 0x00	; 0
    1ec4:	94 f0       	brlt	.+36     	; 0x1eea <ldexp+0x38>
    1ec6:	59 f0       	breq	.+22     	; 0x1ede <ldexp+0x2c>
    1ec8:	88 23       	and	r24, r24
    1eca:	32 f0       	brmi	.+12     	; 0x1ed8 <ldexp+0x26>
    1ecc:	66 0f       	add	r22, r22
    1ece:	77 1f       	adc	r23, r23
    1ed0:	88 1f       	adc	r24, r24
    1ed2:	91 50       	subi	r25, 0x01	; 1
    1ed4:	50 40       	sbci	r21, 0x00	; 0
    1ed6:	c1 f7       	brne	.-16     	; 0x1ec8 <ldexp+0x16>
    1ed8:	9e 3f       	cpi	r25, 0xFE	; 254
    1eda:	51 05       	cpc	r21, r1
    1edc:	44 f7       	brge	.-48     	; 0x1eae <inverse+0xe>
    1ede:	88 0f       	add	r24, r24
    1ee0:	91 1d       	adc	r25, r1
    1ee2:	96 95       	lsr	r25
    1ee4:	87 95       	ror	r24
    1ee6:	97 f9       	bld	r25, 7
    1ee8:	08 95       	ret
    1eea:	5f 3f       	cpi	r21, 0xFF	; 255
    1eec:	ac f0       	brlt	.+42     	; 0x1f18 <ldexp+0x66>
    1eee:	98 3e       	cpi	r25, 0xE8	; 232
    1ef0:	9c f0       	brlt	.+38     	; 0x1f18 <ldexp+0x66>
    1ef2:	bb 27       	eor	r27, r27
    1ef4:	86 95       	lsr	r24
    1ef6:	77 95       	ror	r23
    1ef8:	67 95       	ror	r22
    1efa:	b7 95       	ror	r27
    1efc:	08 f4       	brcc	.+2      	; 0x1f00 <ldexp+0x4e>
    1efe:	b1 60       	ori	r27, 0x01	; 1
    1f00:	93 95       	inc	r25
    1f02:	c1 f7       	brne	.-16     	; 0x1ef4 <ldexp+0x42>
    1f04:	bb 0f       	add	r27, r27
    1f06:	58 f7       	brcc	.-42     	; 0x1ede <ldexp+0x2c>
    1f08:	11 f4       	brne	.+4      	; 0x1f0e <ldexp+0x5c>
    1f0a:	60 ff       	sbrs	r22, 0
    1f0c:	e8 cf       	rjmp	.-48     	; 0x1ede <ldexp+0x2c>
    1f0e:	6f 5f       	subi	r22, 0xFF	; 255
    1f10:	7f 4f       	sbci	r23, 0xFF	; 255
    1f12:	8f 4f       	sbci	r24, 0xFF	; 255
    1f14:	9f 4f       	sbci	r25, 0xFF	; 255
    1f16:	e3 cf       	rjmp	.-58     	; 0x1ede <ldexp+0x2c>
    1f18:	5d ce       	rjmp	.-838    	; 0x1bd4 <__fp_szero>
    1f1a:	0e f0       	brts	.+2      	; 0x1f1e <ldexp+0x6c>
    1f1c:	87 cf       	rjmp	.-242    	; 0x1e2c <__fp_mpack>
    1f1e:	15 ce       	rjmp	.-982    	; 0x1b4a <__fp_nan>
    1f20:	68 94       	set
    1f22:	0d ce       	rjmp	.-998    	; 0x1b3e <__fp_inf>

00001f24 <log>:
    1f24:	3c de       	rcall	.-904    	; 0x1b9e <__fp_splitA>
    1f26:	c8 f3       	brcs	.-14     	; 0x1f1a <ldexp+0x68>
    1f28:	99 23       	and	r25, r25
    1f2a:	d1 f3       	breq	.-12     	; 0x1f20 <ldexp+0x6e>
    1f2c:	c6 f3       	brts	.-16     	; 0x1f1e <ldexp+0x6c>
    1f2e:	df 93       	push	r29
    1f30:	cf 93       	push	r28
    1f32:	1f 93       	push	r17
    1f34:	0f 93       	push	r16
    1f36:	ff 92       	push	r15
    1f38:	c9 2f       	mov	r28, r25
    1f3a:	dd 27       	eor	r29, r29
    1f3c:	88 23       	and	r24, r24
    1f3e:	2a f0       	brmi	.+10     	; 0x1f4a <log+0x26>
    1f40:	21 97       	sbiw	r28, 0x01	; 1
    1f42:	66 0f       	add	r22, r22
    1f44:	77 1f       	adc	r23, r23
    1f46:	88 1f       	adc	r24, r24
    1f48:	da f7       	brpl	.-10     	; 0x1f40 <log+0x1c>
    1f4a:	20 e0       	ldi	r18, 0x00	; 0
    1f4c:	30 e0       	ldi	r19, 0x00	; 0
    1f4e:	40 e8       	ldi	r20, 0x80	; 128
    1f50:	5f eb       	ldi	r21, 0xBF	; 191
    1f52:	9f e3       	ldi	r25, 0x3F	; 63
    1f54:	88 39       	cpi	r24, 0x98	; 152
    1f56:	20 f0       	brcs	.+8      	; 0x1f60 <log+0x3c>
    1f58:	80 3e       	cpi	r24, 0xE0	; 224
    1f5a:	30 f0       	brcs	.+12     	; 0x1f68 <log+0x44>
    1f5c:	21 96       	adiw	r28, 0x01	; 1
    1f5e:	8f 77       	andi	r24, 0x7F	; 127
    1f60:	8c dc       	rcall	.-1768   	; 0x187a <__addsf3>
    1f62:	ec e0       	ldi	r30, 0x0C	; 12
    1f64:	f1 e0       	ldi	r31, 0x01	; 1
    1f66:	03 c0       	rjmp	.+6      	; 0x1f6e <log+0x4a>
    1f68:	88 dc       	rcall	.-1776   	; 0x187a <__addsf3>
    1f6a:	e9 e3       	ldi	r30, 0x39	; 57
    1f6c:	f1 e0       	ldi	r31, 0x01	; 1
    1f6e:	73 df       	rcall	.-282    	; 0x1e56 <__fp_powser>
    1f70:	8b 01       	movw	r16, r22
    1f72:	be 01       	movw	r22, r28
    1f74:	ec 01       	movw	r28, r24
    1f76:	fb 2e       	mov	r15, r27
    1f78:	6f 57       	subi	r22, 0x7F	; 127
    1f7a:	71 09       	sbc	r23, r1
    1f7c:	75 95       	asr	r23
    1f7e:	77 1f       	adc	r23, r23
    1f80:	88 0b       	sbc	r24, r24
    1f82:	99 0b       	sbc	r25, r25
    1f84:	7d dd       	rcall	.-1286   	; 0x1a80 <__floatsisf>
    1f86:	28 e1       	ldi	r18, 0x18	; 24
    1f88:	32 e7       	ldi	r19, 0x72	; 114
    1f8a:	41 e3       	ldi	r20, 0x31	; 49
    1f8c:	5f e3       	ldi	r21, 0x3F	; 63
    1f8e:	38 de       	rcall	.-912    	; 0x1c00 <__mulsf3x>
    1f90:	af 2d       	mov	r26, r15
    1f92:	98 01       	movw	r18, r16
    1f94:	ae 01       	movw	r20, r28
    1f96:	ff 90       	pop	r15
    1f98:	0f 91       	pop	r16
    1f9a:	1f 91       	pop	r17
    1f9c:	cf 91       	pop	r28
    1f9e:	df 91       	pop	r29
    1fa0:	7d dc       	rcall	.-1798   	; 0x189c <__addsf3x>
    1fa2:	e4 cd       	rjmp	.-1080   	; 0x1b6c <__fp_round>

00001fa4 <modf>:
    1fa4:	fa 01       	movw	r30, r20
    1fa6:	dc 01       	movw	r26, r24
    1fa8:	aa 0f       	add	r26, r26
    1faa:	bb 1f       	adc	r27, r27
    1fac:	9b 01       	movw	r18, r22
    1fae:	ac 01       	movw	r20, r24
    1fb0:	bf 57       	subi	r27, 0x7F	; 127
    1fb2:	28 f4       	brcc	.+10     	; 0x1fbe <modf+0x1a>
    1fb4:	22 27       	eor	r18, r18
    1fb6:	33 27       	eor	r19, r19
    1fb8:	44 27       	eor	r20, r20
    1fba:	50 78       	andi	r21, 0x80	; 128
    1fbc:	1f c0       	rjmp	.+62     	; 0x1ffc <modf+0x58>
    1fbe:	b7 51       	subi	r27, 0x17	; 23
    1fc0:	88 f4       	brcc	.+34     	; 0x1fe4 <modf+0x40>
    1fc2:	ab 2f       	mov	r26, r27
    1fc4:	00 24       	eor	r0, r0
    1fc6:	46 95       	lsr	r20
    1fc8:	37 95       	ror	r19
    1fca:	27 95       	ror	r18
    1fcc:	01 1c       	adc	r0, r1
    1fce:	a3 95       	inc	r26
    1fd0:	d2 f3       	brmi	.-12     	; 0x1fc6 <modf+0x22>
    1fd2:	00 20       	and	r0, r0
    1fd4:	69 f0       	breq	.+26     	; 0x1ff0 <modf+0x4c>
    1fd6:	22 0f       	add	r18, r18
    1fd8:	33 1f       	adc	r19, r19
    1fda:	44 1f       	adc	r20, r20
    1fdc:	b3 95       	inc	r27
    1fde:	da f3       	brmi	.-10     	; 0x1fd6 <modf+0x32>
    1fe0:	0d d0       	rcall	.+26     	; 0x1ffc <modf+0x58>
    1fe2:	4a cc       	rjmp	.-1900   	; 0x1878 <__subsf3>
    1fe4:	61 30       	cpi	r22, 0x01	; 1
    1fe6:	71 05       	cpc	r23, r1
    1fe8:	a0 e8       	ldi	r26, 0x80	; 128
    1fea:	8a 07       	cpc	r24, r26
    1fec:	b9 46       	sbci	r27, 0x69	; 105
    1fee:	30 f4       	brcc	.+12     	; 0x1ffc <modf+0x58>
    1ff0:	9b 01       	movw	r18, r22
    1ff2:	ac 01       	movw	r20, r24
    1ff4:	66 27       	eor	r22, r22
    1ff6:	77 27       	eor	r23, r23
    1ff8:	88 27       	eor	r24, r24
    1ffa:	90 78       	andi	r25, 0x80	; 128
    1ffc:	30 96       	adiw	r30, 0x00	; 0
    1ffe:	21 f0       	breq	.+8      	; 0x2008 <__DATA_REGION_LENGTH__+0x8>
    2000:	20 83       	st	Z, r18
    2002:	31 83       	std	Z+1, r19	; 0x01
    2004:	42 83       	std	Z+2, r20	; 0x02
    2006:	53 83       	std	Z+3, r21	; 0x03
    2008:	08 95       	ret

0000200a <__itoa_ncheck>:
    200a:	bb 27       	eor	r27, r27
    200c:	4a 30       	cpi	r20, 0x0A	; 10
    200e:	31 f4       	brne	.+12     	; 0x201c <__itoa_ncheck+0x12>
    2010:	99 23       	and	r25, r25
    2012:	22 f4       	brpl	.+8      	; 0x201c <__itoa_ncheck+0x12>
    2014:	bd e2       	ldi	r27, 0x2D	; 45
    2016:	90 95       	com	r25
    2018:	81 95       	neg	r24
    201a:	9f 4f       	sbci	r25, 0xFF	; 255
    201c:	01 c0       	rjmp	.+2      	; 0x2020 <__utoa_common>

0000201e <__utoa_ncheck>:
    201e:	bb 27       	eor	r27, r27

00002020 <__utoa_common>:
    2020:	fb 01       	movw	r30, r22
    2022:	55 27       	eor	r21, r21
    2024:	aa 27       	eor	r26, r26
    2026:	88 0f       	add	r24, r24
    2028:	99 1f       	adc	r25, r25
    202a:	aa 1f       	adc	r26, r26
    202c:	a4 17       	cp	r26, r20
    202e:	10 f0       	brcs	.+4      	; 0x2034 <__utoa_common+0x14>
    2030:	a4 1b       	sub	r26, r20
    2032:	83 95       	inc	r24
    2034:	50 51       	subi	r21, 0x10	; 16
    2036:	b9 f7       	brne	.-18     	; 0x2026 <__utoa_common+0x6>
    2038:	a0 5d       	subi	r26, 0xD0	; 208
    203a:	aa 33       	cpi	r26, 0x3A	; 58
    203c:	08 f0       	brcs	.+2      	; 0x2040 <__utoa_common+0x20>
    203e:	a9 5d       	subi	r26, 0xD9	; 217
    2040:	a1 93       	st	Z+, r26
    2042:	00 97       	sbiw	r24, 0x00	; 0
    2044:	79 f7       	brne	.-34     	; 0x2024 <__utoa_common+0x4>
    2046:	b1 11       	cpse	r27, r1
    2048:	b1 93       	st	Z+, r27
    204a:	11 92       	st	Z+, r1
    204c:	cb 01       	movw	r24, r22
    204e:	00 c0       	rjmp	.+0      	; 0x2050 <strrev>

00002050 <strrev>:
    2050:	dc 01       	movw	r26, r24
    2052:	fc 01       	movw	r30, r24
    2054:	67 2f       	mov	r22, r23
    2056:	71 91       	ld	r23, Z+
    2058:	77 23       	and	r23, r23
    205a:	e1 f7       	brne	.-8      	; 0x2054 <strrev+0x4>
    205c:	32 97       	sbiw	r30, 0x02	; 2
    205e:	04 c0       	rjmp	.+8      	; 0x2068 <strrev+0x18>
    2060:	7c 91       	ld	r23, X
    2062:	6d 93       	st	X+, r22
    2064:	70 83       	st	Z, r23
    2066:	62 91       	ld	r22, -Z
    2068:	ae 17       	cp	r26, r30
    206a:	bf 07       	cpc	r27, r31
    206c:	c8 f3       	brcs	.-14     	; 0x2060 <strrev+0x10>
    206e:	08 95       	ret

00002070 <__mulsi3>:
    2070:	db 01       	movw	r26, r22
    2072:	8f 93       	push	r24
    2074:	9f 93       	push	r25
    2076:	76 d0       	rcall	.+236    	; 0x2164 <__muluhisi3>
    2078:	bf 91       	pop	r27
    207a:	af 91       	pop	r26
    207c:	a2 9f       	mul	r26, r18
    207e:	80 0d       	add	r24, r0
    2080:	91 1d       	adc	r25, r1
    2082:	a3 9f       	mul	r26, r19
    2084:	90 0d       	add	r25, r0
    2086:	b2 9f       	mul	r27, r18
    2088:	90 0d       	add	r25, r0
    208a:	11 24       	eor	r1, r1
    208c:	08 95       	ret

0000208e <__udivmodhi4>:
    208e:	aa 1b       	sub	r26, r26
    2090:	bb 1b       	sub	r27, r27
    2092:	51 e1       	ldi	r21, 0x11	; 17
    2094:	07 c0       	rjmp	.+14     	; 0x20a4 <__udivmodhi4_ep>

00002096 <__udivmodhi4_loop>:
    2096:	aa 1f       	adc	r26, r26
    2098:	bb 1f       	adc	r27, r27
    209a:	a6 17       	cp	r26, r22
    209c:	b7 07       	cpc	r27, r23
    209e:	10 f0       	brcs	.+4      	; 0x20a4 <__udivmodhi4_ep>
    20a0:	a6 1b       	sub	r26, r22
    20a2:	b7 0b       	sbc	r27, r23

000020a4 <__udivmodhi4_ep>:
    20a4:	88 1f       	adc	r24, r24
    20a6:	99 1f       	adc	r25, r25
    20a8:	5a 95       	dec	r21
    20aa:	a9 f7       	brne	.-22     	; 0x2096 <__udivmodhi4_loop>
    20ac:	80 95       	com	r24
    20ae:	90 95       	com	r25
    20b0:	bc 01       	movw	r22, r24
    20b2:	cd 01       	movw	r24, r26
    20b4:	08 95       	ret

000020b6 <__divmodhi4>:
    20b6:	97 fb       	bst	r25, 7
    20b8:	07 2e       	mov	r0, r23
    20ba:	16 f4       	brtc	.+4      	; 0x20c0 <__divmodhi4+0xa>
    20bc:	00 94       	com	r0
    20be:	06 d0       	rcall	.+12     	; 0x20cc <__divmodhi4_neg1>
    20c0:	77 fd       	sbrc	r23, 7
    20c2:	08 d0       	rcall	.+16     	; 0x20d4 <__divmodhi4_neg2>
    20c4:	e4 df       	rcall	.-56     	; 0x208e <__udivmodhi4>
    20c6:	07 fc       	sbrc	r0, 7
    20c8:	05 d0       	rcall	.+10     	; 0x20d4 <__divmodhi4_neg2>
    20ca:	3e f4       	brtc	.+14     	; 0x20da <__divmodhi4_exit>

000020cc <__divmodhi4_neg1>:
    20cc:	90 95       	com	r25
    20ce:	81 95       	neg	r24
    20d0:	9f 4f       	sbci	r25, 0xFF	; 255
    20d2:	08 95       	ret

000020d4 <__divmodhi4_neg2>:
    20d4:	70 95       	com	r23
    20d6:	61 95       	neg	r22
    20d8:	7f 4f       	sbci	r23, 0xFF	; 255

000020da <__divmodhi4_exit>:
    20da:	08 95       	ret

000020dc <__udivmodsi4>:
    20dc:	a1 e2       	ldi	r26, 0x21	; 33
    20de:	1a 2e       	mov	r1, r26
    20e0:	aa 1b       	sub	r26, r26
    20e2:	bb 1b       	sub	r27, r27
    20e4:	fd 01       	movw	r30, r26
    20e6:	0d c0       	rjmp	.+26     	; 0x2102 <__udivmodsi4_ep>

000020e8 <__udivmodsi4_loop>:
    20e8:	aa 1f       	adc	r26, r26
    20ea:	bb 1f       	adc	r27, r27
    20ec:	ee 1f       	adc	r30, r30
    20ee:	ff 1f       	adc	r31, r31
    20f0:	a2 17       	cp	r26, r18
    20f2:	b3 07       	cpc	r27, r19
    20f4:	e4 07       	cpc	r30, r20
    20f6:	f5 07       	cpc	r31, r21
    20f8:	20 f0       	brcs	.+8      	; 0x2102 <__udivmodsi4_ep>
    20fa:	a2 1b       	sub	r26, r18
    20fc:	b3 0b       	sbc	r27, r19
    20fe:	e4 0b       	sbc	r30, r20
    2100:	f5 0b       	sbc	r31, r21

00002102 <__udivmodsi4_ep>:
    2102:	66 1f       	adc	r22, r22
    2104:	77 1f       	adc	r23, r23
    2106:	88 1f       	adc	r24, r24
    2108:	99 1f       	adc	r25, r25
    210a:	1a 94       	dec	r1
    210c:	69 f7       	brne	.-38     	; 0x20e8 <__udivmodsi4_loop>
    210e:	60 95       	com	r22
    2110:	70 95       	com	r23
    2112:	80 95       	com	r24
    2114:	90 95       	com	r25
    2116:	9b 01       	movw	r18, r22
    2118:	ac 01       	movw	r20, r24
    211a:	bd 01       	movw	r22, r26
    211c:	cf 01       	movw	r24, r30
    211e:	08 95       	ret

00002120 <__divmodsi4>:
    2120:	05 2e       	mov	r0, r21
    2122:	97 fb       	bst	r25, 7
    2124:	16 f4       	brtc	.+4      	; 0x212a <__divmodsi4+0xa>
    2126:	00 94       	com	r0
    2128:	0f d0       	rcall	.+30     	; 0x2148 <__negsi2>
    212a:	57 fd       	sbrc	r21, 7
    212c:	05 d0       	rcall	.+10     	; 0x2138 <__divmodsi4_neg2>
    212e:	d6 df       	rcall	.-84     	; 0x20dc <__udivmodsi4>
    2130:	07 fc       	sbrc	r0, 7
    2132:	02 d0       	rcall	.+4      	; 0x2138 <__divmodsi4_neg2>
    2134:	46 f4       	brtc	.+16     	; 0x2146 <__divmodsi4_exit>
    2136:	08 c0       	rjmp	.+16     	; 0x2148 <__negsi2>

00002138 <__divmodsi4_neg2>:
    2138:	50 95       	com	r21
    213a:	40 95       	com	r20
    213c:	30 95       	com	r19
    213e:	21 95       	neg	r18
    2140:	3f 4f       	sbci	r19, 0xFF	; 255
    2142:	4f 4f       	sbci	r20, 0xFF	; 255
    2144:	5f 4f       	sbci	r21, 0xFF	; 255

00002146 <__divmodsi4_exit>:
    2146:	08 95       	ret

00002148 <__negsi2>:
    2148:	90 95       	com	r25
    214a:	80 95       	com	r24
    214c:	70 95       	com	r23
    214e:	61 95       	neg	r22
    2150:	7f 4f       	sbci	r23, 0xFF	; 255
    2152:	8f 4f       	sbci	r24, 0xFF	; 255
    2154:	9f 4f       	sbci	r25, 0xFF	; 255
    2156:	08 95       	ret

00002158 <__usmulhisi3>:
    2158:	0f d0       	rcall	.+30     	; 0x2178 <__umulhisi3>

0000215a <__usmulhisi3_tail>:
    215a:	b7 ff       	sbrs	r27, 7
    215c:	08 95       	ret
    215e:	82 1b       	sub	r24, r18
    2160:	93 0b       	sbc	r25, r19
    2162:	08 95       	ret

00002164 <__muluhisi3>:
    2164:	09 d0       	rcall	.+18     	; 0x2178 <__umulhisi3>
    2166:	a5 9f       	mul	r26, r21
    2168:	90 0d       	add	r25, r0
    216a:	b4 9f       	mul	r27, r20
    216c:	90 0d       	add	r25, r0
    216e:	a4 9f       	mul	r26, r20
    2170:	80 0d       	add	r24, r0
    2172:	91 1d       	adc	r25, r1
    2174:	11 24       	eor	r1, r1
    2176:	08 95       	ret

00002178 <__umulhisi3>:
    2178:	a2 9f       	mul	r26, r18
    217a:	b0 01       	movw	r22, r0
    217c:	b3 9f       	mul	r27, r19
    217e:	c0 01       	movw	r24, r0
    2180:	a3 9f       	mul	r26, r19
    2182:	70 0d       	add	r23, r0
    2184:	81 1d       	adc	r24, r1
    2186:	11 24       	eor	r1, r1
    2188:	91 1d       	adc	r25, r1
    218a:	b2 9f       	mul	r27, r18
    218c:	70 0d       	add	r23, r0
    218e:	81 1d       	adc	r24, r1
    2190:	11 24       	eor	r1, r1
    2192:	91 1d       	adc	r25, r1
    2194:	08 95       	ret

00002196 <_exit>:
    2196:	f8 94       	cli

00002198 <__stop_program>:
    2198:	ff cf       	rjmp	.-2      	; 0x2198 <__stop_program>
